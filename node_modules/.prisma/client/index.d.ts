
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model UserSession
 * 
 */
export type UserSession = $Result.DefaultSelection<Prisma.$UserSessionPayload>
/**
 * Model UserPreference
 * 
 */
export type UserPreference = $Result.DefaultSelection<Prisma.$UserPreferencePayload>
/**
 * Model Receipt
 * 
 */
export type Receipt = $Result.DefaultSelection<Prisma.$ReceiptPayload>
/**
 * Model FinancialTest
 * 
 */
export type FinancialTest = $Result.DefaultSelection<Prisma.$FinancialTestPayload>
/**
 * Model AIInteraction
 * 
 */
export type AIInteraction = $Result.DefaultSelection<Prisma.$AIInteractionPayload>
/**
 * Model MarketplaceProduct
 * 
 */
export type MarketplaceProduct = $Result.DefaultSelection<Prisma.$MarketplaceProductPayload>
/**
 * Model MarketplaceOrder
 * 
 */
export type MarketplaceOrder = $Result.DefaultSelection<Prisma.$MarketplaceOrderPayload>
/**
 * Model ProductReview
 * 
 */
export type ProductReview = $Result.DefaultSelection<Prisma.$ProductReviewPayload>
/**
 * Model AuditLog
 * 
 */
export type AuditLog = $Result.DefaultSelection<Prisma.$AuditLogPayload>
/**
 * Model SecurityLog
 * 
 */
export type SecurityLog = $Result.DefaultSelection<Prisma.$SecurityLogPayload>
/**
 * Model IPBlacklist
 * 
 */
export type IPBlacklist = $Result.DefaultSelection<Prisma.$IPBlacklistPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const Gender: {
  MALE: 'MALE',
  FEMALE: 'FEMALE',
  OTHER: 'OTHER',
  PREFER_NOT_TO_SAY: 'PREFER_NOT_TO_SAY'
};

export type Gender = (typeof Gender)[keyof typeof Gender]


export const FinancialLevel: {
  BEGINNER: 'BEGINNER',
  INTERMEDIATE: 'INTERMEDIATE',
  ADVANCED: 'ADVANCED'
};

export type FinancialLevel = (typeof FinancialLevel)[keyof typeof FinancialLevel]


export const Subscription: {
  FREE: 'FREE',
  PERSONAL: 'PERSONAL',
  ADVANCED: 'ADVANCED',
  FAMILY: 'FAMILY',
  BUSINESS: 'BUSINESS'
};

export type Subscription = (typeof Subscription)[keyof typeof Subscription]


export const Language: {
  SPANISH: 'SPANISH',
  ENGLISH: 'ENGLISH',
  FRENCH: 'FRENCH'
};

export type Language = (typeof Language)[keyof typeof Language]


export const Currency: {
  DOP: 'DOP',
  USD: 'USD',
  EUR: 'EUR',
  MXN: 'MXN',
  COP: 'COP'
};

export type Currency = (typeof Currency)[keyof typeof Currency]


export const Theme: {
  LIGHT: 'LIGHT',
  DARK: 'DARK',
  AUTO: 'AUTO'
};

export type Theme = (typeof Theme)[keyof typeof Theme]


export const ReceiptCategory: {
  FOOD_AND_DRINKS: 'FOOD_AND_DRINKS',
  TRANSPORTATION: 'TRANSPORTATION',
  SHOPPING: 'SHOPPING',
  ENTERTAINMENT: 'ENTERTAINMENT',
  HEALTHCARE: 'HEALTHCARE',
  EDUCATION: 'EDUCATION',
  UTILITIES: 'UTILITIES',
  INSURANCE: 'INSURANCE',
  INVESTMENTS: 'INVESTMENTS',
  SAVINGS: 'SAVINGS',
  OTHER: 'OTHER'
};

export type ReceiptCategory = (typeof ReceiptCategory)[keyof typeof ReceiptCategory]


export const PaymentMethod: {
  CASH: 'CASH',
  CREDIT_CARD: 'CREDIT_CARD',
  DEBIT_CARD: 'DEBIT_CARD',
  BANK_TRANSFER: 'BANK_TRANSFER',
  DIGITAL_WALLET: 'DIGITAL_WALLET',
  CRYPTO: 'CRYPTO',
  OTHER: 'OTHER'
};

export type PaymentMethod = (typeof PaymentMethod)[keyof typeof PaymentMethod]


export const AIInteractionType: {
  GENERAL_QUESTION: 'GENERAL_QUESTION',
  FINANCIAL_ADVICE: 'FINANCIAL_ADVICE',
  BUDGET_PLANNING: 'BUDGET_PLANNING',
  INVESTMENT_ADVICE: 'INVESTMENT_ADVICE',
  DEBT_MANAGEMENT: 'DEBT_MANAGEMENT',
  SAVINGS_STRATEGY: 'SAVINGS_STRATEGY',
  TAX_ADVICE: 'TAX_ADVICE',
  INSURANCE_ADVICE: 'INSURANCE_ADVICE',
  RETIREMENT_PLANNING: 'RETIREMENT_PLANNING',
  OTHER: 'OTHER'
};

export type AIInteractionType = (typeof AIInteractionType)[keyof typeof AIInteractionType]


export const FinancialQueryCategory: {
  BUDGETING: 'BUDGETING',
  SAVING: 'SAVING',
  INVESTING: 'INVESTING',
  DEBT: 'DEBT',
  TAXES: 'TAXES',
  INSURANCE: 'INSURANCE',
  RETIREMENT: 'RETIREMENT',
  CREDIT: 'CREDIT',
  BANKING: 'BANKING',
  CRYPTO: 'CRYPTO',
  REAL_ESTATE: 'REAL_ESTATE',
  BUSINESS_FINANCE: 'BUSINESS_FINANCE',
  EDUCATION_FINANCE: 'EDUCATION_FINANCE',
  OTHER: 'OTHER'
};

export type FinancialQueryCategory = (typeof FinancialQueryCategory)[keyof typeof FinancialQueryCategory]


export const ProductCategory: {
  MENTORING: 'MENTORING',
  COURSE: 'COURSE',
  WORKSHOP: 'WORKSHOP',
  INSURANCE: 'INSURANCE',
  TOOL: 'TOOL',
  BOOK: 'BOOK',
  OTHER: 'OTHER'
};

export type ProductCategory = (typeof ProductCategory)[keyof typeof ProductCategory]


export const OrderStatus: {
  PENDING: 'PENDING',
  CONFIRMED: 'CONFIRMED',
  CANCELLED: 'CANCELLED',
  REFUNDED: 'REFUNDED',
  COMPLETED: 'COMPLETED'
};

export type OrderStatus = (typeof OrderStatus)[keyof typeof OrderStatus]


export const PaymentGateway: {
  STRIPE: 'STRIPE',
  AZUL: 'AZUL',
  CARDNET: 'CARDNET',
  PAYPAL: 'PAYPAL',
  OTHER: 'OTHER'
};

export type PaymentGateway = (typeof PaymentGateway)[keyof typeof PaymentGateway]


export const PaymentStatus: {
  PENDING: 'PENDING',
  PROCESSING: 'PROCESSING',
  COMPLETED: 'COMPLETED',
  FAILED: 'FAILED',
  CANCELLED: 'CANCELLED',
  REFUNDED: 'REFUNDED'
};

export type PaymentStatus = (typeof PaymentStatus)[keyof typeof PaymentStatus]

}

export type Gender = $Enums.Gender

export const Gender: typeof $Enums.Gender

export type FinancialLevel = $Enums.FinancialLevel

export const FinancialLevel: typeof $Enums.FinancialLevel

export type Subscription = $Enums.Subscription

export const Subscription: typeof $Enums.Subscription

export type Language = $Enums.Language

export const Language: typeof $Enums.Language

export type Currency = $Enums.Currency

export const Currency: typeof $Enums.Currency

export type Theme = $Enums.Theme

export const Theme: typeof $Enums.Theme

export type ReceiptCategory = $Enums.ReceiptCategory

export const ReceiptCategory: typeof $Enums.ReceiptCategory

export type PaymentMethod = $Enums.PaymentMethod

export const PaymentMethod: typeof $Enums.PaymentMethod

export type AIInteractionType = $Enums.AIInteractionType

export const AIInteractionType: typeof $Enums.AIInteractionType

export type FinancialQueryCategory = $Enums.FinancialQueryCategory

export const FinancialQueryCategory: typeof $Enums.FinancialQueryCategory

export type ProductCategory = $Enums.ProductCategory

export const ProductCategory: typeof $Enums.ProductCategory

export type OrderStatus = $Enums.OrderStatus

export const OrderStatus: typeof $Enums.OrderStatus

export type PaymentGateway = $Enums.PaymentGateway

export const PaymentGateway: typeof $Enums.PaymentGateway

export type PaymentStatus = $Enums.PaymentStatus

export const PaymentStatus: typeof $Enums.PaymentStatus

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Users
 * const users = await prisma.user.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Users
   * const users = await prisma.user.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs>;

  /**
   * `prisma.userSession`: Exposes CRUD operations for the **UserSession** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UserSessions
    * const userSessions = await prisma.userSession.findMany()
    * ```
    */
  get userSession(): Prisma.UserSessionDelegate<ExtArgs>;

  /**
   * `prisma.userPreference`: Exposes CRUD operations for the **UserPreference** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UserPreferences
    * const userPreferences = await prisma.userPreference.findMany()
    * ```
    */
  get userPreference(): Prisma.UserPreferenceDelegate<ExtArgs>;

  /**
   * `prisma.receipt`: Exposes CRUD operations for the **Receipt** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Receipts
    * const receipts = await prisma.receipt.findMany()
    * ```
    */
  get receipt(): Prisma.ReceiptDelegate<ExtArgs>;

  /**
   * `prisma.financialTest`: Exposes CRUD operations for the **FinancialTest** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more FinancialTests
    * const financialTests = await prisma.financialTest.findMany()
    * ```
    */
  get financialTest(): Prisma.FinancialTestDelegate<ExtArgs>;

  /**
   * `prisma.aIInteraction`: Exposes CRUD operations for the **AIInteraction** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AIInteractions
    * const aIInteractions = await prisma.aIInteraction.findMany()
    * ```
    */
  get aIInteraction(): Prisma.AIInteractionDelegate<ExtArgs>;

  /**
   * `prisma.marketplaceProduct`: Exposes CRUD operations for the **MarketplaceProduct** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more MarketplaceProducts
    * const marketplaceProducts = await prisma.marketplaceProduct.findMany()
    * ```
    */
  get marketplaceProduct(): Prisma.MarketplaceProductDelegate<ExtArgs>;

  /**
   * `prisma.marketplaceOrder`: Exposes CRUD operations for the **MarketplaceOrder** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more MarketplaceOrders
    * const marketplaceOrders = await prisma.marketplaceOrder.findMany()
    * ```
    */
  get marketplaceOrder(): Prisma.MarketplaceOrderDelegate<ExtArgs>;

  /**
   * `prisma.productReview`: Exposes CRUD operations for the **ProductReview** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProductReviews
    * const productReviews = await prisma.productReview.findMany()
    * ```
    */
  get productReview(): Prisma.ProductReviewDelegate<ExtArgs>;

  /**
   * `prisma.auditLog`: Exposes CRUD operations for the **AuditLog** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AuditLogs
    * const auditLogs = await prisma.auditLog.findMany()
    * ```
    */
  get auditLog(): Prisma.AuditLogDelegate<ExtArgs>;

  /**
   * `prisma.securityLog`: Exposes CRUD operations for the **SecurityLog** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SecurityLogs
    * const securityLogs = await prisma.securityLog.findMany()
    * ```
    */
  get securityLog(): Prisma.SecurityLogDelegate<ExtArgs>;

  /**
   * `prisma.iPBlacklist`: Exposes CRUD operations for the **IPBlacklist** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more IPBlacklists
    * const iPBlacklists = await prisma.iPBlacklist.findMany()
    * ```
    */
  get iPBlacklist(): Prisma.IPBlacklistDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.22.0
   * Query Engine version: 605197351a3c8bdd595af2d2a9bc3025bca48ea2
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    User: 'User',
    UserSession: 'UserSession',
    UserPreference: 'UserPreference',
    Receipt: 'Receipt',
    FinancialTest: 'FinancialTest',
    AIInteraction: 'AIInteraction',
    MarketplaceProduct: 'MarketplaceProduct',
    MarketplaceOrder: 'MarketplaceOrder',
    ProductReview: 'ProductReview',
    AuditLog: 'AuditLog',
    SecurityLog: 'SecurityLog',
    IPBlacklist: 'IPBlacklist'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs, clientOptions: PrismaClientOptions }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], this['params']['clientOptions']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> = {
    meta: {
      modelProps: "user" | "userSession" | "userPreference" | "receipt" | "financialTest" | "aIInteraction" | "marketplaceProduct" | "marketplaceOrder" | "productReview" | "auditLog" | "securityLog" | "iPBlacklist"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      UserSession: {
        payload: Prisma.$UserSessionPayload<ExtArgs>
        fields: Prisma.UserSessionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserSessionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSessionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserSessionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSessionPayload>
          }
          findFirst: {
            args: Prisma.UserSessionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSessionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserSessionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSessionPayload>
          }
          findMany: {
            args: Prisma.UserSessionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSessionPayload>[]
          }
          create: {
            args: Prisma.UserSessionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSessionPayload>
          }
          createMany: {
            args: Prisma.UserSessionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserSessionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSessionPayload>[]
          }
          delete: {
            args: Prisma.UserSessionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSessionPayload>
          }
          update: {
            args: Prisma.UserSessionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSessionPayload>
          }
          deleteMany: {
            args: Prisma.UserSessionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserSessionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UserSessionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSessionPayload>
          }
          aggregate: {
            args: Prisma.UserSessionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUserSession>
          }
          groupBy: {
            args: Prisma.UserSessionGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserSessionGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserSessionCountArgs<ExtArgs>
            result: $Utils.Optional<UserSessionCountAggregateOutputType> | number
          }
        }
      }
      UserPreference: {
        payload: Prisma.$UserPreferencePayload<ExtArgs>
        fields: Prisma.UserPreferenceFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserPreferenceFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPreferencePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserPreferenceFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPreferencePayload>
          }
          findFirst: {
            args: Prisma.UserPreferenceFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPreferencePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserPreferenceFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPreferencePayload>
          }
          findMany: {
            args: Prisma.UserPreferenceFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPreferencePayload>[]
          }
          create: {
            args: Prisma.UserPreferenceCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPreferencePayload>
          }
          createMany: {
            args: Prisma.UserPreferenceCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserPreferenceCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPreferencePayload>[]
          }
          delete: {
            args: Prisma.UserPreferenceDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPreferencePayload>
          }
          update: {
            args: Prisma.UserPreferenceUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPreferencePayload>
          }
          deleteMany: {
            args: Prisma.UserPreferenceDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserPreferenceUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UserPreferenceUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPreferencePayload>
          }
          aggregate: {
            args: Prisma.UserPreferenceAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUserPreference>
          }
          groupBy: {
            args: Prisma.UserPreferenceGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserPreferenceGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserPreferenceCountArgs<ExtArgs>
            result: $Utils.Optional<UserPreferenceCountAggregateOutputType> | number
          }
        }
      }
      Receipt: {
        payload: Prisma.$ReceiptPayload<ExtArgs>
        fields: Prisma.ReceiptFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ReceiptFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceiptPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ReceiptFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceiptPayload>
          }
          findFirst: {
            args: Prisma.ReceiptFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceiptPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ReceiptFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceiptPayload>
          }
          findMany: {
            args: Prisma.ReceiptFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceiptPayload>[]
          }
          create: {
            args: Prisma.ReceiptCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceiptPayload>
          }
          createMany: {
            args: Prisma.ReceiptCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ReceiptCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceiptPayload>[]
          }
          delete: {
            args: Prisma.ReceiptDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceiptPayload>
          }
          update: {
            args: Prisma.ReceiptUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceiptPayload>
          }
          deleteMany: {
            args: Prisma.ReceiptDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ReceiptUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ReceiptUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReceiptPayload>
          }
          aggregate: {
            args: Prisma.ReceiptAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReceipt>
          }
          groupBy: {
            args: Prisma.ReceiptGroupByArgs<ExtArgs>
            result: $Utils.Optional<ReceiptGroupByOutputType>[]
          }
          count: {
            args: Prisma.ReceiptCountArgs<ExtArgs>
            result: $Utils.Optional<ReceiptCountAggregateOutputType> | number
          }
        }
      }
      FinancialTest: {
        payload: Prisma.$FinancialTestPayload<ExtArgs>
        fields: Prisma.FinancialTestFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FinancialTestFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FinancialTestPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FinancialTestFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FinancialTestPayload>
          }
          findFirst: {
            args: Prisma.FinancialTestFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FinancialTestPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FinancialTestFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FinancialTestPayload>
          }
          findMany: {
            args: Prisma.FinancialTestFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FinancialTestPayload>[]
          }
          create: {
            args: Prisma.FinancialTestCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FinancialTestPayload>
          }
          createMany: {
            args: Prisma.FinancialTestCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.FinancialTestCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FinancialTestPayload>[]
          }
          delete: {
            args: Prisma.FinancialTestDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FinancialTestPayload>
          }
          update: {
            args: Prisma.FinancialTestUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FinancialTestPayload>
          }
          deleteMany: {
            args: Prisma.FinancialTestDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FinancialTestUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.FinancialTestUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FinancialTestPayload>
          }
          aggregate: {
            args: Prisma.FinancialTestAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFinancialTest>
          }
          groupBy: {
            args: Prisma.FinancialTestGroupByArgs<ExtArgs>
            result: $Utils.Optional<FinancialTestGroupByOutputType>[]
          }
          count: {
            args: Prisma.FinancialTestCountArgs<ExtArgs>
            result: $Utils.Optional<FinancialTestCountAggregateOutputType> | number
          }
        }
      }
      AIInteraction: {
        payload: Prisma.$AIInteractionPayload<ExtArgs>
        fields: Prisma.AIInteractionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AIInteractionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AIInteractionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AIInteractionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AIInteractionPayload>
          }
          findFirst: {
            args: Prisma.AIInteractionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AIInteractionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AIInteractionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AIInteractionPayload>
          }
          findMany: {
            args: Prisma.AIInteractionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AIInteractionPayload>[]
          }
          create: {
            args: Prisma.AIInteractionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AIInteractionPayload>
          }
          createMany: {
            args: Prisma.AIInteractionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AIInteractionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AIInteractionPayload>[]
          }
          delete: {
            args: Prisma.AIInteractionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AIInteractionPayload>
          }
          update: {
            args: Prisma.AIInteractionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AIInteractionPayload>
          }
          deleteMany: {
            args: Prisma.AIInteractionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AIInteractionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.AIInteractionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AIInteractionPayload>
          }
          aggregate: {
            args: Prisma.AIInteractionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAIInteraction>
          }
          groupBy: {
            args: Prisma.AIInteractionGroupByArgs<ExtArgs>
            result: $Utils.Optional<AIInteractionGroupByOutputType>[]
          }
          count: {
            args: Prisma.AIInteractionCountArgs<ExtArgs>
            result: $Utils.Optional<AIInteractionCountAggregateOutputType> | number
          }
        }
      }
      MarketplaceProduct: {
        payload: Prisma.$MarketplaceProductPayload<ExtArgs>
        fields: Prisma.MarketplaceProductFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MarketplaceProductFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarketplaceProductPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MarketplaceProductFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarketplaceProductPayload>
          }
          findFirst: {
            args: Prisma.MarketplaceProductFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarketplaceProductPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MarketplaceProductFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarketplaceProductPayload>
          }
          findMany: {
            args: Prisma.MarketplaceProductFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarketplaceProductPayload>[]
          }
          create: {
            args: Prisma.MarketplaceProductCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarketplaceProductPayload>
          }
          createMany: {
            args: Prisma.MarketplaceProductCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MarketplaceProductCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarketplaceProductPayload>[]
          }
          delete: {
            args: Prisma.MarketplaceProductDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarketplaceProductPayload>
          }
          update: {
            args: Prisma.MarketplaceProductUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarketplaceProductPayload>
          }
          deleteMany: {
            args: Prisma.MarketplaceProductDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MarketplaceProductUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.MarketplaceProductUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarketplaceProductPayload>
          }
          aggregate: {
            args: Prisma.MarketplaceProductAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMarketplaceProduct>
          }
          groupBy: {
            args: Prisma.MarketplaceProductGroupByArgs<ExtArgs>
            result: $Utils.Optional<MarketplaceProductGroupByOutputType>[]
          }
          count: {
            args: Prisma.MarketplaceProductCountArgs<ExtArgs>
            result: $Utils.Optional<MarketplaceProductCountAggregateOutputType> | number
          }
        }
      }
      MarketplaceOrder: {
        payload: Prisma.$MarketplaceOrderPayload<ExtArgs>
        fields: Prisma.MarketplaceOrderFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MarketplaceOrderFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarketplaceOrderPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MarketplaceOrderFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarketplaceOrderPayload>
          }
          findFirst: {
            args: Prisma.MarketplaceOrderFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarketplaceOrderPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MarketplaceOrderFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarketplaceOrderPayload>
          }
          findMany: {
            args: Prisma.MarketplaceOrderFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarketplaceOrderPayload>[]
          }
          create: {
            args: Prisma.MarketplaceOrderCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarketplaceOrderPayload>
          }
          createMany: {
            args: Prisma.MarketplaceOrderCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MarketplaceOrderCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarketplaceOrderPayload>[]
          }
          delete: {
            args: Prisma.MarketplaceOrderDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarketplaceOrderPayload>
          }
          update: {
            args: Prisma.MarketplaceOrderUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarketplaceOrderPayload>
          }
          deleteMany: {
            args: Prisma.MarketplaceOrderDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MarketplaceOrderUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.MarketplaceOrderUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MarketplaceOrderPayload>
          }
          aggregate: {
            args: Prisma.MarketplaceOrderAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMarketplaceOrder>
          }
          groupBy: {
            args: Prisma.MarketplaceOrderGroupByArgs<ExtArgs>
            result: $Utils.Optional<MarketplaceOrderGroupByOutputType>[]
          }
          count: {
            args: Prisma.MarketplaceOrderCountArgs<ExtArgs>
            result: $Utils.Optional<MarketplaceOrderCountAggregateOutputType> | number
          }
        }
      }
      ProductReview: {
        payload: Prisma.$ProductReviewPayload<ExtArgs>
        fields: Prisma.ProductReviewFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProductReviewFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductReviewPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProductReviewFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductReviewPayload>
          }
          findFirst: {
            args: Prisma.ProductReviewFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductReviewPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProductReviewFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductReviewPayload>
          }
          findMany: {
            args: Prisma.ProductReviewFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductReviewPayload>[]
          }
          create: {
            args: Prisma.ProductReviewCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductReviewPayload>
          }
          createMany: {
            args: Prisma.ProductReviewCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProductReviewCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductReviewPayload>[]
          }
          delete: {
            args: Prisma.ProductReviewDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductReviewPayload>
          }
          update: {
            args: Prisma.ProductReviewUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductReviewPayload>
          }
          deleteMany: {
            args: Prisma.ProductReviewDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProductReviewUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ProductReviewUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductReviewPayload>
          }
          aggregate: {
            args: Prisma.ProductReviewAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProductReview>
          }
          groupBy: {
            args: Prisma.ProductReviewGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductReviewGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProductReviewCountArgs<ExtArgs>
            result: $Utils.Optional<ProductReviewCountAggregateOutputType> | number
          }
        }
      }
      AuditLog: {
        payload: Prisma.$AuditLogPayload<ExtArgs>
        fields: Prisma.AuditLogFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AuditLogFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditLogPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AuditLogFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditLogPayload>
          }
          findFirst: {
            args: Prisma.AuditLogFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditLogPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AuditLogFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditLogPayload>
          }
          findMany: {
            args: Prisma.AuditLogFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditLogPayload>[]
          }
          create: {
            args: Prisma.AuditLogCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditLogPayload>
          }
          createMany: {
            args: Prisma.AuditLogCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AuditLogCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditLogPayload>[]
          }
          delete: {
            args: Prisma.AuditLogDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditLogPayload>
          }
          update: {
            args: Prisma.AuditLogUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditLogPayload>
          }
          deleteMany: {
            args: Prisma.AuditLogDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AuditLogUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.AuditLogUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditLogPayload>
          }
          aggregate: {
            args: Prisma.AuditLogAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAuditLog>
          }
          groupBy: {
            args: Prisma.AuditLogGroupByArgs<ExtArgs>
            result: $Utils.Optional<AuditLogGroupByOutputType>[]
          }
          count: {
            args: Prisma.AuditLogCountArgs<ExtArgs>
            result: $Utils.Optional<AuditLogCountAggregateOutputType> | number
          }
        }
      }
      SecurityLog: {
        payload: Prisma.$SecurityLogPayload<ExtArgs>
        fields: Prisma.SecurityLogFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SecurityLogFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityLogPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SecurityLogFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityLogPayload>
          }
          findFirst: {
            args: Prisma.SecurityLogFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityLogPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SecurityLogFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityLogPayload>
          }
          findMany: {
            args: Prisma.SecurityLogFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityLogPayload>[]
          }
          create: {
            args: Prisma.SecurityLogCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityLogPayload>
          }
          createMany: {
            args: Prisma.SecurityLogCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SecurityLogCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityLogPayload>[]
          }
          delete: {
            args: Prisma.SecurityLogDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityLogPayload>
          }
          update: {
            args: Prisma.SecurityLogUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityLogPayload>
          }
          deleteMany: {
            args: Prisma.SecurityLogDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SecurityLogUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.SecurityLogUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityLogPayload>
          }
          aggregate: {
            args: Prisma.SecurityLogAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSecurityLog>
          }
          groupBy: {
            args: Prisma.SecurityLogGroupByArgs<ExtArgs>
            result: $Utils.Optional<SecurityLogGroupByOutputType>[]
          }
          count: {
            args: Prisma.SecurityLogCountArgs<ExtArgs>
            result: $Utils.Optional<SecurityLogCountAggregateOutputType> | number
          }
        }
      }
      IPBlacklist: {
        payload: Prisma.$IPBlacklistPayload<ExtArgs>
        fields: Prisma.IPBlacklistFieldRefs
        operations: {
          findUnique: {
            args: Prisma.IPBlacklistFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IPBlacklistPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.IPBlacklistFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IPBlacklistPayload>
          }
          findFirst: {
            args: Prisma.IPBlacklistFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IPBlacklistPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.IPBlacklistFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IPBlacklistPayload>
          }
          findMany: {
            args: Prisma.IPBlacklistFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IPBlacklistPayload>[]
          }
          create: {
            args: Prisma.IPBlacklistCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IPBlacklistPayload>
          }
          createMany: {
            args: Prisma.IPBlacklistCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.IPBlacklistCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IPBlacklistPayload>[]
          }
          delete: {
            args: Prisma.IPBlacklistDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IPBlacklistPayload>
          }
          update: {
            args: Prisma.IPBlacklistUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IPBlacklistPayload>
          }
          deleteMany: {
            args: Prisma.IPBlacklistDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.IPBlacklistUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.IPBlacklistUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IPBlacklistPayload>
          }
          aggregate: {
            args: Prisma.IPBlacklistAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateIPBlacklist>
          }
          groupBy: {
            args: Prisma.IPBlacklistGroupByArgs<ExtArgs>
            result: $Utils.Optional<IPBlacklistGroupByOutputType>[]
          }
          count: {
            args: Prisma.IPBlacklistCountArgs<ExtArgs>
            result: $Utils.Optional<IPBlacklistCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }


  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    financialTests: number
    marketplaceOrders: number
    receipts: number
    userSessions: number
    aiInteractions: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    financialTests?: boolean | UserCountOutputTypeCountFinancialTestsArgs
    marketplaceOrders?: boolean | UserCountOutputTypeCountMarketplaceOrdersArgs
    receipts?: boolean | UserCountOutputTypeCountReceiptsArgs
    userSessions?: boolean | UserCountOutputTypeCountUserSessionsArgs
    aiInteractions?: boolean | UserCountOutputTypeCountAiInteractionsArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountFinancialTestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FinancialTestWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountMarketplaceOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MarketplaceOrderWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountReceiptsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReceiptWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUserSessionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserSessionWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountAiInteractionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AIInteractionWhereInput
  }


  /**
   * Count Type MarketplaceProductCountOutputType
   */

  export type MarketplaceProductCountOutputType = {
    orders: number
    reviews: number
  }

  export type MarketplaceProductCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    orders?: boolean | MarketplaceProductCountOutputTypeCountOrdersArgs
    reviews?: boolean | MarketplaceProductCountOutputTypeCountReviewsArgs
  }

  // Custom InputTypes
  /**
   * MarketplaceProductCountOutputType without action
   */
  export type MarketplaceProductCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MarketplaceProductCountOutputType
     */
    select?: MarketplaceProductCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * MarketplaceProductCountOutputType without action
   */
  export type MarketplaceProductCountOutputTypeCountOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MarketplaceOrderWhereInput
  }

  /**
   * MarketplaceProductCountOutputType without action
   */
  export type MarketplaceProductCountOutputTypeCountReviewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductReviewWhereInput
  }


  /**
   * Models
   */

  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserAvgAggregateOutputType = {
    monthlyIncome: Decimal | null
    monthlyExpenses: Decimal | null
    savingsGoal: Decimal | null
  }

  export type UserSumAggregateOutputType = {
    monthlyIncome: Decimal | null
    monthlyExpenses: Decimal | null
    savingsGoal: Decimal | null
  }

  export type UserMinAggregateOutputType = {
    id: string | null
    email: string | null
    password: string | null
    firstName: string | null
    lastName: string | null
    phone: string | null
    dateOfBirth: Date | null
    gender: $Enums.Gender | null
    profileImage: string | null
    financialLevel: $Enums.FinancialLevel | null
    monthlyIncome: Decimal | null
    monthlyExpenses: Decimal | null
    savingsGoal: Decimal | null
    subscription: $Enums.Subscription | null
    subscriptionStart: Date | null
    subscriptionEnd: Date | null
    language: $Enums.Language | null
    currency: $Enums.Currency | null
    timezone: string | null
    notifications: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    lastLoginAt: Date | null
    emailVerified: boolean | null
    emailVerifiedAt: Date | null
    twoFactorEnabled: boolean | null
    twoFactorSecret: string | null
    twoFactorEnabledAt: Date | null
    twoFactorDisabledAt: Date | null
  }

  export type UserMaxAggregateOutputType = {
    id: string | null
    email: string | null
    password: string | null
    firstName: string | null
    lastName: string | null
    phone: string | null
    dateOfBirth: Date | null
    gender: $Enums.Gender | null
    profileImage: string | null
    financialLevel: $Enums.FinancialLevel | null
    monthlyIncome: Decimal | null
    monthlyExpenses: Decimal | null
    savingsGoal: Decimal | null
    subscription: $Enums.Subscription | null
    subscriptionStart: Date | null
    subscriptionEnd: Date | null
    language: $Enums.Language | null
    currency: $Enums.Currency | null
    timezone: string | null
    notifications: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    lastLoginAt: Date | null
    emailVerified: boolean | null
    emailVerifiedAt: Date | null
    twoFactorEnabled: boolean | null
    twoFactorSecret: string | null
    twoFactorEnabledAt: Date | null
    twoFactorDisabledAt: Date | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    email: number
    password: number
    firstName: number
    lastName: number
    phone: number
    dateOfBirth: number
    gender: number
    profileImage: number
    financialLevel: number
    monthlyIncome: number
    monthlyExpenses: number
    savingsGoal: number
    subscription: number
    subscriptionStart: number
    subscriptionEnd: number
    language: number
    currency: number
    timezone: number
    notifications: number
    createdAt: number
    updatedAt: number
    lastLoginAt: number
    emailVerified: number
    emailVerifiedAt: number
    twoFactorEnabled: number
    twoFactorSecret: number
    twoFactorBackupCodes: number
    twoFactorEnabledAt: number
    twoFactorDisabledAt: number
    _all: number
  }


  export type UserAvgAggregateInputType = {
    monthlyIncome?: true
    monthlyExpenses?: true
    savingsGoal?: true
  }

  export type UserSumAggregateInputType = {
    monthlyIncome?: true
    monthlyExpenses?: true
    savingsGoal?: true
  }

  export type UserMinAggregateInputType = {
    id?: true
    email?: true
    password?: true
    firstName?: true
    lastName?: true
    phone?: true
    dateOfBirth?: true
    gender?: true
    profileImage?: true
    financialLevel?: true
    monthlyIncome?: true
    monthlyExpenses?: true
    savingsGoal?: true
    subscription?: true
    subscriptionStart?: true
    subscriptionEnd?: true
    language?: true
    currency?: true
    timezone?: true
    notifications?: true
    createdAt?: true
    updatedAt?: true
    lastLoginAt?: true
    emailVerified?: true
    emailVerifiedAt?: true
    twoFactorEnabled?: true
    twoFactorSecret?: true
    twoFactorEnabledAt?: true
    twoFactorDisabledAt?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    email?: true
    password?: true
    firstName?: true
    lastName?: true
    phone?: true
    dateOfBirth?: true
    gender?: true
    profileImage?: true
    financialLevel?: true
    monthlyIncome?: true
    monthlyExpenses?: true
    savingsGoal?: true
    subscription?: true
    subscriptionStart?: true
    subscriptionEnd?: true
    language?: true
    currency?: true
    timezone?: true
    notifications?: true
    createdAt?: true
    updatedAt?: true
    lastLoginAt?: true
    emailVerified?: true
    emailVerifiedAt?: true
    twoFactorEnabled?: true
    twoFactorSecret?: true
    twoFactorEnabledAt?: true
    twoFactorDisabledAt?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    email?: true
    password?: true
    firstName?: true
    lastName?: true
    phone?: true
    dateOfBirth?: true
    gender?: true
    profileImage?: true
    financialLevel?: true
    monthlyIncome?: true
    monthlyExpenses?: true
    savingsGoal?: true
    subscription?: true
    subscriptionStart?: true
    subscriptionEnd?: true
    language?: true
    currency?: true
    timezone?: true
    notifications?: true
    createdAt?: true
    updatedAt?: true
    lastLoginAt?: true
    emailVerified?: true
    emailVerifiedAt?: true
    twoFactorEnabled?: true
    twoFactorSecret?: true
    twoFactorBackupCodes?: true
    twoFactorEnabledAt?: true
    twoFactorDisabledAt?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _avg?: UserAvgAggregateInputType
    _sum?: UserSumAggregateInputType
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: string
    email: string
    password: string
    firstName: string
    lastName: string
    phone: string | null
    dateOfBirth: Date | null
    gender: $Enums.Gender | null
    profileImage: string | null
    financialLevel: $Enums.FinancialLevel
    monthlyIncome: Decimal | null
    monthlyExpenses: Decimal | null
    savingsGoal: Decimal | null
    subscription: $Enums.Subscription
    subscriptionStart: Date | null
    subscriptionEnd: Date | null
    language: $Enums.Language
    currency: $Enums.Currency
    timezone: string
    notifications: boolean
    createdAt: Date
    updatedAt: Date
    lastLoginAt: Date | null
    emailVerified: boolean
    emailVerifiedAt: Date | null
    twoFactorEnabled: boolean
    twoFactorSecret: string | null
    twoFactorBackupCodes: string[]
    twoFactorEnabledAt: Date | null
    twoFactorDisabledAt: Date | null
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    password?: boolean
    firstName?: boolean
    lastName?: boolean
    phone?: boolean
    dateOfBirth?: boolean
    gender?: boolean
    profileImage?: boolean
    financialLevel?: boolean
    monthlyIncome?: boolean
    monthlyExpenses?: boolean
    savingsGoal?: boolean
    subscription?: boolean
    subscriptionStart?: boolean
    subscriptionEnd?: boolean
    language?: boolean
    currency?: boolean
    timezone?: boolean
    notifications?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    lastLoginAt?: boolean
    emailVerified?: boolean
    emailVerifiedAt?: boolean
    twoFactorEnabled?: boolean
    twoFactorSecret?: boolean
    twoFactorBackupCodes?: boolean
    twoFactorEnabledAt?: boolean
    twoFactorDisabledAt?: boolean
    financialTests?: boolean | User$financialTestsArgs<ExtArgs>
    marketplaceOrders?: boolean | User$marketplaceOrdersArgs<ExtArgs>
    receipts?: boolean | User$receiptsArgs<ExtArgs>
    userPreferences?: boolean | User$userPreferencesArgs<ExtArgs>
    userSessions?: boolean | User$userSessionsArgs<ExtArgs>
    aiInteractions?: boolean | User$aiInteractionsArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    password?: boolean
    firstName?: boolean
    lastName?: boolean
    phone?: boolean
    dateOfBirth?: boolean
    gender?: boolean
    profileImage?: boolean
    financialLevel?: boolean
    monthlyIncome?: boolean
    monthlyExpenses?: boolean
    savingsGoal?: boolean
    subscription?: boolean
    subscriptionStart?: boolean
    subscriptionEnd?: boolean
    language?: boolean
    currency?: boolean
    timezone?: boolean
    notifications?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    lastLoginAt?: boolean
    emailVerified?: boolean
    emailVerifiedAt?: boolean
    twoFactorEnabled?: boolean
    twoFactorSecret?: boolean
    twoFactorBackupCodes?: boolean
    twoFactorEnabledAt?: boolean
    twoFactorDisabledAt?: boolean
  }, ExtArgs["result"]["user"]>

  export type UserSelectScalar = {
    id?: boolean
    email?: boolean
    password?: boolean
    firstName?: boolean
    lastName?: boolean
    phone?: boolean
    dateOfBirth?: boolean
    gender?: boolean
    profileImage?: boolean
    financialLevel?: boolean
    monthlyIncome?: boolean
    monthlyExpenses?: boolean
    savingsGoal?: boolean
    subscription?: boolean
    subscriptionStart?: boolean
    subscriptionEnd?: boolean
    language?: boolean
    currency?: boolean
    timezone?: boolean
    notifications?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    lastLoginAt?: boolean
    emailVerified?: boolean
    emailVerifiedAt?: boolean
    twoFactorEnabled?: boolean
    twoFactorSecret?: boolean
    twoFactorBackupCodes?: boolean
    twoFactorEnabledAt?: boolean
    twoFactorDisabledAt?: boolean
  }

  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    financialTests?: boolean | User$financialTestsArgs<ExtArgs>
    marketplaceOrders?: boolean | User$marketplaceOrdersArgs<ExtArgs>
    receipts?: boolean | User$receiptsArgs<ExtArgs>
    userPreferences?: boolean | User$userPreferencesArgs<ExtArgs>
    userSessions?: boolean | User$userSessionsArgs<ExtArgs>
    aiInteractions?: boolean | User$aiInteractionsArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UserIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      financialTests: Prisma.$FinancialTestPayload<ExtArgs>[]
      marketplaceOrders: Prisma.$MarketplaceOrderPayload<ExtArgs>[]
      receipts: Prisma.$ReceiptPayload<ExtArgs>[]
      userPreferences: Prisma.$UserPreferencePayload<ExtArgs> | null
      userSessions: Prisma.$UserSessionPayload<ExtArgs>[]
      aiInteractions: Prisma.$AIInteractionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      email: string
      password: string
      firstName: string
      lastName: string
      phone: string | null
      dateOfBirth: Date | null
      gender: $Enums.Gender | null
      profileImage: string | null
      financialLevel: $Enums.FinancialLevel
      monthlyIncome: Prisma.Decimal | null
      monthlyExpenses: Prisma.Decimal | null
      savingsGoal: Prisma.Decimal | null
      subscription: $Enums.Subscription
      subscriptionStart: Date | null
      subscriptionEnd: Date | null
      language: $Enums.Language
      currency: $Enums.Currency
      timezone: string
      notifications: boolean
      createdAt: Date
      updatedAt: Date
      lastLoginAt: Date | null
      emailVerified: boolean
      emailVerifiedAt: Date | null
      twoFactorEnabled: boolean
      twoFactorSecret: string | null
      twoFactorBackupCodes: string[]
      twoFactorEnabledAt: Date | null
      twoFactorDisabledAt: Date | null
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {UserCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const userWithIdOnly = await prisma.user.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserCreateManyAndReturnArgs>(args?: SelectSubset<T, UserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    financialTests<T extends User$financialTestsArgs<ExtArgs> = {}>(args?: Subset<T, User$financialTestsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FinancialTestPayload<ExtArgs>, T, "findMany"> | Null>
    marketplaceOrders<T extends User$marketplaceOrdersArgs<ExtArgs> = {}>(args?: Subset<T, User$marketplaceOrdersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MarketplaceOrderPayload<ExtArgs>, T, "findMany"> | Null>
    receipts<T extends User$receiptsArgs<ExtArgs> = {}>(args?: Subset<T, User$receiptsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReceiptPayload<ExtArgs>, T, "findMany"> | Null>
    userPreferences<T extends User$userPreferencesArgs<ExtArgs> = {}>(args?: Subset<T, User$userPreferencesArgs<ExtArgs>>): Prisma__UserPreferenceClient<$Result.GetResult<Prisma.$UserPreferencePayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    userSessions<T extends User$userSessionsArgs<ExtArgs> = {}>(args?: Subset<T, User$userSessionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserSessionPayload<ExtArgs>, T, "findMany"> | Null>
    aiInteractions<T extends User$aiInteractionsArgs<ExtArgs> = {}>(args?: Subset<T, User$aiInteractionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AIInteractionPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */ 
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'String'>
    readonly email: FieldRef<"User", 'String'>
    readonly password: FieldRef<"User", 'String'>
    readonly firstName: FieldRef<"User", 'String'>
    readonly lastName: FieldRef<"User", 'String'>
    readonly phone: FieldRef<"User", 'String'>
    readonly dateOfBirth: FieldRef<"User", 'DateTime'>
    readonly gender: FieldRef<"User", 'Gender'>
    readonly profileImage: FieldRef<"User", 'String'>
    readonly financialLevel: FieldRef<"User", 'FinancialLevel'>
    readonly monthlyIncome: FieldRef<"User", 'Decimal'>
    readonly monthlyExpenses: FieldRef<"User", 'Decimal'>
    readonly savingsGoal: FieldRef<"User", 'Decimal'>
    readonly subscription: FieldRef<"User", 'Subscription'>
    readonly subscriptionStart: FieldRef<"User", 'DateTime'>
    readonly subscriptionEnd: FieldRef<"User", 'DateTime'>
    readonly language: FieldRef<"User", 'Language'>
    readonly currency: FieldRef<"User", 'Currency'>
    readonly timezone: FieldRef<"User", 'String'>
    readonly notifications: FieldRef<"User", 'Boolean'>
    readonly createdAt: FieldRef<"User", 'DateTime'>
    readonly updatedAt: FieldRef<"User", 'DateTime'>
    readonly lastLoginAt: FieldRef<"User", 'DateTime'>
    readonly emailVerified: FieldRef<"User", 'Boolean'>
    readonly emailVerifiedAt: FieldRef<"User", 'DateTime'>
    readonly twoFactorEnabled: FieldRef<"User", 'Boolean'>
    readonly twoFactorSecret: FieldRef<"User", 'String'>
    readonly twoFactorBackupCodes: FieldRef<"User", 'String[]'>
    readonly twoFactorEnabledAt: FieldRef<"User", 'DateTime'>
    readonly twoFactorDisabledAt: FieldRef<"User", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User createManyAndReturn
   */
  export type UserCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
  }

  /**
   * User.financialTests
   */
  export type User$financialTestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FinancialTest
     */
    select?: FinancialTestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinancialTestInclude<ExtArgs> | null
    where?: FinancialTestWhereInput
    orderBy?: FinancialTestOrderByWithRelationInput | FinancialTestOrderByWithRelationInput[]
    cursor?: FinancialTestWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FinancialTestScalarFieldEnum | FinancialTestScalarFieldEnum[]
  }

  /**
   * User.marketplaceOrders
   */
  export type User$marketplaceOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MarketplaceOrder
     */
    select?: MarketplaceOrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarketplaceOrderInclude<ExtArgs> | null
    where?: MarketplaceOrderWhereInput
    orderBy?: MarketplaceOrderOrderByWithRelationInput | MarketplaceOrderOrderByWithRelationInput[]
    cursor?: MarketplaceOrderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MarketplaceOrderScalarFieldEnum | MarketplaceOrderScalarFieldEnum[]
  }

  /**
   * User.receipts
   */
  export type User$receiptsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Receipt
     */
    select?: ReceiptSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceiptInclude<ExtArgs> | null
    where?: ReceiptWhereInput
    orderBy?: ReceiptOrderByWithRelationInput | ReceiptOrderByWithRelationInput[]
    cursor?: ReceiptWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReceiptScalarFieldEnum | ReceiptScalarFieldEnum[]
  }

  /**
   * User.userPreferences
   */
  export type User$userPreferencesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserPreference
     */
    select?: UserPreferenceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserPreferenceInclude<ExtArgs> | null
    where?: UserPreferenceWhereInput
  }

  /**
   * User.userSessions
   */
  export type User$userSessionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSession
     */
    select?: UserSessionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSessionInclude<ExtArgs> | null
    where?: UserSessionWhereInput
    orderBy?: UserSessionOrderByWithRelationInput | UserSessionOrderByWithRelationInput[]
    cursor?: UserSessionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserSessionScalarFieldEnum | UserSessionScalarFieldEnum[]
  }

  /**
   * User.aiInteractions
   */
  export type User$aiInteractionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AIInteraction
     */
    select?: AIInteractionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AIInteractionInclude<ExtArgs> | null
    where?: AIInteractionWhereInput
    orderBy?: AIInteractionOrderByWithRelationInput | AIInteractionOrderByWithRelationInput[]
    cursor?: AIInteractionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AIInteractionScalarFieldEnum | AIInteractionScalarFieldEnum[]
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
  }


  /**
   * Model UserSession
   */

  export type AggregateUserSession = {
    _count: UserSessionCountAggregateOutputType | null
    _min: UserSessionMinAggregateOutputType | null
    _max: UserSessionMaxAggregateOutputType | null
  }

  export type UserSessionMinAggregateOutputType = {
    id: string | null
    userId: string | null
    token: string | null
    refreshToken: string | null
    ipAddress: string | null
    userAgent: string | null
    isActive: boolean | null
    expiresAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserSessionMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    token: string | null
    refreshToken: string | null
    ipAddress: string | null
    userAgent: string | null
    isActive: boolean | null
    expiresAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserSessionCountAggregateOutputType = {
    id: number
    userId: number
    token: number
    refreshToken: number
    deviceInfo: number
    ipAddress: number
    userAgent: number
    isActive: number
    expiresAt: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type UserSessionMinAggregateInputType = {
    id?: true
    userId?: true
    token?: true
    refreshToken?: true
    ipAddress?: true
    userAgent?: true
    isActive?: true
    expiresAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserSessionMaxAggregateInputType = {
    id?: true
    userId?: true
    token?: true
    refreshToken?: true
    ipAddress?: true
    userAgent?: true
    isActive?: true
    expiresAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserSessionCountAggregateInputType = {
    id?: true
    userId?: true
    token?: true
    refreshToken?: true
    deviceInfo?: true
    ipAddress?: true
    userAgent?: true
    isActive?: true
    expiresAt?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type UserSessionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserSession to aggregate.
     */
    where?: UserSessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserSessions to fetch.
     */
    orderBy?: UserSessionOrderByWithRelationInput | UserSessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserSessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserSessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserSessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UserSessions
    **/
    _count?: true | UserSessionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserSessionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserSessionMaxAggregateInputType
  }

  export type GetUserSessionAggregateType<T extends UserSessionAggregateArgs> = {
        [P in keyof T & keyof AggregateUserSession]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUserSession[P]>
      : GetScalarType<T[P], AggregateUserSession[P]>
  }




  export type UserSessionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserSessionWhereInput
    orderBy?: UserSessionOrderByWithAggregationInput | UserSessionOrderByWithAggregationInput[]
    by: UserSessionScalarFieldEnum[] | UserSessionScalarFieldEnum
    having?: UserSessionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserSessionCountAggregateInputType | true
    _min?: UserSessionMinAggregateInputType
    _max?: UserSessionMaxAggregateInputType
  }

  export type UserSessionGroupByOutputType = {
    id: string
    userId: string
    token: string
    refreshToken: string
    deviceInfo: JsonValue | null
    ipAddress: string | null
    userAgent: string | null
    isActive: boolean
    expiresAt: Date
    createdAt: Date
    updatedAt: Date
    _count: UserSessionCountAggregateOutputType | null
    _min: UserSessionMinAggregateOutputType | null
    _max: UserSessionMaxAggregateOutputType | null
  }

  type GetUserSessionGroupByPayload<T extends UserSessionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserSessionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserSessionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserSessionGroupByOutputType[P]>
            : GetScalarType<T[P], UserSessionGroupByOutputType[P]>
        }
      >
    >


  export type UserSessionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    token?: boolean
    refreshToken?: boolean
    deviceInfo?: boolean
    ipAddress?: boolean
    userAgent?: boolean
    isActive?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userSession"]>

  export type UserSessionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    token?: boolean
    refreshToken?: boolean
    deviceInfo?: boolean
    ipAddress?: boolean
    userAgent?: boolean
    isActive?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userSession"]>

  export type UserSessionSelectScalar = {
    id?: boolean
    userId?: boolean
    token?: boolean
    refreshToken?: boolean
    deviceInfo?: boolean
    ipAddress?: boolean
    userAgent?: boolean
    isActive?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type UserSessionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type UserSessionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $UserSessionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "UserSession"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      token: string
      refreshToken: string
      deviceInfo: Prisma.JsonValue | null
      ipAddress: string | null
      userAgent: string | null
      isActive: boolean
      expiresAt: Date
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["userSession"]>
    composites: {}
  }

  type UserSessionGetPayload<S extends boolean | null | undefined | UserSessionDefaultArgs> = $Result.GetResult<Prisma.$UserSessionPayload, S>

  type UserSessionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<UserSessionFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UserSessionCountAggregateInputType | true
    }

  export interface UserSessionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['UserSession'], meta: { name: 'UserSession' } }
    /**
     * Find zero or one UserSession that matches the filter.
     * @param {UserSessionFindUniqueArgs} args - Arguments to find a UserSession
     * @example
     * // Get one UserSession
     * const userSession = await prisma.userSession.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserSessionFindUniqueArgs>(args: SelectSubset<T, UserSessionFindUniqueArgs<ExtArgs>>): Prisma__UserSessionClient<$Result.GetResult<Prisma.$UserSessionPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one UserSession that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {UserSessionFindUniqueOrThrowArgs} args - Arguments to find a UserSession
     * @example
     * // Get one UserSession
     * const userSession = await prisma.userSession.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserSessionFindUniqueOrThrowArgs>(args: SelectSubset<T, UserSessionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserSessionClient<$Result.GetResult<Prisma.$UserSessionPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first UserSession that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSessionFindFirstArgs} args - Arguments to find a UserSession
     * @example
     * // Get one UserSession
     * const userSession = await prisma.userSession.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserSessionFindFirstArgs>(args?: SelectSubset<T, UserSessionFindFirstArgs<ExtArgs>>): Prisma__UserSessionClient<$Result.GetResult<Prisma.$UserSessionPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first UserSession that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSessionFindFirstOrThrowArgs} args - Arguments to find a UserSession
     * @example
     * // Get one UserSession
     * const userSession = await prisma.userSession.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserSessionFindFirstOrThrowArgs>(args?: SelectSubset<T, UserSessionFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserSessionClient<$Result.GetResult<Prisma.$UserSessionPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more UserSessions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSessionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UserSessions
     * const userSessions = await prisma.userSession.findMany()
     * 
     * // Get first 10 UserSessions
     * const userSessions = await prisma.userSession.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userSessionWithIdOnly = await prisma.userSession.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserSessionFindManyArgs>(args?: SelectSubset<T, UserSessionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserSessionPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a UserSession.
     * @param {UserSessionCreateArgs} args - Arguments to create a UserSession.
     * @example
     * // Create one UserSession
     * const UserSession = await prisma.userSession.create({
     *   data: {
     *     // ... data to create a UserSession
     *   }
     * })
     * 
     */
    create<T extends UserSessionCreateArgs>(args: SelectSubset<T, UserSessionCreateArgs<ExtArgs>>): Prisma__UserSessionClient<$Result.GetResult<Prisma.$UserSessionPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many UserSessions.
     * @param {UserSessionCreateManyArgs} args - Arguments to create many UserSessions.
     * @example
     * // Create many UserSessions
     * const userSession = await prisma.userSession.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserSessionCreateManyArgs>(args?: SelectSubset<T, UserSessionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many UserSessions and returns the data saved in the database.
     * @param {UserSessionCreateManyAndReturnArgs} args - Arguments to create many UserSessions.
     * @example
     * // Create many UserSessions
     * const userSession = await prisma.userSession.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many UserSessions and only return the `id`
     * const userSessionWithIdOnly = await prisma.userSession.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserSessionCreateManyAndReturnArgs>(args?: SelectSubset<T, UserSessionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserSessionPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a UserSession.
     * @param {UserSessionDeleteArgs} args - Arguments to delete one UserSession.
     * @example
     * // Delete one UserSession
     * const UserSession = await prisma.userSession.delete({
     *   where: {
     *     // ... filter to delete one UserSession
     *   }
     * })
     * 
     */
    delete<T extends UserSessionDeleteArgs>(args: SelectSubset<T, UserSessionDeleteArgs<ExtArgs>>): Prisma__UserSessionClient<$Result.GetResult<Prisma.$UserSessionPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one UserSession.
     * @param {UserSessionUpdateArgs} args - Arguments to update one UserSession.
     * @example
     * // Update one UserSession
     * const userSession = await prisma.userSession.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserSessionUpdateArgs>(args: SelectSubset<T, UserSessionUpdateArgs<ExtArgs>>): Prisma__UserSessionClient<$Result.GetResult<Prisma.$UserSessionPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more UserSessions.
     * @param {UserSessionDeleteManyArgs} args - Arguments to filter UserSessions to delete.
     * @example
     * // Delete a few UserSessions
     * const { count } = await prisma.userSession.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserSessionDeleteManyArgs>(args?: SelectSubset<T, UserSessionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UserSessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSessionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UserSessions
     * const userSession = await prisma.userSession.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserSessionUpdateManyArgs>(args: SelectSubset<T, UserSessionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one UserSession.
     * @param {UserSessionUpsertArgs} args - Arguments to update or create a UserSession.
     * @example
     * // Update or create a UserSession
     * const userSession = await prisma.userSession.upsert({
     *   create: {
     *     // ... data to create a UserSession
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UserSession we want to update
     *   }
     * })
     */
    upsert<T extends UserSessionUpsertArgs>(args: SelectSubset<T, UserSessionUpsertArgs<ExtArgs>>): Prisma__UserSessionClient<$Result.GetResult<Prisma.$UserSessionPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of UserSessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSessionCountArgs} args - Arguments to filter UserSessions to count.
     * @example
     * // Count the number of UserSessions
     * const count = await prisma.userSession.count({
     *   where: {
     *     // ... the filter for the UserSessions we want to count
     *   }
     * })
    **/
    count<T extends UserSessionCountArgs>(
      args?: Subset<T, UserSessionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserSessionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a UserSession.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSessionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserSessionAggregateArgs>(args: Subset<T, UserSessionAggregateArgs>): Prisma.PrismaPromise<GetUserSessionAggregateType<T>>

    /**
     * Group by UserSession.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSessionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserSessionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserSessionGroupByArgs['orderBy'] }
        : { orderBy?: UserSessionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserSessionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserSessionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the UserSession model
   */
  readonly fields: UserSessionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for UserSession.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserSessionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the UserSession model
   */ 
  interface UserSessionFieldRefs {
    readonly id: FieldRef<"UserSession", 'String'>
    readonly userId: FieldRef<"UserSession", 'String'>
    readonly token: FieldRef<"UserSession", 'String'>
    readonly refreshToken: FieldRef<"UserSession", 'String'>
    readonly deviceInfo: FieldRef<"UserSession", 'Json'>
    readonly ipAddress: FieldRef<"UserSession", 'String'>
    readonly userAgent: FieldRef<"UserSession", 'String'>
    readonly isActive: FieldRef<"UserSession", 'Boolean'>
    readonly expiresAt: FieldRef<"UserSession", 'DateTime'>
    readonly createdAt: FieldRef<"UserSession", 'DateTime'>
    readonly updatedAt: FieldRef<"UserSession", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * UserSession findUnique
   */
  export type UserSessionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSession
     */
    select?: UserSessionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSessionInclude<ExtArgs> | null
    /**
     * Filter, which UserSession to fetch.
     */
    where: UserSessionWhereUniqueInput
  }

  /**
   * UserSession findUniqueOrThrow
   */
  export type UserSessionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSession
     */
    select?: UserSessionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSessionInclude<ExtArgs> | null
    /**
     * Filter, which UserSession to fetch.
     */
    where: UserSessionWhereUniqueInput
  }

  /**
   * UserSession findFirst
   */
  export type UserSessionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSession
     */
    select?: UserSessionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSessionInclude<ExtArgs> | null
    /**
     * Filter, which UserSession to fetch.
     */
    where?: UserSessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserSessions to fetch.
     */
    orderBy?: UserSessionOrderByWithRelationInput | UserSessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserSessions.
     */
    cursor?: UserSessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserSessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserSessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserSessions.
     */
    distinct?: UserSessionScalarFieldEnum | UserSessionScalarFieldEnum[]
  }

  /**
   * UserSession findFirstOrThrow
   */
  export type UserSessionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSession
     */
    select?: UserSessionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSessionInclude<ExtArgs> | null
    /**
     * Filter, which UserSession to fetch.
     */
    where?: UserSessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserSessions to fetch.
     */
    orderBy?: UserSessionOrderByWithRelationInput | UserSessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserSessions.
     */
    cursor?: UserSessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserSessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserSessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserSessions.
     */
    distinct?: UserSessionScalarFieldEnum | UserSessionScalarFieldEnum[]
  }

  /**
   * UserSession findMany
   */
  export type UserSessionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSession
     */
    select?: UserSessionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSessionInclude<ExtArgs> | null
    /**
     * Filter, which UserSessions to fetch.
     */
    where?: UserSessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserSessions to fetch.
     */
    orderBy?: UserSessionOrderByWithRelationInput | UserSessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UserSessions.
     */
    cursor?: UserSessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserSessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserSessions.
     */
    skip?: number
    distinct?: UserSessionScalarFieldEnum | UserSessionScalarFieldEnum[]
  }

  /**
   * UserSession create
   */
  export type UserSessionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSession
     */
    select?: UserSessionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSessionInclude<ExtArgs> | null
    /**
     * The data needed to create a UserSession.
     */
    data: XOR<UserSessionCreateInput, UserSessionUncheckedCreateInput>
  }

  /**
   * UserSession createMany
   */
  export type UserSessionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many UserSessions.
     */
    data: UserSessionCreateManyInput | UserSessionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * UserSession createManyAndReturn
   */
  export type UserSessionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSession
     */
    select?: UserSessionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many UserSessions.
     */
    data: UserSessionCreateManyInput | UserSessionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSessionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * UserSession update
   */
  export type UserSessionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSession
     */
    select?: UserSessionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSessionInclude<ExtArgs> | null
    /**
     * The data needed to update a UserSession.
     */
    data: XOR<UserSessionUpdateInput, UserSessionUncheckedUpdateInput>
    /**
     * Choose, which UserSession to update.
     */
    where: UserSessionWhereUniqueInput
  }

  /**
   * UserSession updateMany
   */
  export type UserSessionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update UserSessions.
     */
    data: XOR<UserSessionUpdateManyMutationInput, UserSessionUncheckedUpdateManyInput>
    /**
     * Filter which UserSessions to update
     */
    where?: UserSessionWhereInput
  }

  /**
   * UserSession upsert
   */
  export type UserSessionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSession
     */
    select?: UserSessionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSessionInclude<ExtArgs> | null
    /**
     * The filter to search for the UserSession to update in case it exists.
     */
    where: UserSessionWhereUniqueInput
    /**
     * In case the UserSession found by the `where` argument doesn't exist, create a new UserSession with this data.
     */
    create: XOR<UserSessionCreateInput, UserSessionUncheckedCreateInput>
    /**
     * In case the UserSession was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserSessionUpdateInput, UserSessionUncheckedUpdateInput>
  }

  /**
   * UserSession delete
   */
  export type UserSessionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSession
     */
    select?: UserSessionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSessionInclude<ExtArgs> | null
    /**
     * Filter which UserSession to delete.
     */
    where: UserSessionWhereUniqueInput
  }

  /**
   * UserSession deleteMany
   */
  export type UserSessionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserSessions to delete
     */
    where?: UserSessionWhereInput
  }

  /**
   * UserSession without action
   */
  export type UserSessionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSession
     */
    select?: UserSessionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSessionInclude<ExtArgs> | null
  }


  /**
   * Model UserPreference
   */

  export type AggregateUserPreference = {
    _count: UserPreferenceCountAggregateOutputType | null
    _min: UserPreferenceMinAggregateOutputType | null
    _max: UserPreferenceMaxAggregateOutputType | null
  }

  export type UserPreferenceMinAggregateOutputType = {
    id: string | null
    userId: string | null
    theme: $Enums.Theme | null
    pushNotifications: boolean | null
    emailNotifications: boolean | null
    smsNotifications: boolean | null
    weeklyReports: boolean | null
    monthlyReports: boolean | null
    aiRecommendations: boolean | null
    locationServices: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserPreferenceMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    theme: $Enums.Theme | null
    pushNotifications: boolean | null
    emailNotifications: boolean | null
    smsNotifications: boolean | null
    weeklyReports: boolean | null
    monthlyReports: boolean | null
    aiRecommendations: boolean | null
    locationServices: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserPreferenceCountAggregateOutputType = {
    id: number
    userId: number
    theme: number
    pushNotifications: number
    emailNotifications: number
    smsNotifications: number
    weeklyReports: number
    monthlyReports: number
    aiRecommendations: number
    locationServices: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type UserPreferenceMinAggregateInputType = {
    id?: true
    userId?: true
    theme?: true
    pushNotifications?: true
    emailNotifications?: true
    smsNotifications?: true
    weeklyReports?: true
    monthlyReports?: true
    aiRecommendations?: true
    locationServices?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserPreferenceMaxAggregateInputType = {
    id?: true
    userId?: true
    theme?: true
    pushNotifications?: true
    emailNotifications?: true
    smsNotifications?: true
    weeklyReports?: true
    monthlyReports?: true
    aiRecommendations?: true
    locationServices?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserPreferenceCountAggregateInputType = {
    id?: true
    userId?: true
    theme?: true
    pushNotifications?: true
    emailNotifications?: true
    smsNotifications?: true
    weeklyReports?: true
    monthlyReports?: true
    aiRecommendations?: true
    locationServices?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type UserPreferenceAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserPreference to aggregate.
     */
    where?: UserPreferenceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserPreferences to fetch.
     */
    orderBy?: UserPreferenceOrderByWithRelationInput | UserPreferenceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserPreferenceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserPreferences from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserPreferences.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UserPreferences
    **/
    _count?: true | UserPreferenceCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserPreferenceMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserPreferenceMaxAggregateInputType
  }

  export type GetUserPreferenceAggregateType<T extends UserPreferenceAggregateArgs> = {
        [P in keyof T & keyof AggregateUserPreference]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUserPreference[P]>
      : GetScalarType<T[P], AggregateUserPreference[P]>
  }




  export type UserPreferenceGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserPreferenceWhereInput
    orderBy?: UserPreferenceOrderByWithAggregationInput | UserPreferenceOrderByWithAggregationInput[]
    by: UserPreferenceScalarFieldEnum[] | UserPreferenceScalarFieldEnum
    having?: UserPreferenceScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserPreferenceCountAggregateInputType | true
    _min?: UserPreferenceMinAggregateInputType
    _max?: UserPreferenceMaxAggregateInputType
  }

  export type UserPreferenceGroupByOutputType = {
    id: string
    userId: string
    theme: $Enums.Theme
    pushNotifications: boolean
    emailNotifications: boolean
    smsNotifications: boolean
    weeklyReports: boolean
    monthlyReports: boolean
    aiRecommendations: boolean
    locationServices: boolean
    createdAt: Date
    updatedAt: Date
    _count: UserPreferenceCountAggregateOutputType | null
    _min: UserPreferenceMinAggregateOutputType | null
    _max: UserPreferenceMaxAggregateOutputType | null
  }

  type GetUserPreferenceGroupByPayload<T extends UserPreferenceGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserPreferenceGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserPreferenceGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserPreferenceGroupByOutputType[P]>
            : GetScalarType<T[P], UserPreferenceGroupByOutputType[P]>
        }
      >
    >


  export type UserPreferenceSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    theme?: boolean
    pushNotifications?: boolean
    emailNotifications?: boolean
    smsNotifications?: boolean
    weeklyReports?: boolean
    monthlyReports?: boolean
    aiRecommendations?: boolean
    locationServices?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userPreference"]>

  export type UserPreferenceSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    theme?: boolean
    pushNotifications?: boolean
    emailNotifications?: boolean
    smsNotifications?: boolean
    weeklyReports?: boolean
    monthlyReports?: boolean
    aiRecommendations?: boolean
    locationServices?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userPreference"]>

  export type UserPreferenceSelectScalar = {
    id?: boolean
    userId?: boolean
    theme?: boolean
    pushNotifications?: boolean
    emailNotifications?: boolean
    smsNotifications?: boolean
    weeklyReports?: boolean
    monthlyReports?: boolean
    aiRecommendations?: boolean
    locationServices?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type UserPreferenceInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type UserPreferenceIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $UserPreferencePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "UserPreference"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      theme: $Enums.Theme
      pushNotifications: boolean
      emailNotifications: boolean
      smsNotifications: boolean
      weeklyReports: boolean
      monthlyReports: boolean
      aiRecommendations: boolean
      locationServices: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["userPreference"]>
    composites: {}
  }

  type UserPreferenceGetPayload<S extends boolean | null | undefined | UserPreferenceDefaultArgs> = $Result.GetResult<Prisma.$UserPreferencePayload, S>

  type UserPreferenceCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<UserPreferenceFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UserPreferenceCountAggregateInputType | true
    }

  export interface UserPreferenceDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['UserPreference'], meta: { name: 'UserPreference' } }
    /**
     * Find zero or one UserPreference that matches the filter.
     * @param {UserPreferenceFindUniqueArgs} args - Arguments to find a UserPreference
     * @example
     * // Get one UserPreference
     * const userPreference = await prisma.userPreference.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserPreferenceFindUniqueArgs>(args: SelectSubset<T, UserPreferenceFindUniqueArgs<ExtArgs>>): Prisma__UserPreferenceClient<$Result.GetResult<Prisma.$UserPreferencePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one UserPreference that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {UserPreferenceFindUniqueOrThrowArgs} args - Arguments to find a UserPreference
     * @example
     * // Get one UserPreference
     * const userPreference = await prisma.userPreference.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserPreferenceFindUniqueOrThrowArgs>(args: SelectSubset<T, UserPreferenceFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserPreferenceClient<$Result.GetResult<Prisma.$UserPreferencePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first UserPreference that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserPreferenceFindFirstArgs} args - Arguments to find a UserPreference
     * @example
     * // Get one UserPreference
     * const userPreference = await prisma.userPreference.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserPreferenceFindFirstArgs>(args?: SelectSubset<T, UserPreferenceFindFirstArgs<ExtArgs>>): Prisma__UserPreferenceClient<$Result.GetResult<Prisma.$UserPreferencePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first UserPreference that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserPreferenceFindFirstOrThrowArgs} args - Arguments to find a UserPreference
     * @example
     * // Get one UserPreference
     * const userPreference = await prisma.userPreference.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserPreferenceFindFirstOrThrowArgs>(args?: SelectSubset<T, UserPreferenceFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserPreferenceClient<$Result.GetResult<Prisma.$UserPreferencePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more UserPreferences that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserPreferenceFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UserPreferences
     * const userPreferences = await prisma.userPreference.findMany()
     * 
     * // Get first 10 UserPreferences
     * const userPreferences = await prisma.userPreference.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userPreferenceWithIdOnly = await prisma.userPreference.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserPreferenceFindManyArgs>(args?: SelectSubset<T, UserPreferenceFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPreferencePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a UserPreference.
     * @param {UserPreferenceCreateArgs} args - Arguments to create a UserPreference.
     * @example
     * // Create one UserPreference
     * const UserPreference = await prisma.userPreference.create({
     *   data: {
     *     // ... data to create a UserPreference
     *   }
     * })
     * 
     */
    create<T extends UserPreferenceCreateArgs>(args: SelectSubset<T, UserPreferenceCreateArgs<ExtArgs>>): Prisma__UserPreferenceClient<$Result.GetResult<Prisma.$UserPreferencePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many UserPreferences.
     * @param {UserPreferenceCreateManyArgs} args - Arguments to create many UserPreferences.
     * @example
     * // Create many UserPreferences
     * const userPreference = await prisma.userPreference.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserPreferenceCreateManyArgs>(args?: SelectSubset<T, UserPreferenceCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many UserPreferences and returns the data saved in the database.
     * @param {UserPreferenceCreateManyAndReturnArgs} args - Arguments to create many UserPreferences.
     * @example
     * // Create many UserPreferences
     * const userPreference = await prisma.userPreference.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many UserPreferences and only return the `id`
     * const userPreferenceWithIdOnly = await prisma.userPreference.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserPreferenceCreateManyAndReturnArgs>(args?: SelectSubset<T, UserPreferenceCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPreferencePayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a UserPreference.
     * @param {UserPreferenceDeleteArgs} args - Arguments to delete one UserPreference.
     * @example
     * // Delete one UserPreference
     * const UserPreference = await prisma.userPreference.delete({
     *   where: {
     *     // ... filter to delete one UserPreference
     *   }
     * })
     * 
     */
    delete<T extends UserPreferenceDeleteArgs>(args: SelectSubset<T, UserPreferenceDeleteArgs<ExtArgs>>): Prisma__UserPreferenceClient<$Result.GetResult<Prisma.$UserPreferencePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one UserPreference.
     * @param {UserPreferenceUpdateArgs} args - Arguments to update one UserPreference.
     * @example
     * // Update one UserPreference
     * const userPreference = await prisma.userPreference.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserPreferenceUpdateArgs>(args: SelectSubset<T, UserPreferenceUpdateArgs<ExtArgs>>): Prisma__UserPreferenceClient<$Result.GetResult<Prisma.$UserPreferencePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more UserPreferences.
     * @param {UserPreferenceDeleteManyArgs} args - Arguments to filter UserPreferences to delete.
     * @example
     * // Delete a few UserPreferences
     * const { count } = await prisma.userPreference.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserPreferenceDeleteManyArgs>(args?: SelectSubset<T, UserPreferenceDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UserPreferences.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserPreferenceUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UserPreferences
     * const userPreference = await prisma.userPreference.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserPreferenceUpdateManyArgs>(args: SelectSubset<T, UserPreferenceUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one UserPreference.
     * @param {UserPreferenceUpsertArgs} args - Arguments to update or create a UserPreference.
     * @example
     * // Update or create a UserPreference
     * const userPreference = await prisma.userPreference.upsert({
     *   create: {
     *     // ... data to create a UserPreference
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UserPreference we want to update
     *   }
     * })
     */
    upsert<T extends UserPreferenceUpsertArgs>(args: SelectSubset<T, UserPreferenceUpsertArgs<ExtArgs>>): Prisma__UserPreferenceClient<$Result.GetResult<Prisma.$UserPreferencePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of UserPreferences.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserPreferenceCountArgs} args - Arguments to filter UserPreferences to count.
     * @example
     * // Count the number of UserPreferences
     * const count = await prisma.userPreference.count({
     *   where: {
     *     // ... the filter for the UserPreferences we want to count
     *   }
     * })
    **/
    count<T extends UserPreferenceCountArgs>(
      args?: Subset<T, UserPreferenceCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserPreferenceCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a UserPreference.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserPreferenceAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserPreferenceAggregateArgs>(args: Subset<T, UserPreferenceAggregateArgs>): Prisma.PrismaPromise<GetUserPreferenceAggregateType<T>>

    /**
     * Group by UserPreference.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserPreferenceGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserPreferenceGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserPreferenceGroupByArgs['orderBy'] }
        : { orderBy?: UserPreferenceGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserPreferenceGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserPreferenceGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the UserPreference model
   */
  readonly fields: UserPreferenceFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for UserPreference.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserPreferenceClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the UserPreference model
   */ 
  interface UserPreferenceFieldRefs {
    readonly id: FieldRef<"UserPreference", 'String'>
    readonly userId: FieldRef<"UserPreference", 'String'>
    readonly theme: FieldRef<"UserPreference", 'Theme'>
    readonly pushNotifications: FieldRef<"UserPreference", 'Boolean'>
    readonly emailNotifications: FieldRef<"UserPreference", 'Boolean'>
    readonly smsNotifications: FieldRef<"UserPreference", 'Boolean'>
    readonly weeklyReports: FieldRef<"UserPreference", 'Boolean'>
    readonly monthlyReports: FieldRef<"UserPreference", 'Boolean'>
    readonly aiRecommendations: FieldRef<"UserPreference", 'Boolean'>
    readonly locationServices: FieldRef<"UserPreference", 'Boolean'>
    readonly createdAt: FieldRef<"UserPreference", 'DateTime'>
    readonly updatedAt: FieldRef<"UserPreference", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * UserPreference findUnique
   */
  export type UserPreferenceFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserPreference
     */
    select?: UserPreferenceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserPreferenceInclude<ExtArgs> | null
    /**
     * Filter, which UserPreference to fetch.
     */
    where: UserPreferenceWhereUniqueInput
  }

  /**
   * UserPreference findUniqueOrThrow
   */
  export type UserPreferenceFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserPreference
     */
    select?: UserPreferenceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserPreferenceInclude<ExtArgs> | null
    /**
     * Filter, which UserPreference to fetch.
     */
    where: UserPreferenceWhereUniqueInput
  }

  /**
   * UserPreference findFirst
   */
  export type UserPreferenceFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserPreference
     */
    select?: UserPreferenceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserPreferenceInclude<ExtArgs> | null
    /**
     * Filter, which UserPreference to fetch.
     */
    where?: UserPreferenceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserPreferences to fetch.
     */
    orderBy?: UserPreferenceOrderByWithRelationInput | UserPreferenceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserPreferences.
     */
    cursor?: UserPreferenceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserPreferences from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserPreferences.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserPreferences.
     */
    distinct?: UserPreferenceScalarFieldEnum | UserPreferenceScalarFieldEnum[]
  }

  /**
   * UserPreference findFirstOrThrow
   */
  export type UserPreferenceFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserPreference
     */
    select?: UserPreferenceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserPreferenceInclude<ExtArgs> | null
    /**
     * Filter, which UserPreference to fetch.
     */
    where?: UserPreferenceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserPreferences to fetch.
     */
    orderBy?: UserPreferenceOrderByWithRelationInput | UserPreferenceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserPreferences.
     */
    cursor?: UserPreferenceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserPreferences from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserPreferences.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserPreferences.
     */
    distinct?: UserPreferenceScalarFieldEnum | UserPreferenceScalarFieldEnum[]
  }

  /**
   * UserPreference findMany
   */
  export type UserPreferenceFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserPreference
     */
    select?: UserPreferenceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserPreferenceInclude<ExtArgs> | null
    /**
     * Filter, which UserPreferences to fetch.
     */
    where?: UserPreferenceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserPreferences to fetch.
     */
    orderBy?: UserPreferenceOrderByWithRelationInput | UserPreferenceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UserPreferences.
     */
    cursor?: UserPreferenceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserPreferences from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserPreferences.
     */
    skip?: number
    distinct?: UserPreferenceScalarFieldEnum | UserPreferenceScalarFieldEnum[]
  }

  /**
   * UserPreference create
   */
  export type UserPreferenceCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserPreference
     */
    select?: UserPreferenceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserPreferenceInclude<ExtArgs> | null
    /**
     * The data needed to create a UserPreference.
     */
    data: XOR<UserPreferenceCreateInput, UserPreferenceUncheckedCreateInput>
  }

  /**
   * UserPreference createMany
   */
  export type UserPreferenceCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many UserPreferences.
     */
    data: UserPreferenceCreateManyInput | UserPreferenceCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * UserPreference createManyAndReturn
   */
  export type UserPreferenceCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserPreference
     */
    select?: UserPreferenceSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many UserPreferences.
     */
    data: UserPreferenceCreateManyInput | UserPreferenceCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserPreferenceIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * UserPreference update
   */
  export type UserPreferenceUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserPreference
     */
    select?: UserPreferenceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserPreferenceInclude<ExtArgs> | null
    /**
     * The data needed to update a UserPreference.
     */
    data: XOR<UserPreferenceUpdateInput, UserPreferenceUncheckedUpdateInput>
    /**
     * Choose, which UserPreference to update.
     */
    where: UserPreferenceWhereUniqueInput
  }

  /**
   * UserPreference updateMany
   */
  export type UserPreferenceUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update UserPreferences.
     */
    data: XOR<UserPreferenceUpdateManyMutationInput, UserPreferenceUncheckedUpdateManyInput>
    /**
     * Filter which UserPreferences to update
     */
    where?: UserPreferenceWhereInput
  }

  /**
   * UserPreference upsert
   */
  export type UserPreferenceUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserPreference
     */
    select?: UserPreferenceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserPreferenceInclude<ExtArgs> | null
    /**
     * The filter to search for the UserPreference to update in case it exists.
     */
    where: UserPreferenceWhereUniqueInput
    /**
     * In case the UserPreference found by the `where` argument doesn't exist, create a new UserPreference with this data.
     */
    create: XOR<UserPreferenceCreateInput, UserPreferenceUncheckedCreateInput>
    /**
     * In case the UserPreference was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserPreferenceUpdateInput, UserPreferenceUncheckedUpdateInput>
  }

  /**
   * UserPreference delete
   */
  export type UserPreferenceDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserPreference
     */
    select?: UserPreferenceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserPreferenceInclude<ExtArgs> | null
    /**
     * Filter which UserPreference to delete.
     */
    where: UserPreferenceWhereUniqueInput
  }

  /**
   * UserPreference deleteMany
   */
  export type UserPreferenceDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserPreferences to delete
     */
    where?: UserPreferenceWhereInput
  }

  /**
   * UserPreference without action
   */
  export type UserPreferenceDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserPreference
     */
    select?: UserPreferenceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserPreferenceInclude<ExtArgs> | null
  }


  /**
   * Model Receipt
   */

  export type AggregateReceipt = {
    _count: ReceiptCountAggregateOutputType | null
    _avg: ReceiptAvgAggregateOutputType | null
    _sum: ReceiptSumAggregateOutputType | null
    _min: ReceiptMinAggregateOutputType | null
    _max: ReceiptMaxAggregateOutputType | null
  }

  export type ReceiptAvgAggregateOutputType = {
    amount: Decimal | null
    ocrConfidence: number | null
  }

  export type ReceiptSumAggregateOutputType = {
    amount: Decimal | null
    ocrConfidence: number | null
  }

  export type ReceiptMinAggregateOutputType = {
    id: string | null
    userId: string | null
    imageUrl: string | null
    merchantName: string | null
    amount: Decimal | null
    currency: $Enums.Currency | null
    transactionDate: Date | null
    category: $Enums.ReceiptCategory | null
    subcategory: string | null
    paymentMethod: $Enums.PaymentMethod | null
    location: string | null
    notes: string | null
    ocrConfidence: number | null
    ocrRawText: string | null
    ocrProcessed: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ReceiptMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    imageUrl: string | null
    merchantName: string | null
    amount: Decimal | null
    currency: $Enums.Currency | null
    transactionDate: Date | null
    category: $Enums.ReceiptCategory | null
    subcategory: string | null
    paymentMethod: $Enums.PaymentMethod | null
    location: string | null
    notes: string | null
    ocrConfidence: number | null
    ocrRawText: string | null
    ocrProcessed: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ReceiptCountAggregateOutputType = {
    id: number
    userId: number
    imageUrl: number
    merchantName: number
    amount: number
    currency: number
    transactionDate: number
    category: number
    subcategory: number
    paymentMethod: number
    location: number
    notes: number
    ocrConfidence: number
    ocrRawText: number
    ocrProcessed: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ReceiptAvgAggregateInputType = {
    amount?: true
    ocrConfidence?: true
  }

  export type ReceiptSumAggregateInputType = {
    amount?: true
    ocrConfidence?: true
  }

  export type ReceiptMinAggregateInputType = {
    id?: true
    userId?: true
    imageUrl?: true
    merchantName?: true
    amount?: true
    currency?: true
    transactionDate?: true
    category?: true
    subcategory?: true
    paymentMethod?: true
    location?: true
    notes?: true
    ocrConfidence?: true
    ocrRawText?: true
    ocrProcessed?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ReceiptMaxAggregateInputType = {
    id?: true
    userId?: true
    imageUrl?: true
    merchantName?: true
    amount?: true
    currency?: true
    transactionDate?: true
    category?: true
    subcategory?: true
    paymentMethod?: true
    location?: true
    notes?: true
    ocrConfidence?: true
    ocrRawText?: true
    ocrProcessed?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ReceiptCountAggregateInputType = {
    id?: true
    userId?: true
    imageUrl?: true
    merchantName?: true
    amount?: true
    currency?: true
    transactionDate?: true
    category?: true
    subcategory?: true
    paymentMethod?: true
    location?: true
    notes?: true
    ocrConfidence?: true
    ocrRawText?: true
    ocrProcessed?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ReceiptAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Receipt to aggregate.
     */
    where?: ReceiptWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Receipts to fetch.
     */
    orderBy?: ReceiptOrderByWithRelationInput | ReceiptOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ReceiptWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Receipts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Receipts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Receipts
    **/
    _count?: true | ReceiptCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ReceiptAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ReceiptSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ReceiptMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ReceiptMaxAggregateInputType
  }

  export type GetReceiptAggregateType<T extends ReceiptAggregateArgs> = {
        [P in keyof T & keyof AggregateReceipt]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReceipt[P]>
      : GetScalarType<T[P], AggregateReceipt[P]>
  }




  export type ReceiptGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReceiptWhereInput
    orderBy?: ReceiptOrderByWithAggregationInput | ReceiptOrderByWithAggregationInput[]
    by: ReceiptScalarFieldEnum[] | ReceiptScalarFieldEnum
    having?: ReceiptScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReceiptCountAggregateInputType | true
    _avg?: ReceiptAvgAggregateInputType
    _sum?: ReceiptSumAggregateInputType
    _min?: ReceiptMinAggregateInputType
    _max?: ReceiptMaxAggregateInputType
  }

  export type ReceiptGroupByOutputType = {
    id: string
    userId: string
    imageUrl: string | null
    merchantName: string
    amount: Decimal
    currency: $Enums.Currency
    transactionDate: Date
    category: $Enums.ReceiptCategory
    subcategory: string | null
    paymentMethod: $Enums.PaymentMethod | null
    location: string | null
    notes: string | null
    ocrConfidence: number | null
    ocrRawText: string | null
    ocrProcessed: boolean
    createdAt: Date
    updatedAt: Date
    _count: ReceiptCountAggregateOutputType | null
    _avg: ReceiptAvgAggregateOutputType | null
    _sum: ReceiptSumAggregateOutputType | null
    _min: ReceiptMinAggregateOutputType | null
    _max: ReceiptMaxAggregateOutputType | null
  }

  type GetReceiptGroupByPayload<T extends ReceiptGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ReceiptGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ReceiptGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ReceiptGroupByOutputType[P]>
            : GetScalarType<T[P], ReceiptGroupByOutputType[P]>
        }
      >
    >


  export type ReceiptSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    imageUrl?: boolean
    merchantName?: boolean
    amount?: boolean
    currency?: boolean
    transactionDate?: boolean
    category?: boolean
    subcategory?: boolean
    paymentMethod?: boolean
    location?: boolean
    notes?: boolean
    ocrConfidence?: boolean
    ocrRawText?: boolean
    ocrProcessed?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["receipt"]>

  export type ReceiptSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    imageUrl?: boolean
    merchantName?: boolean
    amount?: boolean
    currency?: boolean
    transactionDate?: boolean
    category?: boolean
    subcategory?: boolean
    paymentMethod?: boolean
    location?: boolean
    notes?: boolean
    ocrConfidence?: boolean
    ocrRawText?: boolean
    ocrProcessed?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["receipt"]>

  export type ReceiptSelectScalar = {
    id?: boolean
    userId?: boolean
    imageUrl?: boolean
    merchantName?: boolean
    amount?: boolean
    currency?: boolean
    transactionDate?: boolean
    category?: boolean
    subcategory?: boolean
    paymentMethod?: boolean
    location?: boolean
    notes?: boolean
    ocrConfidence?: boolean
    ocrRawText?: boolean
    ocrProcessed?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ReceiptInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type ReceiptIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $ReceiptPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Receipt"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      imageUrl: string | null
      merchantName: string
      amount: Prisma.Decimal
      currency: $Enums.Currency
      transactionDate: Date
      category: $Enums.ReceiptCategory
      subcategory: string | null
      paymentMethod: $Enums.PaymentMethod | null
      location: string | null
      notes: string | null
      ocrConfidence: number | null
      ocrRawText: string | null
      ocrProcessed: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["receipt"]>
    composites: {}
  }

  type ReceiptGetPayload<S extends boolean | null | undefined | ReceiptDefaultArgs> = $Result.GetResult<Prisma.$ReceiptPayload, S>

  type ReceiptCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ReceiptFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ReceiptCountAggregateInputType | true
    }

  export interface ReceiptDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Receipt'], meta: { name: 'Receipt' } }
    /**
     * Find zero or one Receipt that matches the filter.
     * @param {ReceiptFindUniqueArgs} args - Arguments to find a Receipt
     * @example
     * // Get one Receipt
     * const receipt = await prisma.receipt.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ReceiptFindUniqueArgs>(args: SelectSubset<T, ReceiptFindUniqueArgs<ExtArgs>>): Prisma__ReceiptClient<$Result.GetResult<Prisma.$ReceiptPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Receipt that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ReceiptFindUniqueOrThrowArgs} args - Arguments to find a Receipt
     * @example
     * // Get one Receipt
     * const receipt = await prisma.receipt.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ReceiptFindUniqueOrThrowArgs>(args: SelectSubset<T, ReceiptFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ReceiptClient<$Result.GetResult<Prisma.$ReceiptPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Receipt that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReceiptFindFirstArgs} args - Arguments to find a Receipt
     * @example
     * // Get one Receipt
     * const receipt = await prisma.receipt.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ReceiptFindFirstArgs>(args?: SelectSubset<T, ReceiptFindFirstArgs<ExtArgs>>): Prisma__ReceiptClient<$Result.GetResult<Prisma.$ReceiptPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Receipt that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReceiptFindFirstOrThrowArgs} args - Arguments to find a Receipt
     * @example
     * // Get one Receipt
     * const receipt = await prisma.receipt.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ReceiptFindFirstOrThrowArgs>(args?: SelectSubset<T, ReceiptFindFirstOrThrowArgs<ExtArgs>>): Prisma__ReceiptClient<$Result.GetResult<Prisma.$ReceiptPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Receipts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReceiptFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Receipts
     * const receipts = await prisma.receipt.findMany()
     * 
     * // Get first 10 Receipts
     * const receipts = await prisma.receipt.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const receiptWithIdOnly = await prisma.receipt.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ReceiptFindManyArgs>(args?: SelectSubset<T, ReceiptFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReceiptPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Receipt.
     * @param {ReceiptCreateArgs} args - Arguments to create a Receipt.
     * @example
     * // Create one Receipt
     * const Receipt = await prisma.receipt.create({
     *   data: {
     *     // ... data to create a Receipt
     *   }
     * })
     * 
     */
    create<T extends ReceiptCreateArgs>(args: SelectSubset<T, ReceiptCreateArgs<ExtArgs>>): Prisma__ReceiptClient<$Result.GetResult<Prisma.$ReceiptPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Receipts.
     * @param {ReceiptCreateManyArgs} args - Arguments to create many Receipts.
     * @example
     * // Create many Receipts
     * const receipt = await prisma.receipt.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ReceiptCreateManyArgs>(args?: SelectSubset<T, ReceiptCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Receipts and returns the data saved in the database.
     * @param {ReceiptCreateManyAndReturnArgs} args - Arguments to create many Receipts.
     * @example
     * // Create many Receipts
     * const receipt = await prisma.receipt.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Receipts and only return the `id`
     * const receiptWithIdOnly = await prisma.receipt.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ReceiptCreateManyAndReturnArgs>(args?: SelectSubset<T, ReceiptCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReceiptPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Receipt.
     * @param {ReceiptDeleteArgs} args - Arguments to delete one Receipt.
     * @example
     * // Delete one Receipt
     * const Receipt = await prisma.receipt.delete({
     *   where: {
     *     // ... filter to delete one Receipt
     *   }
     * })
     * 
     */
    delete<T extends ReceiptDeleteArgs>(args: SelectSubset<T, ReceiptDeleteArgs<ExtArgs>>): Prisma__ReceiptClient<$Result.GetResult<Prisma.$ReceiptPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Receipt.
     * @param {ReceiptUpdateArgs} args - Arguments to update one Receipt.
     * @example
     * // Update one Receipt
     * const receipt = await prisma.receipt.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ReceiptUpdateArgs>(args: SelectSubset<T, ReceiptUpdateArgs<ExtArgs>>): Prisma__ReceiptClient<$Result.GetResult<Prisma.$ReceiptPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Receipts.
     * @param {ReceiptDeleteManyArgs} args - Arguments to filter Receipts to delete.
     * @example
     * // Delete a few Receipts
     * const { count } = await prisma.receipt.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ReceiptDeleteManyArgs>(args?: SelectSubset<T, ReceiptDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Receipts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReceiptUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Receipts
     * const receipt = await prisma.receipt.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ReceiptUpdateManyArgs>(args: SelectSubset<T, ReceiptUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Receipt.
     * @param {ReceiptUpsertArgs} args - Arguments to update or create a Receipt.
     * @example
     * // Update or create a Receipt
     * const receipt = await prisma.receipt.upsert({
     *   create: {
     *     // ... data to create a Receipt
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Receipt we want to update
     *   }
     * })
     */
    upsert<T extends ReceiptUpsertArgs>(args: SelectSubset<T, ReceiptUpsertArgs<ExtArgs>>): Prisma__ReceiptClient<$Result.GetResult<Prisma.$ReceiptPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Receipts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReceiptCountArgs} args - Arguments to filter Receipts to count.
     * @example
     * // Count the number of Receipts
     * const count = await prisma.receipt.count({
     *   where: {
     *     // ... the filter for the Receipts we want to count
     *   }
     * })
    **/
    count<T extends ReceiptCountArgs>(
      args?: Subset<T, ReceiptCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ReceiptCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Receipt.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReceiptAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ReceiptAggregateArgs>(args: Subset<T, ReceiptAggregateArgs>): Prisma.PrismaPromise<GetReceiptAggregateType<T>>

    /**
     * Group by Receipt.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReceiptGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ReceiptGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ReceiptGroupByArgs['orderBy'] }
        : { orderBy?: ReceiptGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ReceiptGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReceiptGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Receipt model
   */
  readonly fields: ReceiptFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Receipt.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ReceiptClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Receipt model
   */ 
  interface ReceiptFieldRefs {
    readonly id: FieldRef<"Receipt", 'String'>
    readonly userId: FieldRef<"Receipt", 'String'>
    readonly imageUrl: FieldRef<"Receipt", 'String'>
    readonly merchantName: FieldRef<"Receipt", 'String'>
    readonly amount: FieldRef<"Receipt", 'Decimal'>
    readonly currency: FieldRef<"Receipt", 'Currency'>
    readonly transactionDate: FieldRef<"Receipt", 'DateTime'>
    readonly category: FieldRef<"Receipt", 'ReceiptCategory'>
    readonly subcategory: FieldRef<"Receipt", 'String'>
    readonly paymentMethod: FieldRef<"Receipt", 'PaymentMethod'>
    readonly location: FieldRef<"Receipt", 'String'>
    readonly notes: FieldRef<"Receipt", 'String'>
    readonly ocrConfidence: FieldRef<"Receipt", 'Float'>
    readonly ocrRawText: FieldRef<"Receipt", 'String'>
    readonly ocrProcessed: FieldRef<"Receipt", 'Boolean'>
    readonly createdAt: FieldRef<"Receipt", 'DateTime'>
    readonly updatedAt: FieldRef<"Receipt", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Receipt findUnique
   */
  export type ReceiptFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Receipt
     */
    select?: ReceiptSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceiptInclude<ExtArgs> | null
    /**
     * Filter, which Receipt to fetch.
     */
    where: ReceiptWhereUniqueInput
  }

  /**
   * Receipt findUniqueOrThrow
   */
  export type ReceiptFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Receipt
     */
    select?: ReceiptSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceiptInclude<ExtArgs> | null
    /**
     * Filter, which Receipt to fetch.
     */
    where: ReceiptWhereUniqueInput
  }

  /**
   * Receipt findFirst
   */
  export type ReceiptFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Receipt
     */
    select?: ReceiptSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceiptInclude<ExtArgs> | null
    /**
     * Filter, which Receipt to fetch.
     */
    where?: ReceiptWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Receipts to fetch.
     */
    orderBy?: ReceiptOrderByWithRelationInput | ReceiptOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Receipts.
     */
    cursor?: ReceiptWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Receipts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Receipts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Receipts.
     */
    distinct?: ReceiptScalarFieldEnum | ReceiptScalarFieldEnum[]
  }

  /**
   * Receipt findFirstOrThrow
   */
  export type ReceiptFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Receipt
     */
    select?: ReceiptSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceiptInclude<ExtArgs> | null
    /**
     * Filter, which Receipt to fetch.
     */
    where?: ReceiptWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Receipts to fetch.
     */
    orderBy?: ReceiptOrderByWithRelationInput | ReceiptOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Receipts.
     */
    cursor?: ReceiptWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Receipts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Receipts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Receipts.
     */
    distinct?: ReceiptScalarFieldEnum | ReceiptScalarFieldEnum[]
  }

  /**
   * Receipt findMany
   */
  export type ReceiptFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Receipt
     */
    select?: ReceiptSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceiptInclude<ExtArgs> | null
    /**
     * Filter, which Receipts to fetch.
     */
    where?: ReceiptWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Receipts to fetch.
     */
    orderBy?: ReceiptOrderByWithRelationInput | ReceiptOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Receipts.
     */
    cursor?: ReceiptWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Receipts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Receipts.
     */
    skip?: number
    distinct?: ReceiptScalarFieldEnum | ReceiptScalarFieldEnum[]
  }

  /**
   * Receipt create
   */
  export type ReceiptCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Receipt
     */
    select?: ReceiptSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceiptInclude<ExtArgs> | null
    /**
     * The data needed to create a Receipt.
     */
    data: XOR<ReceiptCreateInput, ReceiptUncheckedCreateInput>
  }

  /**
   * Receipt createMany
   */
  export type ReceiptCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Receipts.
     */
    data: ReceiptCreateManyInput | ReceiptCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Receipt createManyAndReturn
   */
  export type ReceiptCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Receipt
     */
    select?: ReceiptSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Receipts.
     */
    data: ReceiptCreateManyInput | ReceiptCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceiptIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Receipt update
   */
  export type ReceiptUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Receipt
     */
    select?: ReceiptSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceiptInclude<ExtArgs> | null
    /**
     * The data needed to update a Receipt.
     */
    data: XOR<ReceiptUpdateInput, ReceiptUncheckedUpdateInput>
    /**
     * Choose, which Receipt to update.
     */
    where: ReceiptWhereUniqueInput
  }

  /**
   * Receipt updateMany
   */
  export type ReceiptUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Receipts.
     */
    data: XOR<ReceiptUpdateManyMutationInput, ReceiptUncheckedUpdateManyInput>
    /**
     * Filter which Receipts to update
     */
    where?: ReceiptWhereInput
  }

  /**
   * Receipt upsert
   */
  export type ReceiptUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Receipt
     */
    select?: ReceiptSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceiptInclude<ExtArgs> | null
    /**
     * The filter to search for the Receipt to update in case it exists.
     */
    where: ReceiptWhereUniqueInput
    /**
     * In case the Receipt found by the `where` argument doesn't exist, create a new Receipt with this data.
     */
    create: XOR<ReceiptCreateInput, ReceiptUncheckedCreateInput>
    /**
     * In case the Receipt was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ReceiptUpdateInput, ReceiptUncheckedUpdateInput>
  }

  /**
   * Receipt delete
   */
  export type ReceiptDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Receipt
     */
    select?: ReceiptSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceiptInclude<ExtArgs> | null
    /**
     * Filter which Receipt to delete.
     */
    where: ReceiptWhereUniqueInput
  }

  /**
   * Receipt deleteMany
   */
  export type ReceiptDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Receipts to delete
     */
    where?: ReceiptWhereInput
  }

  /**
   * Receipt without action
   */
  export type ReceiptDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Receipt
     */
    select?: ReceiptSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReceiptInclude<ExtArgs> | null
  }


  /**
   * Model FinancialTest
   */

  export type AggregateFinancialTest = {
    _count: FinancialTestCountAggregateOutputType | null
    _avg: FinancialTestAvgAggregateOutputType | null
    _sum: FinancialTestSumAggregateOutputType | null
    _min: FinancialTestMinAggregateOutputType | null
    _max: FinancialTestMaxAggregateOutputType | null
  }

  export type FinancialTestAvgAggregateOutputType = {
    score: number | null
  }

  export type FinancialTestSumAggregateOutputType = {
    score: number | null
  }

  export type FinancialTestMinAggregateOutputType = {
    id: string | null
    userId: string | null
    testVersion: string | null
    score: number | null
    level: $Enums.FinancialLevel | null
    completedAt: Date | null
  }

  export type FinancialTestMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    testVersion: string | null
    score: number | null
    level: $Enums.FinancialLevel | null
    completedAt: Date | null
  }

  export type FinancialTestCountAggregateOutputType = {
    id: number
    userId: number
    testVersion: number
    questions: number
    score: number
    level: number
    recommendations: number
    completedAt: number
    _all: number
  }


  export type FinancialTestAvgAggregateInputType = {
    score?: true
  }

  export type FinancialTestSumAggregateInputType = {
    score?: true
  }

  export type FinancialTestMinAggregateInputType = {
    id?: true
    userId?: true
    testVersion?: true
    score?: true
    level?: true
    completedAt?: true
  }

  export type FinancialTestMaxAggregateInputType = {
    id?: true
    userId?: true
    testVersion?: true
    score?: true
    level?: true
    completedAt?: true
  }

  export type FinancialTestCountAggregateInputType = {
    id?: true
    userId?: true
    testVersion?: true
    questions?: true
    score?: true
    level?: true
    recommendations?: true
    completedAt?: true
    _all?: true
  }

  export type FinancialTestAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FinancialTest to aggregate.
     */
    where?: FinancialTestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FinancialTests to fetch.
     */
    orderBy?: FinancialTestOrderByWithRelationInput | FinancialTestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FinancialTestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FinancialTests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FinancialTests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned FinancialTests
    **/
    _count?: true | FinancialTestCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FinancialTestAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FinancialTestSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FinancialTestMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FinancialTestMaxAggregateInputType
  }

  export type GetFinancialTestAggregateType<T extends FinancialTestAggregateArgs> = {
        [P in keyof T & keyof AggregateFinancialTest]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFinancialTest[P]>
      : GetScalarType<T[P], AggregateFinancialTest[P]>
  }




  export type FinancialTestGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FinancialTestWhereInput
    orderBy?: FinancialTestOrderByWithAggregationInput | FinancialTestOrderByWithAggregationInput[]
    by: FinancialTestScalarFieldEnum[] | FinancialTestScalarFieldEnum
    having?: FinancialTestScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FinancialTestCountAggregateInputType | true
    _avg?: FinancialTestAvgAggregateInputType
    _sum?: FinancialTestSumAggregateInputType
    _min?: FinancialTestMinAggregateInputType
    _max?: FinancialTestMaxAggregateInputType
  }

  export type FinancialTestGroupByOutputType = {
    id: string
    userId: string
    testVersion: string
    questions: JsonValue
    score: number
    level: $Enums.FinancialLevel
    recommendations: JsonValue | null
    completedAt: Date
    _count: FinancialTestCountAggregateOutputType | null
    _avg: FinancialTestAvgAggregateOutputType | null
    _sum: FinancialTestSumAggregateOutputType | null
    _min: FinancialTestMinAggregateOutputType | null
    _max: FinancialTestMaxAggregateOutputType | null
  }

  type GetFinancialTestGroupByPayload<T extends FinancialTestGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FinancialTestGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FinancialTestGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FinancialTestGroupByOutputType[P]>
            : GetScalarType<T[P], FinancialTestGroupByOutputType[P]>
        }
      >
    >


  export type FinancialTestSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    testVersion?: boolean
    questions?: boolean
    score?: boolean
    level?: boolean
    recommendations?: boolean
    completedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["financialTest"]>

  export type FinancialTestSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    testVersion?: boolean
    questions?: boolean
    score?: boolean
    level?: boolean
    recommendations?: boolean
    completedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["financialTest"]>

  export type FinancialTestSelectScalar = {
    id?: boolean
    userId?: boolean
    testVersion?: boolean
    questions?: boolean
    score?: boolean
    level?: boolean
    recommendations?: boolean
    completedAt?: boolean
  }

  export type FinancialTestInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type FinancialTestIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $FinancialTestPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "FinancialTest"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      testVersion: string
      questions: Prisma.JsonValue
      score: number
      level: $Enums.FinancialLevel
      recommendations: Prisma.JsonValue | null
      completedAt: Date
    }, ExtArgs["result"]["financialTest"]>
    composites: {}
  }

  type FinancialTestGetPayload<S extends boolean | null | undefined | FinancialTestDefaultArgs> = $Result.GetResult<Prisma.$FinancialTestPayload, S>

  type FinancialTestCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<FinancialTestFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: FinancialTestCountAggregateInputType | true
    }

  export interface FinancialTestDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['FinancialTest'], meta: { name: 'FinancialTest' } }
    /**
     * Find zero or one FinancialTest that matches the filter.
     * @param {FinancialTestFindUniqueArgs} args - Arguments to find a FinancialTest
     * @example
     * // Get one FinancialTest
     * const financialTest = await prisma.financialTest.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FinancialTestFindUniqueArgs>(args: SelectSubset<T, FinancialTestFindUniqueArgs<ExtArgs>>): Prisma__FinancialTestClient<$Result.GetResult<Prisma.$FinancialTestPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one FinancialTest that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {FinancialTestFindUniqueOrThrowArgs} args - Arguments to find a FinancialTest
     * @example
     * // Get one FinancialTest
     * const financialTest = await prisma.financialTest.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FinancialTestFindUniqueOrThrowArgs>(args: SelectSubset<T, FinancialTestFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FinancialTestClient<$Result.GetResult<Prisma.$FinancialTestPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first FinancialTest that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FinancialTestFindFirstArgs} args - Arguments to find a FinancialTest
     * @example
     * // Get one FinancialTest
     * const financialTest = await prisma.financialTest.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FinancialTestFindFirstArgs>(args?: SelectSubset<T, FinancialTestFindFirstArgs<ExtArgs>>): Prisma__FinancialTestClient<$Result.GetResult<Prisma.$FinancialTestPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first FinancialTest that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FinancialTestFindFirstOrThrowArgs} args - Arguments to find a FinancialTest
     * @example
     * // Get one FinancialTest
     * const financialTest = await prisma.financialTest.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FinancialTestFindFirstOrThrowArgs>(args?: SelectSubset<T, FinancialTestFindFirstOrThrowArgs<ExtArgs>>): Prisma__FinancialTestClient<$Result.GetResult<Prisma.$FinancialTestPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more FinancialTests that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FinancialTestFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all FinancialTests
     * const financialTests = await prisma.financialTest.findMany()
     * 
     * // Get first 10 FinancialTests
     * const financialTests = await prisma.financialTest.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const financialTestWithIdOnly = await prisma.financialTest.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends FinancialTestFindManyArgs>(args?: SelectSubset<T, FinancialTestFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FinancialTestPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a FinancialTest.
     * @param {FinancialTestCreateArgs} args - Arguments to create a FinancialTest.
     * @example
     * // Create one FinancialTest
     * const FinancialTest = await prisma.financialTest.create({
     *   data: {
     *     // ... data to create a FinancialTest
     *   }
     * })
     * 
     */
    create<T extends FinancialTestCreateArgs>(args: SelectSubset<T, FinancialTestCreateArgs<ExtArgs>>): Prisma__FinancialTestClient<$Result.GetResult<Prisma.$FinancialTestPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many FinancialTests.
     * @param {FinancialTestCreateManyArgs} args - Arguments to create many FinancialTests.
     * @example
     * // Create many FinancialTests
     * const financialTest = await prisma.financialTest.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FinancialTestCreateManyArgs>(args?: SelectSubset<T, FinancialTestCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many FinancialTests and returns the data saved in the database.
     * @param {FinancialTestCreateManyAndReturnArgs} args - Arguments to create many FinancialTests.
     * @example
     * // Create many FinancialTests
     * const financialTest = await prisma.financialTest.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many FinancialTests and only return the `id`
     * const financialTestWithIdOnly = await prisma.financialTest.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends FinancialTestCreateManyAndReturnArgs>(args?: SelectSubset<T, FinancialTestCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FinancialTestPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a FinancialTest.
     * @param {FinancialTestDeleteArgs} args - Arguments to delete one FinancialTest.
     * @example
     * // Delete one FinancialTest
     * const FinancialTest = await prisma.financialTest.delete({
     *   where: {
     *     // ... filter to delete one FinancialTest
     *   }
     * })
     * 
     */
    delete<T extends FinancialTestDeleteArgs>(args: SelectSubset<T, FinancialTestDeleteArgs<ExtArgs>>): Prisma__FinancialTestClient<$Result.GetResult<Prisma.$FinancialTestPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one FinancialTest.
     * @param {FinancialTestUpdateArgs} args - Arguments to update one FinancialTest.
     * @example
     * // Update one FinancialTest
     * const financialTest = await prisma.financialTest.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FinancialTestUpdateArgs>(args: SelectSubset<T, FinancialTestUpdateArgs<ExtArgs>>): Prisma__FinancialTestClient<$Result.GetResult<Prisma.$FinancialTestPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more FinancialTests.
     * @param {FinancialTestDeleteManyArgs} args - Arguments to filter FinancialTests to delete.
     * @example
     * // Delete a few FinancialTests
     * const { count } = await prisma.financialTest.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FinancialTestDeleteManyArgs>(args?: SelectSubset<T, FinancialTestDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FinancialTests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FinancialTestUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many FinancialTests
     * const financialTest = await prisma.financialTest.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FinancialTestUpdateManyArgs>(args: SelectSubset<T, FinancialTestUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one FinancialTest.
     * @param {FinancialTestUpsertArgs} args - Arguments to update or create a FinancialTest.
     * @example
     * // Update or create a FinancialTest
     * const financialTest = await prisma.financialTest.upsert({
     *   create: {
     *     // ... data to create a FinancialTest
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the FinancialTest we want to update
     *   }
     * })
     */
    upsert<T extends FinancialTestUpsertArgs>(args: SelectSubset<T, FinancialTestUpsertArgs<ExtArgs>>): Prisma__FinancialTestClient<$Result.GetResult<Prisma.$FinancialTestPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of FinancialTests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FinancialTestCountArgs} args - Arguments to filter FinancialTests to count.
     * @example
     * // Count the number of FinancialTests
     * const count = await prisma.financialTest.count({
     *   where: {
     *     // ... the filter for the FinancialTests we want to count
     *   }
     * })
    **/
    count<T extends FinancialTestCountArgs>(
      args?: Subset<T, FinancialTestCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FinancialTestCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a FinancialTest.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FinancialTestAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FinancialTestAggregateArgs>(args: Subset<T, FinancialTestAggregateArgs>): Prisma.PrismaPromise<GetFinancialTestAggregateType<T>>

    /**
     * Group by FinancialTest.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FinancialTestGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FinancialTestGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FinancialTestGroupByArgs['orderBy'] }
        : { orderBy?: FinancialTestGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FinancialTestGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFinancialTestGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the FinancialTest model
   */
  readonly fields: FinancialTestFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for FinancialTest.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FinancialTestClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the FinancialTest model
   */ 
  interface FinancialTestFieldRefs {
    readonly id: FieldRef<"FinancialTest", 'String'>
    readonly userId: FieldRef<"FinancialTest", 'String'>
    readonly testVersion: FieldRef<"FinancialTest", 'String'>
    readonly questions: FieldRef<"FinancialTest", 'Json'>
    readonly score: FieldRef<"FinancialTest", 'Int'>
    readonly level: FieldRef<"FinancialTest", 'FinancialLevel'>
    readonly recommendations: FieldRef<"FinancialTest", 'Json'>
    readonly completedAt: FieldRef<"FinancialTest", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * FinancialTest findUnique
   */
  export type FinancialTestFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FinancialTest
     */
    select?: FinancialTestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinancialTestInclude<ExtArgs> | null
    /**
     * Filter, which FinancialTest to fetch.
     */
    where: FinancialTestWhereUniqueInput
  }

  /**
   * FinancialTest findUniqueOrThrow
   */
  export type FinancialTestFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FinancialTest
     */
    select?: FinancialTestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinancialTestInclude<ExtArgs> | null
    /**
     * Filter, which FinancialTest to fetch.
     */
    where: FinancialTestWhereUniqueInput
  }

  /**
   * FinancialTest findFirst
   */
  export type FinancialTestFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FinancialTest
     */
    select?: FinancialTestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinancialTestInclude<ExtArgs> | null
    /**
     * Filter, which FinancialTest to fetch.
     */
    where?: FinancialTestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FinancialTests to fetch.
     */
    orderBy?: FinancialTestOrderByWithRelationInput | FinancialTestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FinancialTests.
     */
    cursor?: FinancialTestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FinancialTests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FinancialTests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FinancialTests.
     */
    distinct?: FinancialTestScalarFieldEnum | FinancialTestScalarFieldEnum[]
  }

  /**
   * FinancialTest findFirstOrThrow
   */
  export type FinancialTestFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FinancialTest
     */
    select?: FinancialTestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinancialTestInclude<ExtArgs> | null
    /**
     * Filter, which FinancialTest to fetch.
     */
    where?: FinancialTestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FinancialTests to fetch.
     */
    orderBy?: FinancialTestOrderByWithRelationInput | FinancialTestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FinancialTests.
     */
    cursor?: FinancialTestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FinancialTests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FinancialTests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FinancialTests.
     */
    distinct?: FinancialTestScalarFieldEnum | FinancialTestScalarFieldEnum[]
  }

  /**
   * FinancialTest findMany
   */
  export type FinancialTestFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FinancialTest
     */
    select?: FinancialTestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinancialTestInclude<ExtArgs> | null
    /**
     * Filter, which FinancialTests to fetch.
     */
    where?: FinancialTestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FinancialTests to fetch.
     */
    orderBy?: FinancialTestOrderByWithRelationInput | FinancialTestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing FinancialTests.
     */
    cursor?: FinancialTestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FinancialTests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FinancialTests.
     */
    skip?: number
    distinct?: FinancialTestScalarFieldEnum | FinancialTestScalarFieldEnum[]
  }

  /**
   * FinancialTest create
   */
  export type FinancialTestCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FinancialTest
     */
    select?: FinancialTestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinancialTestInclude<ExtArgs> | null
    /**
     * The data needed to create a FinancialTest.
     */
    data: XOR<FinancialTestCreateInput, FinancialTestUncheckedCreateInput>
  }

  /**
   * FinancialTest createMany
   */
  export type FinancialTestCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many FinancialTests.
     */
    data: FinancialTestCreateManyInput | FinancialTestCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * FinancialTest createManyAndReturn
   */
  export type FinancialTestCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FinancialTest
     */
    select?: FinancialTestSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many FinancialTests.
     */
    data: FinancialTestCreateManyInput | FinancialTestCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinancialTestIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * FinancialTest update
   */
  export type FinancialTestUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FinancialTest
     */
    select?: FinancialTestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinancialTestInclude<ExtArgs> | null
    /**
     * The data needed to update a FinancialTest.
     */
    data: XOR<FinancialTestUpdateInput, FinancialTestUncheckedUpdateInput>
    /**
     * Choose, which FinancialTest to update.
     */
    where: FinancialTestWhereUniqueInput
  }

  /**
   * FinancialTest updateMany
   */
  export type FinancialTestUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update FinancialTests.
     */
    data: XOR<FinancialTestUpdateManyMutationInput, FinancialTestUncheckedUpdateManyInput>
    /**
     * Filter which FinancialTests to update
     */
    where?: FinancialTestWhereInput
  }

  /**
   * FinancialTest upsert
   */
  export type FinancialTestUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FinancialTest
     */
    select?: FinancialTestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinancialTestInclude<ExtArgs> | null
    /**
     * The filter to search for the FinancialTest to update in case it exists.
     */
    where: FinancialTestWhereUniqueInput
    /**
     * In case the FinancialTest found by the `where` argument doesn't exist, create a new FinancialTest with this data.
     */
    create: XOR<FinancialTestCreateInput, FinancialTestUncheckedCreateInput>
    /**
     * In case the FinancialTest was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FinancialTestUpdateInput, FinancialTestUncheckedUpdateInput>
  }

  /**
   * FinancialTest delete
   */
  export type FinancialTestDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FinancialTest
     */
    select?: FinancialTestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinancialTestInclude<ExtArgs> | null
    /**
     * Filter which FinancialTest to delete.
     */
    where: FinancialTestWhereUniqueInput
  }

  /**
   * FinancialTest deleteMany
   */
  export type FinancialTestDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FinancialTests to delete
     */
    where?: FinancialTestWhereInput
  }

  /**
   * FinancialTest without action
   */
  export type FinancialTestDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FinancialTest
     */
    select?: FinancialTestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FinancialTestInclude<ExtArgs> | null
  }


  /**
   * Model AIInteraction
   */

  export type AggregateAIInteraction = {
    _count: AIInteractionCountAggregateOutputType | null
    _avg: AIInteractionAvgAggregateOutputType | null
    _sum: AIInteractionSumAggregateOutputType | null
    _min: AIInteractionMinAggregateOutputType | null
    _max: AIInteractionMaxAggregateOutputType | null
  }

  export type AIInteractionAvgAggregateOutputType = {
    tokensUsed: number | null
    responseTime: number | null
    userRating: number | null
  }

  export type AIInteractionSumAggregateOutputType = {
    tokensUsed: number | null
    responseTime: number | null
    userRating: number | null
  }

  export type AIInteractionMinAggregateOutputType = {
    id: string | null
    userId: string | null
    sessionId: string | null
    interactionType: $Enums.AIInteractionType | null
    userMessage: string | null
    aiResponse: string | null
    model: string | null
    tokensUsed: number | null
    responseTime: number | null
    isFinancialQuery: boolean | null
    queryCategory: $Enums.FinancialQueryCategory | null
    disclaimerShown: boolean | null
    disclaimerVersion: string | null
    userRating: number | null
    userFeedback: string | null
    ipAddress: string | null
    userAgent: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type AIInteractionMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    sessionId: string | null
    interactionType: $Enums.AIInteractionType | null
    userMessage: string | null
    aiResponse: string | null
    model: string | null
    tokensUsed: number | null
    responseTime: number | null
    isFinancialQuery: boolean | null
    queryCategory: $Enums.FinancialQueryCategory | null
    disclaimerShown: boolean | null
    disclaimerVersion: string | null
    userRating: number | null
    userFeedback: string | null
    ipAddress: string | null
    userAgent: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type AIInteractionCountAggregateOutputType = {
    id: number
    userId: number
    sessionId: number
    interactionType: number
    userMessage: number
    aiResponse: number
    model: number
    tokensUsed: number
    responseTime: number
    isFinancialQuery: number
    queryCategory: number
    disclaimerShown: number
    disclaimerVersion: number
    userRating: number
    userFeedback: number
    ipAddress: number
    userAgent: number
    metadata: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type AIInteractionAvgAggregateInputType = {
    tokensUsed?: true
    responseTime?: true
    userRating?: true
  }

  export type AIInteractionSumAggregateInputType = {
    tokensUsed?: true
    responseTime?: true
    userRating?: true
  }

  export type AIInteractionMinAggregateInputType = {
    id?: true
    userId?: true
    sessionId?: true
    interactionType?: true
    userMessage?: true
    aiResponse?: true
    model?: true
    tokensUsed?: true
    responseTime?: true
    isFinancialQuery?: true
    queryCategory?: true
    disclaimerShown?: true
    disclaimerVersion?: true
    userRating?: true
    userFeedback?: true
    ipAddress?: true
    userAgent?: true
    createdAt?: true
    updatedAt?: true
  }

  export type AIInteractionMaxAggregateInputType = {
    id?: true
    userId?: true
    sessionId?: true
    interactionType?: true
    userMessage?: true
    aiResponse?: true
    model?: true
    tokensUsed?: true
    responseTime?: true
    isFinancialQuery?: true
    queryCategory?: true
    disclaimerShown?: true
    disclaimerVersion?: true
    userRating?: true
    userFeedback?: true
    ipAddress?: true
    userAgent?: true
    createdAt?: true
    updatedAt?: true
  }

  export type AIInteractionCountAggregateInputType = {
    id?: true
    userId?: true
    sessionId?: true
    interactionType?: true
    userMessage?: true
    aiResponse?: true
    model?: true
    tokensUsed?: true
    responseTime?: true
    isFinancialQuery?: true
    queryCategory?: true
    disclaimerShown?: true
    disclaimerVersion?: true
    userRating?: true
    userFeedback?: true
    ipAddress?: true
    userAgent?: true
    metadata?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type AIInteractionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AIInteraction to aggregate.
     */
    where?: AIInteractionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AIInteractions to fetch.
     */
    orderBy?: AIInteractionOrderByWithRelationInput | AIInteractionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AIInteractionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AIInteractions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AIInteractions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AIInteractions
    **/
    _count?: true | AIInteractionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AIInteractionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AIInteractionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AIInteractionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AIInteractionMaxAggregateInputType
  }

  export type GetAIInteractionAggregateType<T extends AIInteractionAggregateArgs> = {
        [P in keyof T & keyof AggregateAIInteraction]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAIInteraction[P]>
      : GetScalarType<T[P], AggregateAIInteraction[P]>
  }




  export type AIInteractionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AIInteractionWhereInput
    orderBy?: AIInteractionOrderByWithAggregationInput | AIInteractionOrderByWithAggregationInput[]
    by: AIInteractionScalarFieldEnum[] | AIInteractionScalarFieldEnum
    having?: AIInteractionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AIInteractionCountAggregateInputType | true
    _avg?: AIInteractionAvgAggregateInputType
    _sum?: AIInteractionSumAggregateInputType
    _min?: AIInteractionMinAggregateInputType
    _max?: AIInteractionMaxAggregateInputType
  }

  export type AIInteractionGroupByOutputType = {
    id: string
    userId: string
    sessionId: string | null
    interactionType: $Enums.AIInteractionType
    userMessage: string
    aiResponse: string
    model: string
    tokensUsed: number | null
    responseTime: number | null
    isFinancialQuery: boolean
    queryCategory: $Enums.FinancialQueryCategory | null
    disclaimerShown: boolean
    disclaimerVersion: string
    userRating: number | null
    userFeedback: string | null
    ipAddress: string | null
    userAgent: string | null
    metadata: JsonValue | null
    createdAt: Date
    updatedAt: Date
    _count: AIInteractionCountAggregateOutputType | null
    _avg: AIInteractionAvgAggregateOutputType | null
    _sum: AIInteractionSumAggregateOutputType | null
    _min: AIInteractionMinAggregateOutputType | null
    _max: AIInteractionMaxAggregateOutputType | null
  }

  type GetAIInteractionGroupByPayload<T extends AIInteractionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AIInteractionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AIInteractionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AIInteractionGroupByOutputType[P]>
            : GetScalarType<T[P], AIInteractionGroupByOutputType[P]>
        }
      >
    >


  export type AIInteractionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    sessionId?: boolean
    interactionType?: boolean
    userMessage?: boolean
    aiResponse?: boolean
    model?: boolean
    tokensUsed?: boolean
    responseTime?: boolean
    isFinancialQuery?: boolean
    queryCategory?: boolean
    disclaimerShown?: boolean
    disclaimerVersion?: boolean
    userRating?: boolean
    userFeedback?: boolean
    ipAddress?: boolean
    userAgent?: boolean
    metadata?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["aIInteraction"]>

  export type AIInteractionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    sessionId?: boolean
    interactionType?: boolean
    userMessage?: boolean
    aiResponse?: boolean
    model?: boolean
    tokensUsed?: boolean
    responseTime?: boolean
    isFinancialQuery?: boolean
    queryCategory?: boolean
    disclaimerShown?: boolean
    disclaimerVersion?: boolean
    userRating?: boolean
    userFeedback?: boolean
    ipAddress?: boolean
    userAgent?: boolean
    metadata?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["aIInteraction"]>

  export type AIInteractionSelectScalar = {
    id?: boolean
    userId?: boolean
    sessionId?: boolean
    interactionType?: boolean
    userMessage?: boolean
    aiResponse?: boolean
    model?: boolean
    tokensUsed?: boolean
    responseTime?: boolean
    isFinancialQuery?: boolean
    queryCategory?: boolean
    disclaimerShown?: boolean
    disclaimerVersion?: boolean
    userRating?: boolean
    userFeedback?: boolean
    ipAddress?: boolean
    userAgent?: boolean
    metadata?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type AIInteractionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type AIInteractionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $AIInteractionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AIInteraction"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      sessionId: string | null
      interactionType: $Enums.AIInteractionType
      userMessage: string
      aiResponse: string
      model: string
      tokensUsed: number | null
      responseTime: number | null
      isFinancialQuery: boolean
      queryCategory: $Enums.FinancialQueryCategory | null
      disclaimerShown: boolean
      disclaimerVersion: string
      userRating: number | null
      userFeedback: string | null
      ipAddress: string | null
      userAgent: string | null
      metadata: Prisma.JsonValue | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["aIInteraction"]>
    composites: {}
  }

  type AIInteractionGetPayload<S extends boolean | null | undefined | AIInteractionDefaultArgs> = $Result.GetResult<Prisma.$AIInteractionPayload, S>

  type AIInteractionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<AIInteractionFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: AIInteractionCountAggregateInputType | true
    }

  export interface AIInteractionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AIInteraction'], meta: { name: 'AIInteraction' } }
    /**
     * Find zero or one AIInteraction that matches the filter.
     * @param {AIInteractionFindUniqueArgs} args - Arguments to find a AIInteraction
     * @example
     * // Get one AIInteraction
     * const aIInteraction = await prisma.aIInteraction.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AIInteractionFindUniqueArgs>(args: SelectSubset<T, AIInteractionFindUniqueArgs<ExtArgs>>): Prisma__AIInteractionClient<$Result.GetResult<Prisma.$AIInteractionPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one AIInteraction that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {AIInteractionFindUniqueOrThrowArgs} args - Arguments to find a AIInteraction
     * @example
     * // Get one AIInteraction
     * const aIInteraction = await prisma.aIInteraction.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AIInteractionFindUniqueOrThrowArgs>(args: SelectSubset<T, AIInteractionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AIInteractionClient<$Result.GetResult<Prisma.$AIInteractionPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first AIInteraction that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AIInteractionFindFirstArgs} args - Arguments to find a AIInteraction
     * @example
     * // Get one AIInteraction
     * const aIInteraction = await prisma.aIInteraction.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AIInteractionFindFirstArgs>(args?: SelectSubset<T, AIInteractionFindFirstArgs<ExtArgs>>): Prisma__AIInteractionClient<$Result.GetResult<Prisma.$AIInteractionPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first AIInteraction that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AIInteractionFindFirstOrThrowArgs} args - Arguments to find a AIInteraction
     * @example
     * // Get one AIInteraction
     * const aIInteraction = await prisma.aIInteraction.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AIInteractionFindFirstOrThrowArgs>(args?: SelectSubset<T, AIInteractionFindFirstOrThrowArgs<ExtArgs>>): Prisma__AIInteractionClient<$Result.GetResult<Prisma.$AIInteractionPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more AIInteractions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AIInteractionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AIInteractions
     * const aIInteractions = await prisma.aIInteraction.findMany()
     * 
     * // Get first 10 AIInteractions
     * const aIInteractions = await prisma.aIInteraction.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const aIInteractionWithIdOnly = await prisma.aIInteraction.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AIInteractionFindManyArgs>(args?: SelectSubset<T, AIInteractionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AIInteractionPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a AIInteraction.
     * @param {AIInteractionCreateArgs} args - Arguments to create a AIInteraction.
     * @example
     * // Create one AIInteraction
     * const AIInteraction = await prisma.aIInteraction.create({
     *   data: {
     *     // ... data to create a AIInteraction
     *   }
     * })
     * 
     */
    create<T extends AIInteractionCreateArgs>(args: SelectSubset<T, AIInteractionCreateArgs<ExtArgs>>): Prisma__AIInteractionClient<$Result.GetResult<Prisma.$AIInteractionPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many AIInteractions.
     * @param {AIInteractionCreateManyArgs} args - Arguments to create many AIInteractions.
     * @example
     * // Create many AIInteractions
     * const aIInteraction = await prisma.aIInteraction.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AIInteractionCreateManyArgs>(args?: SelectSubset<T, AIInteractionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many AIInteractions and returns the data saved in the database.
     * @param {AIInteractionCreateManyAndReturnArgs} args - Arguments to create many AIInteractions.
     * @example
     * // Create many AIInteractions
     * const aIInteraction = await prisma.aIInteraction.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many AIInteractions and only return the `id`
     * const aIInteractionWithIdOnly = await prisma.aIInteraction.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AIInteractionCreateManyAndReturnArgs>(args?: SelectSubset<T, AIInteractionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AIInteractionPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a AIInteraction.
     * @param {AIInteractionDeleteArgs} args - Arguments to delete one AIInteraction.
     * @example
     * // Delete one AIInteraction
     * const AIInteraction = await prisma.aIInteraction.delete({
     *   where: {
     *     // ... filter to delete one AIInteraction
     *   }
     * })
     * 
     */
    delete<T extends AIInteractionDeleteArgs>(args: SelectSubset<T, AIInteractionDeleteArgs<ExtArgs>>): Prisma__AIInteractionClient<$Result.GetResult<Prisma.$AIInteractionPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one AIInteraction.
     * @param {AIInteractionUpdateArgs} args - Arguments to update one AIInteraction.
     * @example
     * // Update one AIInteraction
     * const aIInteraction = await prisma.aIInteraction.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AIInteractionUpdateArgs>(args: SelectSubset<T, AIInteractionUpdateArgs<ExtArgs>>): Prisma__AIInteractionClient<$Result.GetResult<Prisma.$AIInteractionPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more AIInteractions.
     * @param {AIInteractionDeleteManyArgs} args - Arguments to filter AIInteractions to delete.
     * @example
     * // Delete a few AIInteractions
     * const { count } = await prisma.aIInteraction.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AIInteractionDeleteManyArgs>(args?: SelectSubset<T, AIInteractionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AIInteractions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AIInteractionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AIInteractions
     * const aIInteraction = await prisma.aIInteraction.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AIInteractionUpdateManyArgs>(args: SelectSubset<T, AIInteractionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one AIInteraction.
     * @param {AIInteractionUpsertArgs} args - Arguments to update or create a AIInteraction.
     * @example
     * // Update or create a AIInteraction
     * const aIInteraction = await prisma.aIInteraction.upsert({
     *   create: {
     *     // ... data to create a AIInteraction
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AIInteraction we want to update
     *   }
     * })
     */
    upsert<T extends AIInteractionUpsertArgs>(args: SelectSubset<T, AIInteractionUpsertArgs<ExtArgs>>): Prisma__AIInteractionClient<$Result.GetResult<Prisma.$AIInteractionPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of AIInteractions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AIInteractionCountArgs} args - Arguments to filter AIInteractions to count.
     * @example
     * // Count the number of AIInteractions
     * const count = await prisma.aIInteraction.count({
     *   where: {
     *     // ... the filter for the AIInteractions we want to count
     *   }
     * })
    **/
    count<T extends AIInteractionCountArgs>(
      args?: Subset<T, AIInteractionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AIInteractionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AIInteraction.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AIInteractionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AIInteractionAggregateArgs>(args: Subset<T, AIInteractionAggregateArgs>): Prisma.PrismaPromise<GetAIInteractionAggregateType<T>>

    /**
     * Group by AIInteraction.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AIInteractionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AIInteractionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AIInteractionGroupByArgs['orderBy'] }
        : { orderBy?: AIInteractionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AIInteractionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAIInteractionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AIInteraction model
   */
  readonly fields: AIInteractionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AIInteraction.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AIInteractionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AIInteraction model
   */ 
  interface AIInteractionFieldRefs {
    readonly id: FieldRef<"AIInteraction", 'String'>
    readonly userId: FieldRef<"AIInteraction", 'String'>
    readonly sessionId: FieldRef<"AIInteraction", 'String'>
    readonly interactionType: FieldRef<"AIInteraction", 'AIInteractionType'>
    readonly userMessage: FieldRef<"AIInteraction", 'String'>
    readonly aiResponse: FieldRef<"AIInteraction", 'String'>
    readonly model: FieldRef<"AIInteraction", 'String'>
    readonly tokensUsed: FieldRef<"AIInteraction", 'Int'>
    readonly responseTime: FieldRef<"AIInteraction", 'Int'>
    readonly isFinancialQuery: FieldRef<"AIInteraction", 'Boolean'>
    readonly queryCategory: FieldRef<"AIInteraction", 'FinancialQueryCategory'>
    readonly disclaimerShown: FieldRef<"AIInteraction", 'Boolean'>
    readonly disclaimerVersion: FieldRef<"AIInteraction", 'String'>
    readonly userRating: FieldRef<"AIInteraction", 'Int'>
    readonly userFeedback: FieldRef<"AIInteraction", 'String'>
    readonly ipAddress: FieldRef<"AIInteraction", 'String'>
    readonly userAgent: FieldRef<"AIInteraction", 'String'>
    readonly metadata: FieldRef<"AIInteraction", 'Json'>
    readonly createdAt: FieldRef<"AIInteraction", 'DateTime'>
    readonly updatedAt: FieldRef<"AIInteraction", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * AIInteraction findUnique
   */
  export type AIInteractionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AIInteraction
     */
    select?: AIInteractionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AIInteractionInclude<ExtArgs> | null
    /**
     * Filter, which AIInteraction to fetch.
     */
    where: AIInteractionWhereUniqueInput
  }

  /**
   * AIInteraction findUniqueOrThrow
   */
  export type AIInteractionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AIInteraction
     */
    select?: AIInteractionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AIInteractionInclude<ExtArgs> | null
    /**
     * Filter, which AIInteraction to fetch.
     */
    where: AIInteractionWhereUniqueInput
  }

  /**
   * AIInteraction findFirst
   */
  export type AIInteractionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AIInteraction
     */
    select?: AIInteractionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AIInteractionInclude<ExtArgs> | null
    /**
     * Filter, which AIInteraction to fetch.
     */
    where?: AIInteractionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AIInteractions to fetch.
     */
    orderBy?: AIInteractionOrderByWithRelationInput | AIInteractionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AIInteractions.
     */
    cursor?: AIInteractionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AIInteractions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AIInteractions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AIInteractions.
     */
    distinct?: AIInteractionScalarFieldEnum | AIInteractionScalarFieldEnum[]
  }

  /**
   * AIInteraction findFirstOrThrow
   */
  export type AIInteractionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AIInteraction
     */
    select?: AIInteractionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AIInteractionInclude<ExtArgs> | null
    /**
     * Filter, which AIInteraction to fetch.
     */
    where?: AIInteractionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AIInteractions to fetch.
     */
    orderBy?: AIInteractionOrderByWithRelationInput | AIInteractionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AIInteractions.
     */
    cursor?: AIInteractionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AIInteractions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AIInteractions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AIInteractions.
     */
    distinct?: AIInteractionScalarFieldEnum | AIInteractionScalarFieldEnum[]
  }

  /**
   * AIInteraction findMany
   */
  export type AIInteractionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AIInteraction
     */
    select?: AIInteractionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AIInteractionInclude<ExtArgs> | null
    /**
     * Filter, which AIInteractions to fetch.
     */
    where?: AIInteractionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AIInteractions to fetch.
     */
    orderBy?: AIInteractionOrderByWithRelationInput | AIInteractionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AIInteractions.
     */
    cursor?: AIInteractionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AIInteractions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AIInteractions.
     */
    skip?: number
    distinct?: AIInteractionScalarFieldEnum | AIInteractionScalarFieldEnum[]
  }

  /**
   * AIInteraction create
   */
  export type AIInteractionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AIInteraction
     */
    select?: AIInteractionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AIInteractionInclude<ExtArgs> | null
    /**
     * The data needed to create a AIInteraction.
     */
    data: XOR<AIInteractionCreateInput, AIInteractionUncheckedCreateInput>
  }

  /**
   * AIInteraction createMany
   */
  export type AIInteractionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AIInteractions.
     */
    data: AIInteractionCreateManyInput | AIInteractionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AIInteraction createManyAndReturn
   */
  export type AIInteractionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AIInteraction
     */
    select?: AIInteractionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many AIInteractions.
     */
    data: AIInteractionCreateManyInput | AIInteractionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AIInteractionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * AIInteraction update
   */
  export type AIInteractionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AIInteraction
     */
    select?: AIInteractionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AIInteractionInclude<ExtArgs> | null
    /**
     * The data needed to update a AIInteraction.
     */
    data: XOR<AIInteractionUpdateInput, AIInteractionUncheckedUpdateInput>
    /**
     * Choose, which AIInteraction to update.
     */
    where: AIInteractionWhereUniqueInput
  }

  /**
   * AIInteraction updateMany
   */
  export type AIInteractionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AIInteractions.
     */
    data: XOR<AIInteractionUpdateManyMutationInput, AIInteractionUncheckedUpdateManyInput>
    /**
     * Filter which AIInteractions to update
     */
    where?: AIInteractionWhereInput
  }

  /**
   * AIInteraction upsert
   */
  export type AIInteractionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AIInteraction
     */
    select?: AIInteractionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AIInteractionInclude<ExtArgs> | null
    /**
     * The filter to search for the AIInteraction to update in case it exists.
     */
    where: AIInteractionWhereUniqueInput
    /**
     * In case the AIInteraction found by the `where` argument doesn't exist, create a new AIInteraction with this data.
     */
    create: XOR<AIInteractionCreateInput, AIInteractionUncheckedCreateInput>
    /**
     * In case the AIInteraction was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AIInteractionUpdateInput, AIInteractionUncheckedUpdateInput>
  }

  /**
   * AIInteraction delete
   */
  export type AIInteractionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AIInteraction
     */
    select?: AIInteractionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AIInteractionInclude<ExtArgs> | null
    /**
     * Filter which AIInteraction to delete.
     */
    where: AIInteractionWhereUniqueInput
  }

  /**
   * AIInteraction deleteMany
   */
  export type AIInteractionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AIInteractions to delete
     */
    where?: AIInteractionWhereInput
  }

  /**
   * AIInteraction without action
   */
  export type AIInteractionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AIInteraction
     */
    select?: AIInteractionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AIInteractionInclude<ExtArgs> | null
  }


  /**
   * Model MarketplaceProduct
   */

  export type AggregateMarketplaceProduct = {
    _count: MarketplaceProductCountAggregateOutputType | null
    _avg: MarketplaceProductAvgAggregateOutputType | null
    _sum: MarketplaceProductSumAggregateOutputType | null
    _min: MarketplaceProductMinAggregateOutputType | null
    _max: MarketplaceProductMaxAggregateOutputType | null
  }

  export type MarketplaceProductAvgAggregateOutputType = {
    price: Decimal | null
    originalPrice: Decimal | null
    discount: number | null
    averageRating: number | null
    totalReviews: number | null
    totalSales: number | null
  }

  export type MarketplaceProductSumAggregateOutputType = {
    price: Decimal | null
    originalPrice: Decimal | null
    discount: number | null
    averageRating: number | null
    totalReviews: number | null
    totalSales: number | null
  }

  export type MarketplaceProductMinAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    shortDescription: string | null
    category: $Enums.ProductCategory | null
    subcategory: string | null
    price: Decimal | null
    currency: $Enums.Currency | null
    originalPrice: Decimal | null
    discount: number | null
    providerId: string | null
    providerName: string | null
    providerLogo: string | null
    videoUrl: string | null
    duration: string | null
    level: $Enums.FinancialLevel | null
    requirements: string | null
    whatYouWillLearn: string | null
    averageRating: number | null
    totalReviews: number | null
    totalSales: number | null
    isActive: boolean | null
    isFeatured: boolean | null
    isPopular: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type MarketplaceProductMaxAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    shortDescription: string | null
    category: $Enums.ProductCategory | null
    subcategory: string | null
    price: Decimal | null
    currency: $Enums.Currency | null
    originalPrice: Decimal | null
    discount: number | null
    providerId: string | null
    providerName: string | null
    providerLogo: string | null
    videoUrl: string | null
    duration: string | null
    level: $Enums.FinancialLevel | null
    requirements: string | null
    whatYouWillLearn: string | null
    averageRating: number | null
    totalReviews: number | null
    totalSales: number | null
    isActive: boolean | null
    isFeatured: boolean | null
    isPopular: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type MarketplaceProductCountAggregateOutputType = {
    id: number
    name: number
    description: number
    shortDescription: number
    category: number
    subcategory: number
    price: number
    currency: number
    originalPrice: number
    discount: number
    providerId: number
    providerName: number
    providerLogo: number
    images: number
    videoUrl: number
    duration: number
    level: number
    features: number
    requirements: number
    whatYouWillLearn: number
    averageRating: number
    totalReviews: number
    totalSales: number
    isActive: number
    isFeatured: number
    isPopular: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type MarketplaceProductAvgAggregateInputType = {
    price?: true
    originalPrice?: true
    discount?: true
    averageRating?: true
    totalReviews?: true
    totalSales?: true
  }

  export type MarketplaceProductSumAggregateInputType = {
    price?: true
    originalPrice?: true
    discount?: true
    averageRating?: true
    totalReviews?: true
    totalSales?: true
  }

  export type MarketplaceProductMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    shortDescription?: true
    category?: true
    subcategory?: true
    price?: true
    currency?: true
    originalPrice?: true
    discount?: true
    providerId?: true
    providerName?: true
    providerLogo?: true
    videoUrl?: true
    duration?: true
    level?: true
    requirements?: true
    whatYouWillLearn?: true
    averageRating?: true
    totalReviews?: true
    totalSales?: true
    isActive?: true
    isFeatured?: true
    isPopular?: true
    createdAt?: true
    updatedAt?: true
  }

  export type MarketplaceProductMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    shortDescription?: true
    category?: true
    subcategory?: true
    price?: true
    currency?: true
    originalPrice?: true
    discount?: true
    providerId?: true
    providerName?: true
    providerLogo?: true
    videoUrl?: true
    duration?: true
    level?: true
    requirements?: true
    whatYouWillLearn?: true
    averageRating?: true
    totalReviews?: true
    totalSales?: true
    isActive?: true
    isFeatured?: true
    isPopular?: true
    createdAt?: true
    updatedAt?: true
  }

  export type MarketplaceProductCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    shortDescription?: true
    category?: true
    subcategory?: true
    price?: true
    currency?: true
    originalPrice?: true
    discount?: true
    providerId?: true
    providerName?: true
    providerLogo?: true
    images?: true
    videoUrl?: true
    duration?: true
    level?: true
    features?: true
    requirements?: true
    whatYouWillLearn?: true
    averageRating?: true
    totalReviews?: true
    totalSales?: true
    isActive?: true
    isFeatured?: true
    isPopular?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type MarketplaceProductAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MarketplaceProduct to aggregate.
     */
    where?: MarketplaceProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MarketplaceProducts to fetch.
     */
    orderBy?: MarketplaceProductOrderByWithRelationInput | MarketplaceProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MarketplaceProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MarketplaceProducts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MarketplaceProducts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned MarketplaceProducts
    **/
    _count?: true | MarketplaceProductCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MarketplaceProductAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MarketplaceProductSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MarketplaceProductMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MarketplaceProductMaxAggregateInputType
  }

  export type GetMarketplaceProductAggregateType<T extends MarketplaceProductAggregateArgs> = {
        [P in keyof T & keyof AggregateMarketplaceProduct]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMarketplaceProduct[P]>
      : GetScalarType<T[P], AggregateMarketplaceProduct[P]>
  }




  export type MarketplaceProductGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MarketplaceProductWhereInput
    orderBy?: MarketplaceProductOrderByWithAggregationInput | MarketplaceProductOrderByWithAggregationInput[]
    by: MarketplaceProductScalarFieldEnum[] | MarketplaceProductScalarFieldEnum
    having?: MarketplaceProductScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MarketplaceProductCountAggregateInputType | true
    _avg?: MarketplaceProductAvgAggregateInputType
    _sum?: MarketplaceProductSumAggregateInputType
    _min?: MarketplaceProductMinAggregateInputType
    _max?: MarketplaceProductMaxAggregateInputType
  }

  export type MarketplaceProductGroupByOutputType = {
    id: string
    name: string
    description: string
    shortDescription: string | null
    category: $Enums.ProductCategory
    subcategory: string | null
    price: Decimal
    currency: $Enums.Currency
    originalPrice: Decimal | null
    discount: number | null
    providerId: string
    providerName: string
    providerLogo: string | null
    images: string[]
    videoUrl: string | null
    duration: string | null
    level: $Enums.FinancialLevel | null
    features: string[]
    requirements: string | null
    whatYouWillLearn: string | null
    averageRating: number
    totalReviews: number
    totalSales: number
    isActive: boolean
    isFeatured: boolean
    isPopular: boolean
    createdAt: Date
    updatedAt: Date
    _count: MarketplaceProductCountAggregateOutputType | null
    _avg: MarketplaceProductAvgAggregateOutputType | null
    _sum: MarketplaceProductSumAggregateOutputType | null
    _min: MarketplaceProductMinAggregateOutputType | null
    _max: MarketplaceProductMaxAggregateOutputType | null
  }

  type GetMarketplaceProductGroupByPayload<T extends MarketplaceProductGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MarketplaceProductGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MarketplaceProductGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MarketplaceProductGroupByOutputType[P]>
            : GetScalarType<T[P], MarketplaceProductGroupByOutputType[P]>
        }
      >
    >


  export type MarketplaceProductSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    shortDescription?: boolean
    category?: boolean
    subcategory?: boolean
    price?: boolean
    currency?: boolean
    originalPrice?: boolean
    discount?: boolean
    providerId?: boolean
    providerName?: boolean
    providerLogo?: boolean
    images?: boolean
    videoUrl?: boolean
    duration?: boolean
    level?: boolean
    features?: boolean
    requirements?: boolean
    whatYouWillLearn?: boolean
    averageRating?: boolean
    totalReviews?: boolean
    totalSales?: boolean
    isActive?: boolean
    isFeatured?: boolean
    isPopular?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    orders?: boolean | MarketplaceProduct$ordersArgs<ExtArgs>
    reviews?: boolean | MarketplaceProduct$reviewsArgs<ExtArgs>
    _count?: boolean | MarketplaceProductCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["marketplaceProduct"]>

  export type MarketplaceProductSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    shortDescription?: boolean
    category?: boolean
    subcategory?: boolean
    price?: boolean
    currency?: boolean
    originalPrice?: boolean
    discount?: boolean
    providerId?: boolean
    providerName?: boolean
    providerLogo?: boolean
    images?: boolean
    videoUrl?: boolean
    duration?: boolean
    level?: boolean
    features?: boolean
    requirements?: boolean
    whatYouWillLearn?: boolean
    averageRating?: boolean
    totalReviews?: boolean
    totalSales?: boolean
    isActive?: boolean
    isFeatured?: boolean
    isPopular?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["marketplaceProduct"]>

  export type MarketplaceProductSelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    shortDescription?: boolean
    category?: boolean
    subcategory?: boolean
    price?: boolean
    currency?: boolean
    originalPrice?: boolean
    discount?: boolean
    providerId?: boolean
    providerName?: boolean
    providerLogo?: boolean
    images?: boolean
    videoUrl?: boolean
    duration?: boolean
    level?: boolean
    features?: boolean
    requirements?: boolean
    whatYouWillLearn?: boolean
    averageRating?: boolean
    totalReviews?: boolean
    totalSales?: boolean
    isActive?: boolean
    isFeatured?: boolean
    isPopular?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type MarketplaceProductInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    orders?: boolean | MarketplaceProduct$ordersArgs<ExtArgs>
    reviews?: boolean | MarketplaceProduct$reviewsArgs<ExtArgs>
    _count?: boolean | MarketplaceProductCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type MarketplaceProductIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $MarketplaceProductPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "MarketplaceProduct"
    objects: {
      orders: Prisma.$MarketplaceOrderPayload<ExtArgs>[]
      reviews: Prisma.$ProductReviewPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      description: string
      shortDescription: string | null
      category: $Enums.ProductCategory
      subcategory: string | null
      price: Prisma.Decimal
      currency: $Enums.Currency
      originalPrice: Prisma.Decimal | null
      discount: number | null
      providerId: string
      providerName: string
      providerLogo: string | null
      images: string[]
      videoUrl: string | null
      duration: string | null
      level: $Enums.FinancialLevel | null
      features: string[]
      requirements: string | null
      whatYouWillLearn: string | null
      averageRating: number
      totalReviews: number
      totalSales: number
      isActive: boolean
      isFeatured: boolean
      isPopular: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["marketplaceProduct"]>
    composites: {}
  }

  type MarketplaceProductGetPayload<S extends boolean | null | undefined | MarketplaceProductDefaultArgs> = $Result.GetResult<Prisma.$MarketplaceProductPayload, S>

  type MarketplaceProductCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<MarketplaceProductFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: MarketplaceProductCountAggregateInputType | true
    }

  export interface MarketplaceProductDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['MarketplaceProduct'], meta: { name: 'MarketplaceProduct' } }
    /**
     * Find zero or one MarketplaceProduct that matches the filter.
     * @param {MarketplaceProductFindUniqueArgs} args - Arguments to find a MarketplaceProduct
     * @example
     * // Get one MarketplaceProduct
     * const marketplaceProduct = await prisma.marketplaceProduct.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MarketplaceProductFindUniqueArgs>(args: SelectSubset<T, MarketplaceProductFindUniqueArgs<ExtArgs>>): Prisma__MarketplaceProductClient<$Result.GetResult<Prisma.$MarketplaceProductPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one MarketplaceProduct that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {MarketplaceProductFindUniqueOrThrowArgs} args - Arguments to find a MarketplaceProduct
     * @example
     * // Get one MarketplaceProduct
     * const marketplaceProduct = await prisma.marketplaceProduct.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MarketplaceProductFindUniqueOrThrowArgs>(args: SelectSubset<T, MarketplaceProductFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MarketplaceProductClient<$Result.GetResult<Prisma.$MarketplaceProductPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first MarketplaceProduct that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MarketplaceProductFindFirstArgs} args - Arguments to find a MarketplaceProduct
     * @example
     * // Get one MarketplaceProduct
     * const marketplaceProduct = await prisma.marketplaceProduct.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MarketplaceProductFindFirstArgs>(args?: SelectSubset<T, MarketplaceProductFindFirstArgs<ExtArgs>>): Prisma__MarketplaceProductClient<$Result.GetResult<Prisma.$MarketplaceProductPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first MarketplaceProduct that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MarketplaceProductFindFirstOrThrowArgs} args - Arguments to find a MarketplaceProduct
     * @example
     * // Get one MarketplaceProduct
     * const marketplaceProduct = await prisma.marketplaceProduct.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MarketplaceProductFindFirstOrThrowArgs>(args?: SelectSubset<T, MarketplaceProductFindFirstOrThrowArgs<ExtArgs>>): Prisma__MarketplaceProductClient<$Result.GetResult<Prisma.$MarketplaceProductPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more MarketplaceProducts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MarketplaceProductFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all MarketplaceProducts
     * const marketplaceProducts = await prisma.marketplaceProduct.findMany()
     * 
     * // Get first 10 MarketplaceProducts
     * const marketplaceProducts = await prisma.marketplaceProduct.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const marketplaceProductWithIdOnly = await prisma.marketplaceProduct.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MarketplaceProductFindManyArgs>(args?: SelectSubset<T, MarketplaceProductFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MarketplaceProductPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a MarketplaceProduct.
     * @param {MarketplaceProductCreateArgs} args - Arguments to create a MarketplaceProduct.
     * @example
     * // Create one MarketplaceProduct
     * const MarketplaceProduct = await prisma.marketplaceProduct.create({
     *   data: {
     *     // ... data to create a MarketplaceProduct
     *   }
     * })
     * 
     */
    create<T extends MarketplaceProductCreateArgs>(args: SelectSubset<T, MarketplaceProductCreateArgs<ExtArgs>>): Prisma__MarketplaceProductClient<$Result.GetResult<Prisma.$MarketplaceProductPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many MarketplaceProducts.
     * @param {MarketplaceProductCreateManyArgs} args - Arguments to create many MarketplaceProducts.
     * @example
     * // Create many MarketplaceProducts
     * const marketplaceProduct = await prisma.marketplaceProduct.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MarketplaceProductCreateManyArgs>(args?: SelectSubset<T, MarketplaceProductCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many MarketplaceProducts and returns the data saved in the database.
     * @param {MarketplaceProductCreateManyAndReturnArgs} args - Arguments to create many MarketplaceProducts.
     * @example
     * // Create many MarketplaceProducts
     * const marketplaceProduct = await prisma.marketplaceProduct.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many MarketplaceProducts and only return the `id`
     * const marketplaceProductWithIdOnly = await prisma.marketplaceProduct.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MarketplaceProductCreateManyAndReturnArgs>(args?: SelectSubset<T, MarketplaceProductCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MarketplaceProductPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a MarketplaceProduct.
     * @param {MarketplaceProductDeleteArgs} args - Arguments to delete one MarketplaceProduct.
     * @example
     * // Delete one MarketplaceProduct
     * const MarketplaceProduct = await prisma.marketplaceProduct.delete({
     *   where: {
     *     // ... filter to delete one MarketplaceProduct
     *   }
     * })
     * 
     */
    delete<T extends MarketplaceProductDeleteArgs>(args: SelectSubset<T, MarketplaceProductDeleteArgs<ExtArgs>>): Prisma__MarketplaceProductClient<$Result.GetResult<Prisma.$MarketplaceProductPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one MarketplaceProduct.
     * @param {MarketplaceProductUpdateArgs} args - Arguments to update one MarketplaceProduct.
     * @example
     * // Update one MarketplaceProduct
     * const marketplaceProduct = await prisma.marketplaceProduct.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MarketplaceProductUpdateArgs>(args: SelectSubset<T, MarketplaceProductUpdateArgs<ExtArgs>>): Prisma__MarketplaceProductClient<$Result.GetResult<Prisma.$MarketplaceProductPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more MarketplaceProducts.
     * @param {MarketplaceProductDeleteManyArgs} args - Arguments to filter MarketplaceProducts to delete.
     * @example
     * // Delete a few MarketplaceProducts
     * const { count } = await prisma.marketplaceProduct.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MarketplaceProductDeleteManyArgs>(args?: SelectSubset<T, MarketplaceProductDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MarketplaceProducts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MarketplaceProductUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many MarketplaceProducts
     * const marketplaceProduct = await prisma.marketplaceProduct.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MarketplaceProductUpdateManyArgs>(args: SelectSubset<T, MarketplaceProductUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one MarketplaceProduct.
     * @param {MarketplaceProductUpsertArgs} args - Arguments to update or create a MarketplaceProduct.
     * @example
     * // Update or create a MarketplaceProduct
     * const marketplaceProduct = await prisma.marketplaceProduct.upsert({
     *   create: {
     *     // ... data to create a MarketplaceProduct
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the MarketplaceProduct we want to update
     *   }
     * })
     */
    upsert<T extends MarketplaceProductUpsertArgs>(args: SelectSubset<T, MarketplaceProductUpsertArgs<ExtArgs>>): Prisma__MarketplaceProductClient<$Result.GetResult<Prisma.$MarketplaceProductPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of MarketplaceProducts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MarketplaceProductCountArgs} args - Arguments to filter MarketplaceProducts to count.
     * @example
     * // Count the number of MarketplaceProducts
     * const count = await prisma.marketplaceProduct.count({
     *   where: {
     *     // ... the filter for the MarketplaceProducts we want to count
     *   }
     * })
    **/
    count<T extends MarketplaceProductCountArgs>(
      args?: Subset<T, MarketplaceProductCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MarketplaceProductCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a MarketplaceProduct.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MarketplaceProductAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MarketplaceProductAggregateArgs>(args: Subset<T, MarketplaceProductAggregateArgs>): Prisma.PrismaPromise<GetMarketplaceProductAggregateType<T>>

    /**
     * Group by MarketplaceProduct.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MarketplaceProductGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MarketplaceProductGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MarketplaceProductGroupByArgs['orderBy'] }
        : { orderBy?: MarketplaceProductGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MarketplaceProductGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMarketplaceProductGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the MarketplaceProduct model
   */
  readonly fields: MarketplaceProductFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for MarketplaceProduct.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MarketplaceProductClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    orders<T extends MarketplaceProduct$ordersArgs<ExtArgs> = {}>(args?: Subset<T, MarketplaceProduct$ordersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MarketplaceOrderPayload<ExtArgs>, T, "findMany"> | Null>
    reviews<T extends MarketplaceProduct$reviewsArgs<ExtArgs> = {}>(args?: Subset<T, MarketplaceProduct$reviewsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductReviewPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the MarketplaceProduct model
   */ 
  interface MarketplaceProductFieldRefs {
    readonly id: FieldRef<"MarketplaceProduct", 'String'>
    readonly name: FieldRef<"MarketplaceProduct", 'String'>
    readonly description: FieldRef<"MarketplaceProduct", 'String'>
    readonly shortDescription: FieldRef<"MarketplaceProduct", 'String'>
    readonly category: FieldRef<"MarketplaceProduct", 'ProductCategory'>
    readonly subcategory: FieldRef<"MarketplaceProduct", 'String'>
    readonly price: FieldRef<"MarketplaceProduct", 'Decimal'>
    readonly currency: FieldRef<"MarketplaceProduct", 'Currency'>
    readonly originalPrice: FieldRef<"MarketplaceProduct", 'Decimal'>
    readonly discount: FieldRef<"MarketplaceProduct", 'Int'>
    readonly providerId: FieldRef<"MarketplaceProduct", 'String'>
    readonly providerName: FieldRef<"MarketplaceProduct", 'String'>
    readonly providerLogo: FieldRef<"MarketplaceProduct", 'String'>
    readonly images: FieldRef<"MarketplaceProduct", 'String[]'>
    readonly videoUrl: FieldRef<"MarketplaceProduct", 'String'>
    readonly duration: FieldRef<"MarketplaceProduct", 'String'>
    readonly level: FieldRef<"MarketplaceProduct", 'FinancialLevel'>
    readonly features: FieldRef<"MarketplaceProduct", 'String[]'>
    readonly requirements: FieldRef<"MarketplaceProduct", 'String'>
    readonly whatYouWillLearn: FieldRef<"MarketplaceProduct", 'String'>
    readonly averageRating: FieldRef<"MarketplaceProduct", 'Float'>
    readonly totalReviews: FieldRef<"MarketplaceProduct", 'Int'>
    readonly totalSales: FieldRef<"MarketplaceProduct", 'Int'>
    readonly isActive: FieldRef<"MarketplaceProduct", 'Boolean'>
    readonly isFeatured: FieldRef<"MarketplaceProduct", 'Boolean'>
    readonly isPopular: FieldRef<"MarketplaceProduct", 'Boolean'>
    readonly createdAt: FieldRef<"MarketplaceProduct", 'DateTime'>
    readonly updatedAt: FieldRef<"MarketplaceProduct", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * MarketplaceProduct findUnique
   */
  export type MarketplaceProductFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MarketplaceProduct
     */
    select?: MarketplaceProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarketplaceProductInclude<ExtArgs> | null
    /**
     * Filter, which MarketplaceProduct to fetch.
     */
    where: MarketplaceProductWhereUniqueInput
  }

  /**
   * MarketplaceProduct findUniqueOrThrow
   */
  export type MarketplaceProductFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MarketplaceProduct
     */
    select?: MarketplaceProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarketplaceProductInclude<ExtArgs> | null
    /**
     * Filter, which MarketplaceProduct to fetch.
     */
    where: MarketplaceProductWhereUniqueInput
  }

  /**
   * MarketplaceProduct findFirst
   */
  export type MarketplaceProductFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MarketplaceProduct
     */
    select?: MarketplaceProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarketplaceProductInclude<ExtArgs> | null
    /**
     * Filter, which MarketplaceProduct to fetch.
     */
    where?: MarketplaceProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MarketplaceProducts to fetch.
     */
    orderBy?: MarketplaceProductOrderByWithRelationInput | MarketplaceProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MarketplaceProducts.
     */
    cursor?: MarketplaceProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MarketplaceProducts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MarketplaceProducts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MarketplaceProducts.
     */
    distinct?: MarketplaceProductScalarFieldEnum | MarketplaceProductScalarFieldEnum[]
  }

  /**
   * MarketplaceProduct findFirstOrThrow
   */
  export type MarketplaceProductFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MarketplaceProduct
     */
    select?: MarketplaceProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarketplaceProductInclude<ExtArgs> | null
    /**
     * Filter, which MarketplaceProduct to fetch.
     */
    where?: MarketplaceProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MarketplaceProducts to fetch.
     */
    orderBy?: MarketplaceProductOrderByWithRelationInput | MarketplaceProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MarketplaceProducts.
     */
    cursor?: MarketplaceProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MarketplaceProducts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MarketplaceProducts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MarketplaceProducts.
     */
    distinct?: MarketplaceProductScalarFieldEnum | MarketplaceProductScalarFieldEnum[]
  }

  /**
   * MarketplaceProduct findMany
   */
  export type MarketplaceProductFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MarketplaceProduct
     */
    select?: MarketplaceProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarketplaceProductInclude<ExtArgs> | null
    /**
     * Filter, which MarketplaceProducts to fetch.
     */
    where?: MarketplaceProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MarketplaceProducts to fetch.
     */
    orderBy?: MarketplaceProductOrderByWithRelationInput | MarketplaceProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing MarketplaceProducts.
     */
    cursor?: MarketplaceProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MarketplaceProducts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MarketplaceProducts.
     */
    skip?: number
    distinct?: MarketplaceProductScalarFieldEnum | MarketplaceProductScalarFieldEnum[]
  }

  /**
   * MarketplaceProduct create
   */
  export type MarketplaceProductCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MarketplaceProduct
     */
    select?: MarketplaceProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarketplaceProductInclude<ExtArgs> | null
    /**
     * The data needed to create a MarketplaceProduct.
     */
    data: XOR<MarketplaceProductCreateInput, MarketplaceProductUncheckedCreateInput>
  }

  /**
   * MarketplaceProduct createMany
   */
  export type MarketplaceProductCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many MarketplaceProducts.
     */
    data: MarketplaceProductCreateManyInput | MarketplaceProductCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * MarketplaceProduct createManyAndReturn
   */
  export type MarketplaceProductCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MarketplaceProduct
     */
    select?: MarketplaceProductSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many MarketplaceProducts.
     */
    data: MarketplaceProductCreateManyInput | MarketplaceProductCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * MarketplaceProduct update
   */
  export type MarketplaceProductUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MarketplaceProduct
     */
    select?: MarketplaceProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarketplaceProductInclude<ExtArgs> | null
    /**
     * The data needed to update a MarketplaceProduct.
     */
    data: XOR<MarketplaceProductUpdateInput, MarketplaceProductUncheckedUpdateInput>
    /**
     * Choose, which MarketplaceProduct to update.
     */
    where: MarketplaceProductWhereUniqueInput
  }

  /**
   * MarketplaceProduct updateMany
   */
  export type MarketplaceProductUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update MarketplaceProducts.
     */
    data: XOR<MarketplaceProductUpdateManyMutationInput, MarketplaceProductUncheckedUpdateManyInput>
    /**
     * Filter which MarketplaceProducts to update
     */
    where?: MarketplaceProductWhereInput
  }

  /**
   * MarketplaceProduct upsert
   */
  export type MarketplaceProductUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MarketplaceProduct
     */
    select?: MarketplaceProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarketplaceProductInclude<ExtArgs> | null
    /**
     * The filter to search for the MarketplaceProduct to update in case it exists.
     */
    where: MarketplaceProductWhereUniqueInput
    /**
     * In case the MarketplaceProduct found by the `where` argument doesn't exist, create a new MarketplaceProduct with this data.
     */
    create: XOR<MarketplaceProductCreateInput, MarketplaceProductUncheckedCreateInput>
    /**
     * In case the MarketplaceProduct was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MarketplaceProductUpdateInput, MarketplaceProductUncheckedUpdateInput>
  }

  /**
   * MarketplaceProduct delete
   */
  export type MarketplaceProductDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MarketplaceProduct
     */
    select?: MarketplaceProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarketplaceProductInclude<ExtArgs> | null
    /**
     * Filter which MarketplaceProduct to delete.
     */
    where: MarketplaceProductWhereUniqueInput
  }

  /**
   * MarketplaceProduct deleteMany
   */
  export type MarketplaceProductDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MarketplaceProducts to delete
     */
    where?: MarketplaceProductWhereInput
  }

  /**
   * MarketplaceProduct.orders
   */
  export type MarketplaceProduct$ordersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MarketplaceOrder
     */
    select?: MarketplaceOrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarketplaceOrderInclude<ExtArgs> | null
    where?: MarketplaceOrderWhereInput
    orderBy?: MarketplaceOrderOrderByWithRelationInput | MarketplaceOrderOrderByWithRelationInput[]
    cursor?: MarketplaceOrderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MarketplaceOrderScalarFieldEnum | MarketplaceOrderScalarFieldEnum[]
  }

  /**
   * MarketplaceProduct.reviews
   */
  export type MarketplaceProduct$reviewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductReview
     */
    select?: ProductReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductReviewInclude<ExtArgs> | null
    where?: ProductReviewWhereInput
    orderBy?: ProductReviewOrderByWithRelationInput | ProductReviewOrderByWithRelationInput[]
    cursor?: ProductReviewWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductReviewScalarFieldEnum | ProductReviewScalarFieldEnum[]
  }

  /**
   * MarketplaceProduct without action
   */
  export type MarketplaceProductDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MarketplaceProduct
     */
    select?: MarketplaceProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarketplaceProductInclude<ExtArgs> | null
  }


  /**
   * Model MarketplaceOrder
   */

  export type AggregateMarketplaceOrder = {
    _count: MarketplaceOrderCountAggregateOutputType | null
    _avg: MarketplaceOrderAvgAggregateOutputType | null
    _sum: MarketplaceOrderSumAggregateOutputType | null
    _min: MarketplaceOrderMinAggregateOutputType | null
    _max: MarketplaceOrderMaxAggregateOutputType | null
  }

  export type MarketplaceOrderAvgAggregateOutputType = {
    amount: Decimal | null
    commission: Decimal | null
    commissionRate: number | null
  }

  export type MarketplaceOrderSumAggregateOutputType = {
    amount: Decimal | null
    commission: Decimal | null
    commissionRate: number | null
  }

  export type MarketplaceOrderMinAggregateOutputType = {
    id: string | null
    userId: string | null
    productId: string | null
    orderNumber: string | null
    amount: Decimal | null
    currency: $Enums.Currency | null
    status: $Enums.OrderStatus | null
    paymentMethod: $Enums.PaymentMethod | null
    paymentGateway: $Enums.PaymentGateway | null
    transactionId: string | null
    paymentStatus: $Enums.PaymentStatus | null
    commission: Decimal | null
    commissionRate: number | null
    createdAt: Date | null
    updatedAt: Date | null
    paidAt: Date | null
  }

  export type MarketplaceOrderMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    productId: string | null
    orderNumber: string | null
    amount: Decimal | null
    currency: $Enums.Currency | null
    status: $Enums.OrderStatus | null
    paymentMethod: $Enums.PaymentMethod | null
    paymentGateway: $Enums.PaymentGateway | null
    transactionId: string | null
    paymentStatus: $Enums.PaymentStatus | null
    commission: Decimal | null
    commissionRate: number | null
    createdAt: Date | null
    updatedAt: Date | null
    paidAt: Date | null
  }

  export type MarketplaceOrderCountAggregateOutputType = {
    id: number
    userId: number
    productId: number
    orderNumber: number
    amount: number
    currency: number
    status: number
    paymentMethod: number
    paymentGateway: number
    transactionId: number
    paymentStatus: number
    commission: number
    commissionRate: number
    createdAt: number
    updatedAt: number
    paidAt: number
    _all: number
  }


  export type MarketplaceOrderAvgAggregateInputType = {
    amount?: true
    commission?: true
    commissionRate?: true
  }

  export type MarketplaceOrderSumAggregateInputType = {
    amount?: true
    commission?: true
    commissionRate?: true
  }

  export type MarketplaceOrderMinAggregateInputType = {
    id?: true
    userId?: true
    productId?: true
    orderNumber?: true
    amount?: true
    currency?: true
    status?: true
    paymentMethod?: true
    paymentGateway?: true
    transactionId?: true
    paymentStatus?: true
    commission?: true
    commissionRate?: true
    createdAt?: true
    updatedAt?: true
    paidAt?: true
  }

  export type MarketplaceOrderMaxAggregateInputType = {
    id?: true
    userId?: true
    productId?: true
    orderNumber?: true
    amount?: true
    currency?: true
    status?: true
    paymentMethod?: true
    paymentGateway?: true
    transactionId?: true
    paymentStatus?: true
    commission?: true
    commissionRate?: true
    createdAt?: true
    updatedAt?: true
    paidAt?: true
  }

  export type MarketplaceOrderCountAggregateInputType = {
    id?: true
    userId?: true
    productId?: true
    orderNumber?: true
    amount?: true
    currency?: true
    status?: true
    paymentMethod?: true
    paymentGateway?: true
    transactionId?: true
    paymentStatus?: true
    commission?: true
    commissionRate?: true
    createdAt?: true
    updatedAt?: true
    paidAt?: true
    _all?: true
  }

  export type MarketplaceOrderAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MarketplaceOrder to aggregate.
     */
    where?: MarketplaceOrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MarketplaceOrders to fetch.
     */
    orderBy?: MarketplaceOrderOrderByWithRelationInput | MarketplaceOrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MarketplaceOrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MarketplaceOrders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MarketplaceOrders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned MarketplaceOrders
    **/
    _count?: true | MarketplaceOrderCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MarketplaceOrderAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MarketplaceOrderSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MarketplaceOrderMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MarketplaceOrderMaxAggregateInputType
  }

  export type GetMarketplaceOrderAggregateType<T extends MarketplaceOrderAggregateArgs> = {
        [P in keyof T & keyof AggregateMarketplaceOrder]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMarketplaceOrder[P]>
      : GetScalarType<T[P], AggregateMarketplaceOrder[P]>
  }




  export type MarketplaceOrderGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MarketplaceOrderWhereInput
    orderBy?: MarketplaceOrderOrderByWithAggregationInput | MarketplaceOrderOrderByWithAggregationInput[]
    by: MarketplaceOrderScalarFieldEnum[] | MarketplaceOrderScalarFieldEnum
    having?: MarketplaceOrderScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MarketplaceOrderCountAggregateInputType | true
    _avg?: MarketplaceOrderAvgAggregateInputType
    _sum?: MarketplaceOrderSumAggregateInputType
    _min?: MarketplaceOrderMinAggregateInputType
    _max?: MarketplaceOrderMaxAggregateInputType
  }

  export type MarketplaceOrderGroupByOutputType = {
    id: string
    userId: string
    productId: string
    orderNumber: string
    amount: Decimal
    currency: $Enums.Currency
    status: $Enums.OrderStatus
    paymentMethod: $Enums.PaymentMethod
    paymentGateway: $Enums.PaymentGateway
    transactionId: string | null
    paymentStatus: $Enums.PaymentStatus
    commission: Decimal | null
    commissionRate: number | null
    createdAt: Date
    updatedAt: Date
    paidAt: Date | null
    _count: MarketplaceOrderCountAggregateOutputType | null
    _avg: MarketplaceOrderAvgAggregateOutputType | null
    _sum: MarketplaceOrderSumAggregateOutputType | null
    _min: MarketplaceOrderMinAggregateOutputType | null
    _max: MarketplaceOrderMaxAggregateOutputType | null
  }

  type GetMarketplaceOrderGroupByPayload<T extends MarketplaceOrderGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MarketplaceOrderGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MarketplaceOrderGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MarketplaceOrderGroupByOutputType[P]>
            : GetScalarType<T[P], MarketplaceOrderGroupByOutputType[P]>
        }
      >
    >


  export type MarketplaceOrderSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    productId?: boolean
    orderNumber?: boolean
    amount?: boolean
    currency?: boolean
    status?: boolean
    paymentMethod?: boolean
    paymentGateway?: boolean
    transactionId?: boolean
    paymentStatus?: boolean
    commission?: boolean
    commissionRate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    paidAt?: boolean
    product?: boolean | MarketplaceProductDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["marketplaceOrder"]>

  export type MarketplaceOrderSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    productId?: boolean
    orderNumber?: boolean
    amount?: boolean
    currency?: boolean
    status?: boolean
    paymentMethod?: boolean
    paymentGateway?: boolean
    transactionId?: boolean
    paymentStatus?: boolean
    commission?: boolean
    commissionRate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    paidAt?: boolean
    product?: boolean | MarketplaceProductDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["marketplaceOrder"]>

  export type MarketplaceOrderSelectScalar = {
    id?: boolean
    userId?: boolean
    productId?: boolean
    orderNumber?: boolean
    amount?: boolean
    currency?: boolean
    status?: boolean
    paymentMethod?: boolean
    paymentGateway?: boolean
    transactionId?: boolean
    paymentStatus?: boolean
    commission?: boolean
    commissionRate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    paidAt?: boolean
  }

  export type MarketplaceOrderInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | MarketplaceProductDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type MarketplaceOrderIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | MarketplaceProductDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $MarketplaceOrderPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "MarketplaceOrder"
    objects: {
      product: Prisma.$MarketplaceProductPayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      productId: string
      orderNumber: string
      amount: Prisma.Decimal
      currency: $Enums.Currency
      status: $Enums.OrderStatus
      paymentMethod: $Enums.PaymentMethod
      paymentGateway: $Enums.PaymentGateway
      transactionId: string | null
      paymentStatus: $Enums.PaymentStatus
      commission: Prisma.Decimal | null
      commissionRate: number | null
      createdAt: Date
      updatedAt: Date
      paidAt: Date | null
    }, ExtArgs["result"]["marketplaceOrder"]>
    composites: {}
  }

  type MarketplaceOrderGetPayload<S extends boolean | null | undefined | MarketplaceOrderDefaultArgs> = $Result.GetResult<Prisma.$MarketplaceOrderPayload, S>

  type MarketplaceOrderCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<MarketplaceOrderFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: MarketplaceOrderCountAggregateInputType | true
    }

  export interface MarketplaceOrderDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['MarketplaceOrder'], meta: { name: 'MarketplaceOrder' } }
    /**
     * Find zero or one MarketplaceOrder that matches the filter.
     * @param {MarketplaceOrderFindUniqueArgs} args - Arguments to find a MarketplaceOrder
     * @example
     * // Get one MarketplaceOrder
     * const marketplaceOrder = await prisma.marketplaceOrder.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MarketplaceOrderFindUniqueArgs>(args: SelectSubset<T, MarketplaceOrderFindUniqueArgs<ExtArgs>>): Prisma__MarketplaceOrderClient<$Result.GetResult<Prisma.$MarketplaceOrderPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one MarketplaceOrder that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {MarketplaceOrderFindUniqueOrThrowArgs} args - Arguments to find a MarketplaceOrder
     * @example
     * // Get one MarketplaceOrder
     * const marketplaceOrder = await prisma.marketplaceOrder.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MarketplaceOrderFindUniqueOrThrowArgs>(args: SelectSubset<T, MarketplaceOrderFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MarketplaceOrderClient<$Result.GetResult<Prisma.$MarketplaceOrderPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first MarketplaceOrder that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MarketplaceOrderFindFirstArgs} args - Arguments to find a MarketplaceOrder
     * @example
     * // Get one MarketplaceOrder
     * const marketplaceOrder = await prisma.marketplaceOrder.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MarketplaceOrderFindFirstArgs>(args?: SelectSubset<T, MarketplaceOrderFindFirstArgs<ExtArgs>>): Prisma__MarketplaceOrderClient<$Result.GetResult<Prisma.$MarketplaceOrderPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first MarketplaceOrder that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MarketplaceOrderFindFirstOrThrowArgs} args - Arguments to find a MarketplaceOrder
     * @example
     * // Get one MarketplaceOrder
     * const marketplaceOrder = await prisma.marketplaceOrder.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MarketplaceOrderFindFirstOrThrowArgs>(args?: SelectSubset<T, MarketplaceOrderFindFirstOrThrowArgs<ExtArgs>>): Prisma__MarketplaceOrderClient<$Result.GetResult<Prisma.$MarketplaceOrderPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more MarketplaceOrders that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MarketplaceOrderFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all MarketplaceOrders
     * const marketplaceOrders = await prisma.marketplaceOrder.findMany()
     * 
     * // Get first 10 MarketplaceOrders
     * const marketplaceOrders = await prisma.marketplaceOrder.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const marketplaceOrderWithIdOnly = await prisma.marketplaceOrder.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MarketplaceOrderFindManyArgs>(args?: SelectSubset<T, MarketplaceOrderFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MarketplaceOrderPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a MarketplaceOrder.
     * @param {MarketplaceOrderCreateArgs} args - Arguments to create a MarketplaceOrder.
     * @example
     * // Create one MarketplaceOrder
     * const MarketplaceOrder = await prisma.marketplaceOrder.create({
     *   data: {
     *     // ... data to create a MarketplaceOrder
     *   }
     * })
     * 
     */
    create<T extends MarketplaceOrderCreateArgs>(args: SelectSubset<T, MarketplaceOrderCreateArgs<ExtArgs>>): Prisma__MarketplaceOrderClient<$Result.GetResult<Prisma.$MarketplaceOrderPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many MarketplaceOrders.
     * @param {MarketplaceOrderCreateManyArgs} args - Arguments to create many MarketplaceOrders.
     * @example
     * // Create many MarketplaceOrders
     * const marketplaceOrder = await prisma.marketplaceOrder.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MarketplaceOrderCreateManyArgs>(args?: SelectSubset<T, MarketplaceOrderCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many MarketplaceOrders and returns the data saved in the database.
     * @param {MarketplaceOrderCreateManyAndReturnArgs} args - Arguments to create many MarketplaceOrders.
     * @example
     * // Create many MarketplaceOrders
     * const marketplaceOrder = await prisma.marketplaceOrder.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many MarketplaceOrders and only return the `id`
     * const marketplaceOrderWithIdOnly = await prisma.marketplaceOrder.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MarketplaceOrderCreateManyAndReturnArgs>(args?: SelectSubset<T, MarketplaceOrderCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MarketplaceOrderPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a MarketplaceOrder.
     * @param {MarketplaceOrderDeleteArgs} args - Arguments to delete one MarketplaceOrder.
     * @example
     * // Delete one MarketplaceOrder
     * const MarketplaceOrder = await prisma.marketplaceOrder.delete({
     *   where: {
     *     // ... filter to delete one MarketplaceOrder
     *   }
     * })
     * 
     */
    delete<T extends MarketplaceOrderDeleteArgs>(args: SelectSubset<T, MarketplaceOrderDeleteArgs<ExtArgs>>): Prisma__MarketplaceOrderClient<$Result.GetResult<Prisma.$MarketplaceOrderPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one MarketplaceOrder.
     * @param {MarketplaceOrderUpdateArgs} args - Arguments to update one MarketplaceOrder.
     * @example
     * // Update one MarketplaceOrder
     * const marketplaceOrder = await prisma.marketplaceOrder.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MarketplaceOrderUpdateArgs>(args: SelectSubset<T, MarketplaceOrderUpdateArgs<ExtArgs>>): Prisma__MarketplaceOrderClient<$Result.GetResult<Prisma.$MarketplaceOrderPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more MarketplaceOrders.
     * @param {MarketplaceOrderDeleteManyArgs} args - Arguments to filter MarketplaceOrders to delete.
     * @example
     * // Delete a few MarketplaceOrders
     * const { count } = await prisma.marketplaceOrder.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MarketplaceOrderDeleteManyArgs>(args?: SelectSubset<T, MarketplaceOrderDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MarketplaceOrders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MarketplaceOrderUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many MarketplaceOrders
     * const marketplaceOrder = await prisma.marketplaceOrder.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MarketplaceOrderUpdateManyArgs>(args: SelectSubset<T, MarketplaceOrderUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one MarketplaceOrder.
     * @param {MarketplaceOrderUpsertArgs} args - Arguments to update or create a MarketplaceOrder.
     * @example
     * // Update or create a MarketplaceOrder
     * const marketplaceOrder = await prisma.marketplaceOrder.upsert({
     *   create: {
     *     // ... data to create a MarketplaceOrder
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the MarketplaceOrder we want to update
     *   }
     * })
     */
    upsert<T extends MarketplaceOrderUpsertArgs>(args: SelectSubset<T, MarketplaceOrderUpsertArgs<ExtArgs>>): Prisma__MarketplaceOrderClient<$Result.GetResult<Prisma.$MarketplaceOrderPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of MarketplaceOrders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MarketplaceOrderCountArgs} args - Arguments to filter MarketplaceOrders to count.
     * @example
     * // Count the number of MarketplaceOrders
     * const count = await prisma.marketplaceOrder.count({
     *   where: {
     *     // ... the filter for the MarketplaceOrders we want to count
     *   }
     * })
    **/
    count<T extends MarketplaceOrderCountArgs>(
      args?: Subset<T, MarketplaceOrderCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MarketplaceOrderCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a MarketplaceOrder.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MarketplaceOrderAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MarketplaceOrderAggregateArgs>(args: Subset<T, MarketplaceOrderAggregateArgs>): Prisma.PrismaPromise<GetMarketplaceOrderAggregateType<T>>

    /**
     * Group by MarketplaceOrder.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MarketplaceOrderGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MarketplaceOrderGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MarketplaceOrderGroupByArgs['orderBy'] }
        : { orderBy?: MarketplaceOrderGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MarketplaceOrderGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMarketplaceOrderGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the MarketplaceOrder model
   */
  readonly fields: MarketplaceOrderFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for MarketplaceOrder.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MarketplaceOrderClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    product<T extends MarketplaceProductDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MarketplaceProductDefaultArgs<ExtArgs>>): Prisma__MarketplaceProductClient<$Result.GetResult<Prisma.$MarketplaceProductPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the MarketplaceOrder model
   */ 
  interface MarketplaceOrderFieldRefs {
    readonly id: FieldRef<"MarketplaceOrder", 'String'>
    readonly userId: FieldRef<"MarketplaceOrder", 'String'>
    readonly productId: FieldRef<"MarketplaceOrder", 'String'>
    readonly orderNumber: FieldRef<"MarketplaceOrder", 'String'>
    readonly amount: FieldRef<"MarketplaceOrder", 'Decimal'>
    readonly currency: FieldRef<"MarketplaceOrder", 'Currency'>
    readonly status: FieldRef<"MarketplaceOrder", 'OrderStatus'>
    readonly paymentMethod: FieldRef<"MarketplaceOrder", 'PaymentMethod'>
    readonly paymentGateway: FieldRef<"MarketplaceOrder", 'PaymentGateway'>
    readonly transactionId: FieldRef<"MarketplaceOrder", 'String'>
    readonly paymentStatus: FieldRef<"MarketplaceOrder", 'PaymentStatus'>
    readonly commission: FieldRef<"MarketplaceOrder", 'Decimal'>
    readonly commissionRate: FieldRef<"MarketplaceOrder", 'Float'>
    readonly createdAt: FieldRef<"MarketplaceOrder", 'DateTime'>
    readonly updatedAt: FieldRef<"MarketplaceOrder", 'DateTime'>
    readonly paidAt: FieldRef<"MarketplaceOrder", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * MarketplaceOrder findUnique
   */
  export type MarketplaceOrderFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MarketplaceOrder
     */
    select?: MarketplaceOrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarketplaceOrderInclude<ExtArgs> | null
    /**
     * Filter, which MarketplaceOrder to fetch.
     */
    where: MarketplaceOrderWhereUniqueInput
  }

  /**
   * MarketplaceOrder findUniqueOrThrow
   */
  export type MarketplaceOrderFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MarketplaceOrder
     */
    select?: MarketplaceOrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarketplaceOrderInclude<ExtArgs> | null
    /**
     * Filter, which MarketplaceOrder to fetch.
     */
    where: MarketplaceOrderWhereUniqueInput
  }

  /**
   * MarketplaceOrder findFirst
   */
  export type MarketplaceOrderFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MarketplaceOrder
     */
    select?: MarketplaceOrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarketplaceOrderInclude<ExtArgs> | null
    /**
     * Filter, which MarketplaceOrder to fetch.
     */
    where?: MarketplaceOrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MarketplaceOrders to fetch.
     */
    orderBy?: MarketplaceOrderOrderByWithRelationInput | MarketplaceOrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MarketplaceOrders.
     */
    cursor?: MarketplaceOrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MarketplaceOrders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MarketplaceOrders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MarketplaceOrders.
     */
    distinct?: MarketplaceOrderScalarFieldEnum | MarketplaceOrderScalarFieldEnum[]
  }

  /**
   * MarketplaceOrder findFirstOrThrow
   */
  export type MarketplaceOrderFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MarketplaceOrder
     */
    select?: MarketplaceOrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarketplaceOrderInclude<ExtArgs> | null
    /**
     * Filter, which MarketplaceOrder to fetch.
     */
    where?: MarketplaceOrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MarketplaceOrders to fetch.
     */
    orderBy?: MarketplaceOrderOrderByWithRelationInput | MarketplaceOrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MarketplaceOrders.
     */
    cursor?: MarketplaceOrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MarketplaceOrders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MarketplaceOrders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MarketplaceOrders.
     */
    distinct?: MarketplaceOrderScalarFieldEnum | MarketplaceOrderScalarFieldEnum[]
  }

  /**
   * MarketplaceOrder findMany
   */
  export type MarketplaceOrderFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MarketplaceOrder
     */
    select?: MarketplaceOrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarketplaceOrderInclude<ExtArgs> | null
    /**
     * Filter, which MarketplaceOrders to fetch.
     */
    where?: MarketplaceOrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MarketplaceOrders to fetch.
     */
    orderBy?: MarketplaceOrderOrderByWithRelationInput | MarketplaceOrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing MarketplaceOrders.
     */
    cursor?: MarketplaceOrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MarketplaceOrders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MarketplaceOrders.
     */
    skip?: number
    distinct?: MarketplaceOrderScalarFieldEnum | MarketplaceOrderScalarFieldEnum[]
  }

  /**
   * MarketplaceOrder create
   */
  export type MarketplaceOrderCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MarketplaceOrder
     */
    select?: MarketplaceOrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarketplaceOrderInclude<ExtArgs> | null
    /**
     * The data needed to create a MarketplaceOrder.
     */
    data: XOR<MarketplaceOrderCreateInput, MarketplaceOrderUncheckedCreateInput>
  }

  /**
   * MarketplaceOrder createMany
   */
  export type MarketplaceOrderCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many MarketplaceOrders.
     */
    data: MarketplaceOrderCreateManyInput | MarketplaceOrderCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * MarketplaceOrder createManyAndReturn
   */
  export type MarketplaceOrderCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MarketplaceOrder
     */
    select?: MarketplaceOrderSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many MarketplaceOrders.
     */
    data: MarketplaceOrderCreateManyInput | MarketplaceOrderCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarketplaceOrderIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * MarketplaceOrder update
   */
  export type MarketplaceOrderUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MarketplaceOrder
     */
    select?: MarketplaceOrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarketplaceOrderInclude<ExtArgs> | null
    /**
     * The data needed to update a MarketplaceOrder.
     */
    data: XOR<MarketplaceOrderUpdateInput, MarketplaceOrderUncheckedUpdateInput>
    /**
     * Choose, which MarketplaceOrder to update.
     */
    where: MarketplaceOrderWhereUniqueInput
  }

  /**
   * MarketplaceOrder updateMany
   */
  export type MarketplaceOrderUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update MarketplaceOrders.
     */
    data: XOR<MarketplaceOrderUpdateManyMutationInput, MarketplaceOrderUncheckedUpdateManyInput>
    /**
     * Filter which MarketplaceOrders to update
     */
    where?: MarketplaceOrderWhereInput
  }

  /**
   * MarketplaceOrder upsert
   */
  export type MarketplaceOrderUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MarketplaceOrder
     */
    select?: MarketplaceOrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarketplaceOrderInclude<ExtArgs> | null
    /**
     * The filter to search for the MarketplaceOrder to update in case it exists.
     */
    where: MarketplaceOrderWhereUniqueInput
    /**
     * In case the MarketplaceOrder found by the `where` argument doesn't exist, create a new MarketplaceOrder with this data.
     */
    create: XOR<MarketplaceOrderCreateInput, MarketplaceOrderUncheckedCreateInput>
    /**
     * In case the MarketplaceOrder was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MarketplaceOrderUpdateInput, MarketplaceOrderUncheckedUpdateInput>
  }

  /**
   * MarketplaceOrder delete
   */
  export type MarketplaceOrderDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MarketplaceOrder
     */
    select?: MarketplaceOrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarketplaceOrderInclude<ExtArgs> | null
    /**
     * Filter which MarketplaceOrder to delete.
     */
    where: MarketplaceOrderWhereUniqueInput
  }

  /**
   * MarketplaceOrder deleteMany
   */
  export type MarketplaceOrderDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MarketplaceOrders to delete
     */
    where?: MarketplaceOrderWhereInput
  }

  /**
   * MarketplaceOrder without action
   */
  export type MarketplaceOrderDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MarketplaceOrder
     */
    select?: MarketplaceOrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MarketplaceOrderInclude<ExtArgs> | null
  }


  /**
   * Model ProductReview
   */

  export type AggregateProductReview = {
    _count: ProductReviewCountAggregateOutputType | null
    _avg: ProductReviewAvgAggregateOutputType | null
    _sum: ProductReviewSumAggregateOutputType | null
    _min: ProductReviewMinAggregateOutputType | null
    _max: ProductReviewMaxAggregateOutputType | null
  }

  export type ProductReviewAvgAggregateOutputType = {
    rating: number | null
  }

  export type ProductReviewSumAggregateOutputType = {
    rating: number | null
  }

  export type ProductReviewMinAggregateOutputType = {
    id: string | null
    productId: string | null
    userId: string | null
    rating: number | null
    title: string | null
    comment: string | null
    isVerified: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ProductReviewMaxAggregateOutputType = {
    id: string | null
    productId: string | null
    userId: string | null
    rating: number | null
    title: string | null
    comment: string | null
    isVerified: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ProductReviewCountAggregateOutputType = {
    id: number
    productId: number
    userId: number
    rating: number
    title: number
    comment: number
    isVerified: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ProductReviewAvgAggregateInputType = {
    rating?: true
  }

  export type ProductReviewSumAggregateInputType = {
    rating?: true
  }

  export type ProductReviewMinAggregateInputType = {
    id?: true
    productId?: true
    userId?: true
    rating?: true
    title?: true
    comment?: true
    isVerified?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ProductReviewMaxAggregateInputType = {
    id?: true
    productId?: true
    userId?: true
    rating?: true
    title?: true
    comment?: true
    isVerified?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ProductReviewCountAggregateInputType = {
    id?: true
    productId?: true
    userId?: true
    rating?: true
    title?: true
    comment?: true
    isVerified?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ProductReviewAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductReview to aggregate.
     */
    where?: ProductReviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductReviews to fetch.
     */
    orderBy?: ProductReviewOrderByWithRelationInput | ProductReviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProductReviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductReviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductReviews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ProductReviews
    **/
    _count?: true | ProductReviewCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProductReviewAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProductReviewSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductReviewMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductReviewMaxAggregateInputType
  }

  export type GetProductReviewAggregateType<T extends ProductReviewAggregateArgs> = {
        [P in keyof T & keyof AggregateProductReview]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProductReview[P]>
      : GetScalarType<T[P], AggregateProductReview[P]>
  }




  export type ProductReviewGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductReviewWhereInput
    orderBy?: ProductReviewOrderByWithAggregationInput | ProductReviewOrderByWithAggregationInput[]
    by: ProductReviewScalarFieldEnum[] | ProductReviewScalarFieldEnum
    having?: ProductReviewScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductReviewCountAggregateInputType | true
    _avg?: ProductReviewAvgAggregateInputType
    _sum?: ProductReviewSumAggregateInputType
    _min?: ProductReviewMinAggregateInputType
    _max?: ProductReviewMaxAggregateInputType
  }

  export type ProductReviewGroupByOutputType = {
    id: string
    productId: string
    userId: string
    rating: number
    title: string | null
    comment: string | null
    isVerified: boolean
    createdAt: Date
    updatedAt: Date
    _count: ProductReviewCountAggregateOutputType | null
    _avg: ProductReviewAvgAggregateOutputType | null
    _sum: ProductReviewSumAggregateOutputType | null
    _min: ProductReviewMinAggregateOutputType | null
    _max: ProductReviewMaxAggregateOutputType | null
  }

  type GetProductReviewGroupByPayload<T extends ProductReviewGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductReviewGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductReviewGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductReviewGroupByOutputType[P]>
            : GetScalarType<T[P], ProductReviewGroupByOutputType[P]>
        }
      >
    >


  export type ProductReviewSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    userId?: boolean
    rating?: boolean
    title?: boolean
    comment?: boolean
    isVerified?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    product?: boolean | MarketplaceProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productReview"]>

  export type ProductReviewSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    userId?: boolean
    rating?: boolean
    title?: boolean
    comment?: boolean
    isVerified?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    product?: boolean | MarketplaceProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productReview"]>

  export type ProductReviewSelectScalar = {
    id?: boolean
    productId?: boolean
    userId?: boolean
    rating?: boolean
    title?: boolean
    comment?: boolean
    isVerified?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ProductReviewInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | MarketplaceProductDefaultArgs<ExtArgs>
  }
  export type ProductReviewIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | MarketplaceProductDefaultArgs<ExtArgs>
  }

  export type $ProductReviewPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ProductReview"
    objects: {
      product: Prisma.$MarketplaceProductPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      productId: string
      userId: string
      rating: number
      title: string | null
      comment: string | null
      isVerified: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["productReview"]>
    composites: {}
  }

  type ProductReviewGetPayload<S extends boolean | null | undefined | ProductReviewDefaultArgs> = $Result.GetResult<Prisma.$ProductReviewPayload, S>

  type ProductReviewCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ProductReviewFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ProductReviewCountAggregateInputType | true
    }

  export interface ProductReviewDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ProductReview'], meta: { name: 'ProductReview' } }
    /**
     * Find zero or one ProductReview that matches the filter.
     * @param {ProductReviewFindUniqueArgs} args - Arguments to find a ProductReview
     * @example
     * // Get one ProductReview
     * const productReview = await prisma.productReview.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProductReviewFindUniqueArgs>(args: SelectSubset<T, ProductReviewFindUniqueArgs<ExtArgs>>): Prisma__ProductReviewClient<$Result.GetResult<Prisma.$ProductReviewPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one ProductReview that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ProductReviewFindUniqueOrThrowArgs} args - Arguments to find a ProductReview
     * @example
     * // Get one ProductReview
     * const productReview = await prisma.productReview.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProductReviewFindUniqueOrThrowArgs>(args: SelectSubset<T, ProductReviewFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProductReviewClient<$Result.GetResult<Prisma.$ProductReviewPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first ProductReview that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductReviewFindFirstArgs} args - Arguments to find a ProductReview
     * @example
     * // Get one ProductReview
     * const productReview = await prisma.productReview.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProductReviewFindFirstArgs>(args?: SelectSubset<T, ProductReviewFindFirstArgs<ExtArgs>>): Prisma__ProductReviewClient<$Result.GetResult<Prisma.$ProductReviewPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first ProductReview that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductReviewFindFirstOrThrowArgs} args - Arguments to find a ProductReview
     * @example
     * // Get one ProductReview
     * const productReview = await prisma.productReview.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProductReviewFindFirstOrThrowArgs>(args?: SelectSubset<T, ProductReviewFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProductReviewClient<$Result.GetResult<Prisma.$ProductReviewPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more ProductReviews that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductReviewFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProductReviews
     * const productReviews = await prisma.productReview.findMany()
     * 
     * // Get first 10 ProductReviews
     * const productReviews = await prisma.productReview.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const productReviewWithIdOnly = await prisma.productReview.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProductReviewFindManyArgs>(args?: SelectSubset<T, ProductReviewFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductReviewPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a ProductReview.
     * @param {ProductReviewCreateArgs} args - Arguments to create a ProductReview.
     * @example
     * // Create one ProductReview
     * const ProductReview = await prisma.productReview.create({
     *   data: {
     *     // ... data to create a ProductReview
     *   }
     * })
     * 
     */
    create<T extends ProductReviewCreateArgs>(args: SelectSubset<T, ProductReviewCreateArgs<ExtArgs>>): Prisma__ProductReviewClient<$Result.GetResult<Prisma.$ProductReviewPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many ProductReviews.
     * @param {ProductReviewCreateManyArgs} args - Arguments to create many ProductReviews.
     * @example
     * // Create many ProductReviews
     * const productReview = await prisma.productReview.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProductReviewCreateManyArgs>(args?: SelectSubset<T, ProductReviewCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ProductReviews and returns the data saved in the database.
     * @param {ProductReviewCreateManyAndReturnArgs} args - Arguments to create many ProductReviews.
     * @example
     * // Create many ProductReviews
     * const productReview = await prisma.productReview.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ProductReviews and only return the `id`
     * const productReviewWithIdOnly = await prisma.productReview.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProductReviewCreateManyAndReturnArgs>(args?: SelectSubset<T, ProductReviewCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductReviewPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a ProductReview.
     * @param {ProductReviewDeleteArgs} args - Arguments to delete one ProductReview.
     * @example
     * // Delete one ProductReview
     * const ProductReview = await prisma.productReview.delete({
     *   where: {
     *     // ... filter to delete one ProductReview
     *   }
     * })
     * 
     */
    delete<T extends ProductReviewDeleteArgs>(args: SelectSubset<T, ProductReviewDeleteArgs<ExtArgs>>): Prisma__ProductReviewClient<$Result.GetResult<Prisma.$ProductReviewPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one ProductReview.
     * @param {ProductReviewUpdateArgs} args - Arguments to update one ProductReview.
     * @example
     * // Update one ProductReview
     * const productReview = await prisma.productReview.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProductReviewUpdateArgs>(args: SelectSubset<T, ProductReviewUpdateArgs<ExtArgs>>): Prisma__ProductReviewClient<$Result.GetResult<Prisma.$ProductReviewPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more ProductReviews.
     * @param {ProductReviewDeleteManyArgs} args - Arguments to filter ProductReviews to delete.
     * @example
     * // Delete a few ProductReviews
     * const { count } = await prisma.productReview.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProductReviewDeleteManyArgs>(args?: SelectSubset<T, ProductReviewDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProductReviews.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductReviewUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProductReviews
     * const productReview = await prisma.productReview.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProductReviewUpdateManyArgs>(args: SelectSubset<T, ProductReviewUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ProductReview.
     * @param {ProductReviewUpsertArgs} args - Arguments to update or create a ProductReview.
     * @example
     * // Update or create a ProductReview
     * const productReview = await prisma.productReview.upsert({
     *   create: {
     *     // ... data to create a ProductReview
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProductReview we want to update
     *   }
     * })
     */
    upsert<T extends ProductReviewUpsertArgs>(args: SelectSubset<T, ProductReviewUpsertArgs<ExtArgs>>): Prisma__ProductReviewClient<$Result.GetResult<Prisma.$ProductReviewPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of ProductReviews.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductReviewCountArgs} args - Arguments to filter ProductReviews to count.
     * @example
     * // Count the number of ProductReviews
     * const count = await prisma.productReview.count({
     *   where: {
     *     // ... the filter for the ProductReviews we want to count
     *   }
     * })
    **/
    count<T extends ProductReviewCountArgs>(
      args?: Subset<T, ProductReviewCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductReviewCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProductReview.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductReviewAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductReviewAggregateArgs>(args: Subset<T, ProductReviewAggregateArgs>): Prisma.PrismaPromise<GetProductReviewAggregateType<T>>

    /**
     * Group by ProductReview.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductReviewGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProductReviewGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProductReviewGroupByArgs['orderBy'] }
        : { orderBy?: ProductReviewGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProductReviewGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductReviewGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ProductReview model
   */
  readonly fields: ProductReviewFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ProductReview.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProductReviewClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    product<T extends MarketplaceProductDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MarketplaceProductDefaultArgs<ExtArgs>>): Prisma__MarketplaceProductClient<$Result.GetResult<Prisma.$MarketplaceProductPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ProductReview model
   */ 
  interface ProductReviewFieldRefs {
    readonly id: FieldRef<"ProductReview", 'String'>
    readonly productId: FieldRef<"ProductReview", 'String'>
    readonly userId: FieldRef<"ProductReview", 'String'>
    readonly rating: FieldRef<"ProductReview", 'Int'>
    readonly title: FieldRef<"ProductReview", 'String'>
    readonly comment: FieldRef<"ProductReview", 'String'>
    readonly isVerified: FieldRef<"ProductReview", 'Boolean'>
    readonly createdAt: FieldRef<"ProductReview", 'DateTime'>
    readonly updatedAt: FieldRef<"ProductReview", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ProductReview findUnique
   */
  export type ProductReviewFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductReview
     */
    select?: ProductReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductReviewInclude<ExtArgs> | null
    /**
     * Filter, which ProductReview to fetch.
     */
    where: ProductReviewWhereUniqueInput
  }

  /**
   * ProductReview findUniqueOrThrow
   */
  export type ProductReviewFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductReview
     */
    select?: ProductReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductReviewInclude<ExtArgs> | null
    /**
     * Filter, which ProductReview to fetch.
     */
    where: ProductReviewWhereUniqueInput
  }

  /**
   * ProductReview findFirst
   */
  export type ProductReviewFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductReview
     */
    select?: ProductReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductReviewInclude<ExtArgs> | null
    /**
     * Filter, which ProductReview to fetch.
     */
    where?: ProductReviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductReviews to fetch.
     */
    orderBy?: ProductReviewOrderByWithRelationInput | ProductReviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductReviews.
     */
    cursor?: ProductReviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductReviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductReviews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductReviews.
     */
    distinct?: ProductReviewScalarFieldEnum | ProductReviewScalarFieldEnum[]
  }

  /**
   * ProductReview findFirstOrThrow
   */
  export type ProductReviewFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductReview
     */
    select?: ProductReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductReviewInclude<ExtArgs> | null
    /**
     * Filter, which ProductReview to fetch.
     */
    where?: ProductReviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductReviews to fetch.
     */
    orderBy?: ProductReviewOrderByWithRelationInput | ProductReviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductReviews.
     */
    cursor?: ProductReviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductReviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductReviews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductReviews.
     */
    distinct?: ProductReviewScalarFieldEnum | ProductReviewScalarFieldEnum[]
  }

  /**
   * ProductReview findMany
   */
  export type ProductReviewFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductReview
     */
    select?: ProductReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductReviewInclude<ExtArgs> | null
    /**
     * Filter, which ProductReviews to fetch.
     */
    where?: ProductReviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductReviews to fetch.
     */
    orderBy?: ProductReviewOrderByWithRelationInput | ProductReviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ProductReviews.
     */
    cursor?: ProductReviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductReviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductReviews.
     */
    skip?: number
    distinct?: ProductReviewScalarFieldEnum | ProductReviewScalarFieldEnum[]
  }

  /**
   * ProductReview create
   */
  export type ProductReviewCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductReview
     */
    select?: ProductReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductReviewInclude<ExtArgs> | null
    /**
     * The data needed to create a ProductReview.
     */
    data: XOR<ProductReviewCreateInput, ProductReviewUncheckedCreateInput>
  }

  /**
   * ProductReview createMany
   */
  export type ProductReviewCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ProductReviews.
     */
    data: ProductReviewCreateManyInput | ProductReviewCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ProductReview createManyAndReturn
   */
  export type ProductReviewCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductReview
     */
    select?: ProductReviewSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many ProductReviews.
     */
    data: ProductReviewCreateManyInput | ProductReviewCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductReviewIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProductReview update
   */
  export type ProductReviewUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductReview
     */
    select?: ProductReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductReviewInclude<ExtArgs> | null
    /**
     * The data needed to update a ProductReview.
     */
    data: XOR<ProductReviewUpdateInput, ProductReviewUncheckedUpdateInput>
    /**
     * Choose, which ProductReview to update.
     */
    where: ProductReviewWhereUniqueInput
  }

  /**
   * ProductReview updateMany
   */
  export type ProductReviewUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ProductReviews.
     */
    data: XOR<ProductReviewUpdateManyMutationInput, ProductReviewUncheckedUpdateManyInput>
    /**
     * Filter which ProductReviews to update
     */
    where?: ProductReviewWhereInput
  }

  /**
   * ProductReview upsert
   */
  export type ProductReviewUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductReview
     */
    select?: ProductReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductReviewInclude<ExtArgs> | null
    /**
     * The filter to search for the ProductReview to update in case it exists.
     */
    where: ProductReviewWhereUniqueInput
    /**
     * In case the ProductReview found by the `where` argument doesn't exist, create a new ProductReview with this data.
     */
    create: XOR<ProductReviewCreateInput, ProductReviewUncheckedCreateInput>
    /**
     * In case the ProductReview was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProductReviewUpdateInput, ProductReviewUncheckedUpdateInput>
  }

  /**
   * ProductReview delete
   */
  export type ProductReviewDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductReview
     */
    select?: ProductReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductReviewInclude<ExtArgs> | null
    /**
     * Filter which ProductReview to delete.
     */
    where: ProductReviewWhereUniqueInput
  }

  /**
   * ProductReview deleteMany
   */
  export type ProductReviewDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductReviews to delete
     */
    where?: ProductReviewWhereInput
  }

  /**
   * ProductReview without action
   */
  export type ProductReviewDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductReview
     */
    select?: ProductReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductReviewInclude<ExtArgs> | null
  }


  /**
   * Model AuditLog
   */

  export type AggregateAuditLog = {
    _count: AuditLogCountAggregateOutputType | null
    _min: AuditLogMinAggregateOutputType | null
    _max: AuditLogMaxAggregateOutputType | null
  }

  export type AuditLogMinAggregateOutputType = {
    id: string | null
    userId: string | null
    action: string | null
    resource: string | null
    resourceId: string | null
    details: string | null
    ipAddress: string | null
    userAgent: string | null
    success: boolean | null
    errorMessage: string | null
    timestamp: Date | null
  }

  export type AuditLogMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    action: string | null
    resource: string | null
    resourceId: string | null
    details: string | null
    ipAddress: string | null
    userAgent: string | null
    success: boolean | null
    errorMessage: string | null
    timestamp: Date | null
  }

  export type AuditLogCountAggregateOutputType = {
    id: number
    userId: number
    action: number
    resource: number
    resourceId: number
    details: number
    ipAddress: number
    userAgent: number
    success: number
    errorMessage: number
    timestamp: number
    _all: number
  }


  export type AuditLogMinAggregateInputType = {
    id?: true
    userId?: true
    action?: true
    resource?: true
    resourceId?: true
    details?: true
    ipAddress?: true
    userAgent?: true
    success?: true
    errorMessage?: true
    timestamp?: true
  }

  export type AuditLogMaxAggregateInputType = {
    id?: true
    userId?: true
    action?: true
    resource?: true
    resourceId?: true
    details?: true
    ipAddress?: true
    userAgent?: true
    success?: true
    errorMessage?: true
    timestamp?: true
  }

  export type AuditLogCountAggregateInputType = {
    id?: true
    userId?: true
    action?: true
    resource?: true
    resourceId?: true
    details?: true
    ipAddress?: true
    userAgent?: true
    success?: true
    errorMessage?: true
    timestamp?: true
    _all?: true
  }

  export type AuditLogAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AuditLog to aggregate.
     */
    where?: AuditLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AuditLogs to fetch.
     */
    orderBy?: AuditLogOrderByWithRelationInput | AuditLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AuditLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AuditLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AuditLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AuditLogs
    **/
    _count?: true | AuditLogCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AuditLogMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AuditLogMaxAggregateInputType
  }

  export type GetAuditLogAggregateType<T extends AuditLogAggregateArgs> = {
        [P in keyof T & keyof AggregateAuditLog]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAuditLog[P]>
      : GetScalarType<T[P], AggregateAuditLog[P]>
  }




  export type AuditLogGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AuditLogWhereInput
    orderBy?: AuditLogOrderByWithAggregationInput | AuditLogOrderByWithAggregationInput[]
    by: AuditLogScalarFieldEnum[] | AuditLogScalarFieldEnum
    having?: AuditLogScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AuditLogCountAggregateInputType | true
    _min?: AuditLogMinAggregateInputType
    _max?: AuditLogMaxAggregateInputType
  }

  export type AuditLogGroupByOutputType = {
    id: string
    userId: string
    action: string
    resource: string
    resourceId: string | null
    details: string | null
    ipAddress: string | null
    userAgent: string | null
    success: boolean
    errorMessage: string | null
    timestamp: Date
    _count: AuditLogCountAggregateOutputType | null
    _min: AuditLogMinAggregateOutputType | null
    _max: AuditLogMaxAggregateOutputType | null
  }

  type GetAuditLogGroupByPayload<T extends AuditLogGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AuditLogGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AuditLogGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AuditLogGroupByOutputType[P]>
            : GetScalarType<T[P], AuditLogGroupByOutputType[P]>
        }
      >
    >


  export type AuditLogSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    action?: boolean
    resource?: boolean
    resourceId?: boolean
    details?: boolean
    ipAddress?: boolean
    userAgent?: boolean
    success?: boolean
    errorMessage?: boolean
    timestamp?: boolean
  }, ExtArgs["result"]["auditLog"]>

  export type AuditLogSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    action?: boolean
    resource?: boolean
    resourceId?: boolean
    details?: boolean
    ipAddress?: boolean
    userAgent?: boolean
    success?: boolean
    errorMessage?: boolean
    timestamp?: boolean
  }, ExtArgs["result"]["auditLog"]>

  export type AuditLogSelectScalar = {
    id?: boolean
    userId?: boolean
    action?: boolean
    resource?: boolean
    resourceId?: boolean
    details?: boolean
    ipAddress?: boolean
    userAgent?: boolean
    success?: boolean
    errorMessage?: boolean
    timestamp?: boolean
  }


  export type $AuditLogPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AuditLog"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      action: string
      resource: string
      resourceId: string | null
      details: string | null
      ipAddress: string | null
      userAgent: string | null
      success: boolean
      errorMessage: string | null
      timestamp: Date
    }, ExtArgs["result"]["auditLog"]>
    composites: {}
  }

  type AuditLogGetPayload<S extends boolean | null | undefined | AuditLogDefaultArgs> = $Result.GetResult<Prisma.$AuditLogPayload, S>

  type AuditLogCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<AuditLogFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: AuditLogCountAggregateInputType | true
    }

  export interface AuditLogDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AuditLog'], meta: { name: 'AuditLog' } }
    /**
     * Find zero or one AuditLog that matches the filter.
     * @param {AuditLogFindUniqueArgs} args - Arguments to find a AuditLog
     * @example
     * // Get one AuditLog
     * const auditLog = await prisma.auditLog.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AuditLogFindUniqueArgs>(args: SelectSubset<T, AuditLogFindUniqueArgs<ExtArgs>>): Prisma__AuditLogClient<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one AuditLog that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {AuditLogFindUniqueOrThrowArgs} args - Arguments to find a AuditLog
     * @example
     * // Get one AuditLog
     * const auditLog = await prisma.auditLog.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AuditLogFindUniqueOrThrowArgs>(args: SelectSubset<T, AuditLogFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AuditLogClient<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first AuditLog that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuditLogFindFirstArgs} args - Arguments to find a AuditLog
     * @example
     * // Get one AuditLog
     * const auditLog = await prisma.auditLog.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AuditLogFindFirstArgs>(args?: SelectSubset<T, AuditLogFindFirstArgs<ExtArgs>>): Prisma__AuditLogClient<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first AuditLog that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuditLogFindFirstOrThrowArgs} args - Arguments to find a AuditLog
     * @example
     * // Get one AuditLog
     * const auditLog = await prisma.auditLog.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AuditLogFindFirstOrThrowArgs>(args?: SelectSubset<T, AuditLogFindFirstOrThrowArgs<ExtArgs>>): Prisma__AuditLogClient<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more AuditLogs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuditLogFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AuditLogs
     * const auditLogs = await prisma.auditLog.findMany()
     * 
     * // Get first 10 AuditLogs
     * const auditLogs = await prisma.auditLog.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const auditLogWithIdOnly = await prisma.auditLog.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AuditLogFindManyArgs>(args?: SelectSubset<T, AuditLogFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a AuditLog.
     * @param {AuditLogCreateArgs} args - Arguments to create a AuditLog.
     * @example
     * // Create one AuditLog
     * const AuditLog = await prisma.auditLog.create({
     *   data: {
     *     // ... data to create a AuditLog
     *   }
     * })
     * 
     */
    create<T extends AuditLogCreateArgs>(args: SelectSubset<T, AuditLogCreateArgs<ExtArgs>>): Prisma__AuditLogClient<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many AuditLogs.
     * @param {AuditLogCreateManyArgs} args - Arguments to create many AuditLogs.
     * @example
     * // Create many AuditLogs
     * const auditLog = await prisma.auditLog.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AuditLogCreateManyArgs>(args?: SelectSubset<T, AuditLogCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many AuditLogs and returns the data saved in the database.
     * @param {AuditLogCreateManyAndReturnArgs} args - Arguments to create many AuditLogs.
     * @example
     * // Create many AuditLogs
     * const auditLog = await prisma.auditLog.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many AuditLogs and only return the `id`
     * const auditLogWithIdOnly = await prisma.auditLog.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AuditLogCreateManyAndReturnArgs>(args?: SelectSubset<T, AuditLogCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a AuditLog.
     * @param {AuditLogDeleteArgs} args - Arguments to delete one AuditLog.
     * @example
     * // Delete one AuditLog
     * const AuditLog = await prisma.auditLog.delete({
     *   where: {
     *     // ... filter to delete one AuditLog
     *   }
     * })
     * 
     */
    delete<T extends AuditLogDeleteArgs>(args: SelectSubset<T, AuditLogDeleteArgs<ExtArgs>>): Prisma__AuditLogClient<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one AuditLog.
     * @param {AuditLogUpdateArgs} args - Arguments to update one AuditLog.
     * @example
     * // Update one AuditLog
     * const auditLog = await prisma.auditLog.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AuditLogUpdateArgs>(args: SelectSubset<T, AuditLogUpdateArgs<ExtArgs>>): Prisma__AuditLogClient<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more AuditLogs.
     * @param {AuditLogDeleteManyArgs} args - Arguments to filter AuditLogs to delete.
     * @example
     * // Delete a few AuditLogs
     * const { count } = await prisma.auditLog.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AuditLogDeleteManyArgs>(args?: SelectSubset<T, AuditLogDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AuditLogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuditLogUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AuditLogs
     * const auditLog = await prisma.auditLog.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AuditLogUpdateManyArgs>(args: SelectSubset<T, AuditLogUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one AuditLog.
     * @param {AuditLogUpsertArgs} args - Arguments to update or create a AuditLog.
     * @example
     * // Update or create a AuditLog
     * const auditLog = await prisma.auditLog.upsert({
     *   create: {
     *     // ... data to create a AuditLog
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AuditLog we want to update
     *   }
     * })
     */
    upsert<T extends AuditLogUpsertArgs>(args: SelectSubset<T, AuditLogUpsertArgs<ExtArgs>>): Prisma__AuditLogClient<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of AuditLogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuditLogCountArgs} args - Arguments to filter AuditLogs to count.
     * @example
     * // Count the number of AuditLogs
     * const count = await prisma.auditLog.count({
     *   where: {
     *     // ... the filter for the AuditLogs we want to count
     *   }
     * })
    **/
    count<T extends AuditLogCountArgs>(
      args?: Subset<T, AuditLogCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AuditLogCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AuditLog.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuditLogAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AuditLogAggregateArgs>(args: Subset<T, AuditLogAggregateArgs>): Prisma.PrismaPromise<GetAuditLogAggregateType<T>>

    /**
     * Group by AuditLog.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuditLogGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AuditLogGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AuditLogGroupByArgs['orderBy'] }
        : { orderBy?: AuditLogGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AuditLogGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAuditLogGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AuditLog model
   */
  readonly fields: AuditLogFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AuditLog.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AuditLogClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AuditLog model
   */ 
  interface AuditLogFieldRefs {
    readonly id: FieldRef<"AuditLog", 'String'>
    readonly userId: FieldRef<"AuditLog", 'String'>
    readonly action: FieldRef<"AuditLog", 'String'>
    readonly resource: FieldRef<"AuditLog", 'String'>
    readonly resourceId: FieldRef<"AuditLog", 'String'>
    readonly details: FieldRef<"AuditLog", 'String'>
    readonly ipAddress: FieldRef<"AuditLog", 'String'>
    readonly userAgent: FieldRef<"AuditLog", 'String'>
    readonly success: FieldRef<"AuditLog", 'Boolean'>
    readonly errorMessage: FieldRef<"AuditLog", 'String'>
    readonly timestamp: FieldRef<"AuditLog", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * AuditLog findUnique
   */
  export type AuditLogFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
    /**
     * Filter, which AuditLog to fetch.
     */
    where: AuditLogWhereUniqueInput
  }

  /**
   * AuditLog findUniqueOrThrow
   */
  export type AuditLogFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
    /**
     * Filter, which AuditLog to fetch.
     */
    where: AuditLogWhereUniqueInput
  }

  /**
   * AuditLog findFirst
   */
  export type AuditLogFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
    /**
     * Filter, which AuditLog to fetch.
     */
    where?: AuditLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AuditLogs to fetch.
     */
    orderBy?: AuditLogOrderByWithRelationInput | AuditLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AuditLogs.
     */
    cursor?: AuditLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AuditLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AuditLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AuditLogs.
     */
    distinct?: AuditLogScalarFieldEnum | AuditLogScalarFieldEnum[]
  }

  /**
   * AuditLog findFirstOrThrow
   */
  export type AuditLogFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
    /**
     * Filter, which AuditLog to fetch.
     */
    where?: AuditLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AuditLogs to fetch.
     */
    orderBy?: AuditLogOrderByWithRelationInput | AuditLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AuditLogs.
     */
    cursor?: AuditLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AuditLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AuditLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AuditLogs.
     */
    distinct?: AuditLogScalarFieldEnum | AuditLogScalarFieldEnum[]
  }

  /**
   * AuditLog findMany
   */
  export type AuditLogFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
    /**
     * Filter, which AuditLogs to fetch.
     */
    where?: AuditLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AuditLogs to fetch.
     */
    orderBy?: AuditLogOrderByWithRelationInput | AuditLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AuditLogs.
     */
    cursor?: AuditLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AuditLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AuditLogs.
     */
    skip?: number
    distinct?: AuditLogScalarFieldEnum | AuditLogScalarFieldEnum[]
  }

  /**
   * AuditLog create
   */
  export type AuditLogCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
    /**
     * The data needed to create a AuditLog.
     */
    data: XOR<AuditLogCreateInput, AuditLogUncheckedCreateInput>
  }

  /**
   * AuditLog createMany
   */
  export type AuditLogCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AuditLogs.
     */
    data: AuditLogCreateManyInput | AuditLogCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AuditLog createManyAndReturn
   */
  export type AuditLogCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many AuditLogs.
     */
    data: AuditLogCreateManyInput | AuditLogCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AuditLog update
   */
  export type AuditLogUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
    /**
     * The data needed to update a AuditLog.
     */
    data: XOR<AuditLogUpdateInput, AuditLogUncheckedUpdateInput>
    /**
     * Choose, which AuditLog to update.
     */
    where: AuditLogWhereUniqueInput
  }

  /**
   * AuditLog updateMany
   */
  export type AuditLogUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AuditLogs.
     */
    data: XOR<AuditLogUpdateManyMutationInput, AuditLogUncheckedUpdateManyInput>
    /**
     * Filter which AuditLogs to update
     */
    where?: AuditLogWhereInput
  }

  /**
   * AuditLog upsert
   */
  export type AuditLogUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
    /**
     * The filter to search for the AuditLog to update in case it exists.
     */
    where: AuditLogWhereUniqueInput
    /**
     * In case the AuditLog found by the `where` argument doesn't exist, create a new AuditLog with this data.
     */
    create: XOR<AuditLogCreateInput, AuditLogUncheckedCreateInput>
    /**
     * In case the AuditLog was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AuditLogUpdateInput, AuditLogUncheckedUpdateInput>
  }

  /**
   * AuditLog delete
   */
  export type AuditLogDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
    /**
     * Filter which AuditLog to delete.
     */
    where: AuditLogWhereUniqueInput
  }

  /**
   * AuditLog deleteMany
   */
  export type AuditLogDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AuditLogs to delete
     */
    where?: AuditLogWhereInput
  }

  /**
   * AuditLog without action
   */
  export type AuditLogDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
  }


  /**
   * Model SecurityLog
   */

  export type AggregateSecurityLog = {
    _count: SecurityLogCountAggregateOutputType | null
    _min: SecurityLogMinAggregateOutputType | null
    _max: SecurityLogMaxAggregateOutputType | null
  }

  export type SecurityLogMinAggregateOutputType = {
    id: string | null
    userId: string | null
    action: string | null
    details: string | null
    ipAddress: string | null
    userAgent: string | null
    severity: string | null
    timestamp: Date | null
  }

  export type SecurityLogMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    action: string | null
    details: string | null
    ipAddress: string | null
    userAgent: string | null
    severity: string | null
    timestamp: Date | null
  }

  export type SecurityLogCountAggregateOutputType = {
    id: number
    userId: number
    action: number
    details: number
    ipAddress: number
    userAgent: number
    severity: number
    timestamp: number
    _all: number
  }


  export type SecurityLogMinAggregateInputType = {
    id?: true
    userId?: true
    action?: true
    details?: true
    ipAddress?: true
    userAgent?: true
    severity?: true
    timestamp?: true
  }

  export type SecurityLogMaxAggregateInputType = {
    id?: true
    userId?: true
    action?: true
    details?: true
    ipAddress?: true
    userAgent?: true
    severity?: true
    timestamp?: true
  }

  export type SecurityLogCountAggregateInputType = {
    id?: true
    userId?: true
    action?: true
    details?: true
    ipAddress?: true
    userAgent?: true
    severity?: true
    timestamp?: true
    _all?: true
  }

  export type SecurityLogAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SecurityLog to aggregate.
     */
    where?: SecurityLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SecurityLogs to fetch.
     */
    orderBy?: SecurityLogOrderByWithRelationInput | SecurityLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SecurityLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SecurityLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SecurityLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SecurityLogs
    **/
    _count?: true | SecurityLogCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SecurityLogMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SecurityLogMaxAggregateInputType
  }

  export type GetSecurityLogAggregateType<T extends SecurityLogAggregateArgs> = {
        [P in keyof T & keyof AggregateSecurityLog]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSecurityLog[P]>
      : GetScalarType<T[P], AggregateSecurityLog[P]>
  }




  export type SecurityLogGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SecurityLogWhereInput
    orderBy?: SecurityLogOrderByWithAggregationInput | SecurityLogOrderByWithAggregationInput[]
    by: SecurityLogScalarFieldEnum[] | SecurityLogScalarFieldEnum
    having?: SecurityLogScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SecurityLogCountAggregateInputType | true
    _min?: SecurityLogMinAggregateInputType
    _max?: SecurityLogMaxAggregateInputType
  }

  export type SecurityLogGroupByOutputType = {
    id: string
    userId: string | null
    action: string
    details: string | null
    ipAddress: string | null
    userAgent: string | null
    severity: string
    timestamp: Date
    _count: SecurityLogCountAggregateOutputType | null
    _min: SecurityLogMinAggregateOutputType | null
    _max: SecurityLogMaxAggregateOutputType | null
  }

  type GetSecurityLogGroupByPayload<T extends SecurityLogGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SecurityLogGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SecurityLogGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SecurityLogGroupByOutputType[P]>
            : GetScalarType<T[P], SecurityLogGroupByOutputType[P]>
        }
      >
    >


  export type SecurityLogSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    action?: boolean
    details?: boolean
    ipAddress?: boolean
    userAgent?: boolean
    severity?: boolean
    timestamp?: boolean
  }, ExtArgs["result"]["securityLog"]>

  export type SecurityLogSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    action?: boolean
    details?: boolean
    ipAddress?: boolean
    userAgent?: boolean
    severity?: boolean
    timestamp?: boolean
  }, ExtArgs["result"]["securityLog"]>

  export type SecurityLogSelectScalar = {
    id?: boolean
    userId?: boolean
    action?: boolean
    details?: boolean
    ipAddress?: boolean
    userAgent?: boolean
    severity?: boolean
    timestamp?: boolean
  }


  export type $SecurityLogPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SecurityLog"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string | null
      action: string
      details: string | null
      ipAddress: string | null
      userAgent: string | null
      severity: string
      timestamp: Date
    }, ExtArgs["result"]["securityLog"]>
    composites: {}
  }

  type SecurityLogGetPayload<S extends boolean | null | undefined | SecurityLogDefaultArgs> = $Result.GetResult<Prisma.$SecurityLogPayload, S>

  type SecurityLogCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<SecurityLogFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: SecurityLogCountAggregateInputType | true
    }

  export interface SecurityLogDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SecurityLog'], meta: { name: 'SecurityLog' } }
    /**
     * Find zero or one SecurityLog that matches the filter.
     * @param {SecurityLogFindUniqueArgs} args - Arguments to find a SecurityLog
     * @example
     * // Get one SecurityLog
     * const securityLog = await prisma.securityLog.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SecurityLogFindUniqueArgs>(args: SelectSubset<T, SecurityLogFindUniqueArgs<ExtArgs>>): Prisma__SecurityLogClient<$Result.GetResult<Prisma.$SecurityLogPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one SecurityLog that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {SecurityLogFindUniqueOrThrowArgs} args - Arguments to find a SecurityLog
     * @example
     * // Get one SecurityLog
     * const securityLog = await prisma.securityLog.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SecurityLogFindUniqueOrThrowArgs>(args: SelectSubset<T, SecurityLogFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SecurityLogClient<$Result.GetResult<Prisma.$SecurityLogPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first SecurityLog that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SecurityLogFindFirstArgs} args - Arguments to find a SecurityLog
     * @example
     * // Get one SecurityLog
     * const securityLog = await prisma.securityLog.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SecurityLogFindFirstArgs>(args?: SelectSubset<T, SecurityLogFindFirstArgs<ExtArgs>>): Prisma__SecurityLogClient<$Result.GetResult<Prisma.$SecurityLogPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first SecurityLog that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SecurityLogFindFirstOrThrowArgs} args - Arguments to find a SecurityLog
     * @example
     * // Get one SecurityLog
     * const securityLog = await prisma.securityLog.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SecurityLogFindFirstOrThrowArgs>(args?: SelectSubset<T, SecurityLogFindFirstOrThrowArgs<ExtArgs>>): Prisma__SecurityLogClient<$Result.GetResult<Prisma.$SecurityLogPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more SecurityLogs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SecurityLogFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SecurityLogs
     * const securityLogs = await prisma.securityLog.findMany()
     * 
     * // Get first 10 SecurityLogs
     * const securityLogs = await prisma.securityLog.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const securityLogWithIdOnly = await prisma.securityLog.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SecurityLogFindManyArgs>(args?: SelectSubset<T, SecurityLogFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SecurityLogPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a SecurityLog.
     * @param {SecurityLogCreateArgs} args - Arguments to create a SecurityLog.
     * @example
     * // Create one SecurityLog
     * const SecurityLog = await prisma.securityLog.create({
     *   data: {
     *     // ... data to create a SecurityLog
     *   }
     * })
     * 
     */
    create<T extends SecurityLogCreateArgs>(args: SelectSubset<T, SecurityLogCreateArgs<ExtArgs>>): Prisma__SecurityLogClient<$Result.GetResult<Prisma.$SecurityLogPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many SecurityLogs.
     * @param {SecurityLogCreateManyArgs} args - Arguments to create many SecurityLogs.
     * @example
     * // Create many SecurityLogs
     * const securityLog = await prisma.securityLog.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SecurityLogCreateManyArgs>(args?: SelectSubset<T, SecurityLogCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SecurityLogs and returns the data saved in the database.
     * @param {SecurityLogCreateManyAndReturnArgs} args - Arguments to create many SecurityLogs.
     * @example
     * // Create many SecurityLogs
     * const securityLog = await prisma.securityLog.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SecurityLogs and only return the `id`
     * const securityLogWithIdOnly = await prisma.securityLog.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SecurityLogCreateManyAndReturnArgs>(args?: SelectSubset<T, SecurityLogCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SecurityLogPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a SecurityLog.
     * @param {SecurityLogDeleteArgs} args - Arguments to delete one SecurityLog.
     * @example
     * // Delete one SecurityLog
     * const SecurityLog = await prisma.securityLog.delete({
     *   where: {
     *     // ... filter to delete one SecurityLog
     *   }
     * })
     * 
     */
    delete<T extends SecurityLogDeleteArgs>(args: SelectSubset<T, SecurityLogDeleteArgs<ExtArgs>>): Prisma__SecurityLogClient<$Result.GetResult<Prisma.$SecurityLogPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one SecurityLog.
     * @param {SecurityLogUpdateArgs} args - Arguments to update one SecurityLog.
     * @example
     * // Update one SecurityLog
     * const securityLog = await prisma.securityLog.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SecurityLogUpdateArgs>(args: SelectSubset<T, SecurityLogUpdateArgs<ExtArgs>>): Prisma__SecurityLogClient<$Result.GetResult<Prisma.$SecurityLogPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more SecurityLogs.
     * @param {SecurityLogDeleteManyArgs} args - Arguments to filter SecurityLogs to delete.
     * @example
     * // Delete a few SecurityLogs
     * const { count } = await prisma.securityLog.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SecurityLogDeleteManyArgs>(args?: SelectSubset<T, SecurityLogDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SecurityLogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SecurityLogUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SecurityLogs
     * const securityLog = await prisma.securityLog.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SecurityLogUpdateManyArgs>(args: SelectSubset<T, SecurityLogUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one SecurityLog.
     * @param {SecurityLogUpsertArgs} args - Arguments to update or create a SecurityLog.
     * @example
     * // Update or create a SecurityLog
     * const securityLog = await prisma.securityLog.upsert({
     *   create: {
     *     // ... data to create a SecurityLog
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SecurityLog we want to update
     *   }
     * })
     */
    upsert<T extends SecurityLogUpsertArgs>(args: SelectSubset<T, SecurityLogUpsertArgs<ExtArgs>>): Prisma__SecurityLogClient<$Result.GetResult<Prisma.$SecurityLogPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of SecurityLogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SecurityLogCountArgs} args - Arguments to filter SecurityLogs to count.
     * @example
     * // Count the number of SecurityLogs
     * const count = await prisma.securityLog.count({
     *   where: {
     *     // ... the filter for the SecurityLogs we want to count
     *   }
     * })
    **/
    count<T extends SecurityLogCountArgs>(
      args?: Subset<T, SecurityLogCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SecurityLogCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SecurityLog.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SecurityLogAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SecurityLogAggregateArgs>(args: Subset<T, SecurityLogAggregateArgs>): Prisma.PrismaPromise<GetSecurityLogAggregateType<T>>

    /**
     * Group by SecurityLog.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SecurityLogGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SecurityLogGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SecurityLogGroupByArgs['orderBy'] }
        : { orderBy?: SecurityLogGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SecurityLogGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSecurityLogGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SecurityLog model
   */
  readonly fields: SecurityLogFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SecurityLog.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SecurityLogClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SecurityLog model
   */ 
  interface SecurityLogFieldRefs {
    readonly id: FieldRef<"SecurityLog", 'String'>
    readonly userId: FieldRef<"SecurityLog", 'String'>
    readonly action: FieldRef<"SecurityLog", 'String'>
    readonly details: FieldRef<"SecurityLog", 'String'>
    readonly ipAddress: FieldRef<"SecurityLog", 'String'>
    readonly userAgent: FieldRef<"SecurityLog", 'String'>
    readonly severity: FieldRef<"SecurityLog", 'String'>
    readonly timestamp: FieldRef<"SecurityLog", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * SecurityLog findUnique
   */
  export type SecurityLogFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityLog
     */
    select?: SecurityLogSelect<ExtArgs> | null
    /**
     * Filter, which SecurityLog to fetch.
     */
    where: SecurityLogWhereUniqueInput
  }

  /**
   * SecurityLog findUniqueOrThrow
   */
  export type SecurityLogFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityLog
     */
    select?: SecurityLogSelect<ExtArgs> | null
    /**
     * Filter, which SecurityLog to fetch.
     */
    where: SecurityLogWhereUniqueInput
  }

  /**
   * SecurityLog findFirst
   */
  export type SecurityLogFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityLog
     */
    select?: SecurityLogSelect<ExtArgs> | null
    /**
     * Filter, which SecurityLog to fetch.
     */
    where?: SecurityLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SecurityLogs to fetch.
     */
    orderBy?: SecurityLogOrderByWithRelationInput | SecurityLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SecurityLogs.
     */
    cursor?: SecurityLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SecurityLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SecurityLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SecurityLogs.
     */
    distinct?: SecurityLogScalarFieldEnum | SecurityLogScalarFieldEnum[]
  }

  /**
   * SecurityLog findFirstOrThrow
   */
  export type SecurityLogFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityLog
     */
    select?: SecurityLogSelect<ExtArgs> | null
    /**
     * Filter, which SecurityLog to fetch.
     */
    where?: SecurityLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SecurityLogs to fetch.
     */
    orderBy?: SecurityLogOrderByWithRelationInput | SecurityLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SecurityLogs.
     */
    cursor?: SecurityLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SecurityLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SecurityLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SecurityLogs.
     */
    distinct?: SecurityLogScalarFieldEnum | SecurityLogScalarFieldEnum[]
  }

  /**
   * SecurityLog findMany
   */
  export type SecurityLogFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityLog
     */
    select?: SecurityLogSelect<ExtArgs> | null
    /**
     * Filter, which SecurityLogs to fetch.
     */
    where?: SecurityLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SecurityLogs to fetch.
     */
    orderBy?: SecurityLogOrderByWithRelationInput | SecurityLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SecurityLogs.
     */
    cursor?: SecurityLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SecurityLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SecurityLogs.
     */
    skip?: number
    distinct?: SecurityLogScalarFieldEnum | SecurityLogScalarFieldEnum[]
  }

  /**
   * SecurityLog create
   */
  export type SecurityLogCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityLog
     */
    select?: SecurityLogSelect<ExtArgs> | null
    /**
     * The data needed to create a SecurityLog.
     */
    data: XOR<SecurityLogCreateInput, SecurityLogUncheckedCreateInput>
  }

  /**
   * SecurityLog createMany
   */
  export type SecurityLogCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SecurityLogs.
     */
    data: SecurityLogCreateManyInput | SecurityLogCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SecurityLog createManyAndReturn
   */
  export type SecurityLogCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityLog
     */
    select?: SecurityLogSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many SecurityLogs.
     */
    data: SecurityLogCreateManyInput | SecurityLogCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SecurityLog update
   */
  export type SecurityLogUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityLog
     */
    select?: SecurityLogSelect<ExtArgs> | null
    /**
     * The data needed to update a SecurityLog.
     */
    data: XOR<SecurityLogUpdateInput, SecurityLogUncheckedUpdateInput>
    /**
     * Choose, which SecurityLog to update.
     */
    where: SecurityLogWhereUniqueInput
  }

  /**
   * SecurityLog updateMany
   */
  export type SecurityLogUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SecurityLogs.
     */
    data: XOR<SecurityLogUpdateManyMutationInput, SecurityLogUncheckedUpdateManyInput>
    /**
     * Filter which SecurityLogs to update
     */
    where?: SecurityLogWhereInput
  }

  /**
   * SecurityLog upsert
   */
  export type SecurityLogUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityLog
     */
    select?: SecurityLogSelect<ExtArgs> | null
    /**
     * The filter to search for the SecurityLog to update in case it exists.
     */
    where: SecurityLogWhereUniqueInput
    /**
     * In case the SecurityLog found by the `where` argument doesn't exist, create a new SecurityLog with this data.
     */
    create: XOR<SecurityLogCreateInput, SecurityLogUncheckedCreateInput>
    /**
     * In case the SecurityLog was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SecurityLogUpdateInput, SecurityLogUncheckedUpdateInput>
  }

  /**
   * SecurityLog delete
   */
  export type SecurityLogDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityLog
     */
    select?: SecurityLogSelect<ExtArgs> | null
    /**
     * Filter which SecurityLog to delete.
     */
    where: SecurityLogWhereUniqueInput
  }

  /**
   * SecurityLog deleteMany
   */
  export type SecurityLogDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SecurityLogs to delete
     */
    where?: SecurityLogWhereInput
  }

  /**
   * SecurityLog without action
   */
  export type SecurityLogDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityLog
     */
    select?: SecurityLogSelect<ExtArgs> | null
  }


  /**
   * Model IPBlacklist
   */

  export type AggregateIPBlacklist = {
    _count: IPBlacklistCountAggregateOutputType | null
    _min: IPBlacklistMinAggregateOutputType | null
    _max: IPBlacklistMaxAggregateOutputType | null
  }

  export type IPBlacklistMinAggregateOutputType = {
    id: string | null
    ipAddress: string | null
    reason: string | null
    source: string | null
    details: string | null
    expiresAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type IPBlacklistMaxAggregateOutputType = {
    id: string | null
    ipAddress: string | null
    reason: string | null
    source: string | null
    details: string | null
    expiresAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type IPBlacklistCountAggregateOutputType = {
    id: number
    ipAddress: number
    reason: number
    source: number
    details: number
    expiresAt: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type IPBlacklistMinAggregateInputType = {
    id?: true
    ipAddress?: true
    reason?: true
    source?: true
    details?: true
    expiresAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type IPBlacklistMaxAggregateInputType = {
    id?: true
    ipAddress?: true
    reason?: true
    source?: true
    details?: true
    expiresAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type IPBlacklistCountAggregateInputType = {
    id?: true
    ipAddress?: true
    reason?: true
    source?: true
    details?: true
    expiresAt?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type IPBlacklistAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which IPBlacklist to aggregate.
     */
    where?: IPBlacklistWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of IPBlacklists to fetch.
     */
    orderBy?: IPBlacklistOrderByWithRelationInput | IPBlacklistOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: IPBlacklistWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` IPBlacklists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` IPBlacklists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned IPBlacklists
    **/
    _count?: true | IPBlacklistCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: IPBlacklistMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: IPBlacklistMaxAggregateInputType
  }

  export type GetIPBlacklistAggregateType<T extends IPBlacklistAggregateArgs> = {
        [P in keyof T & keyof AggregateIPBlacklist]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateIPBlacklist[P]>
      : GetScalarType<T[P], AggregateIPBlacklist[P]>
  }




  export type IPBlacklistGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: IPBlacklistWhereInput
    orderBy?: IPBlacklistOrderByWithAggregationInput | IPBlacklistOrderByWithAggregationInput[]
    by: IPBlacklistScalarFieldEnum[] | IPBlacklistScalarFieldEnum
    having?: IPBlacklistScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: IPBlacklistCountAggregateInputType | true
    _min?: IPBlacklistMinAggregateInputType
    _max?: IPBlacklistMaxAggregateInputType
  }

  export type IPBlacklistGroupByOutputType = {
    id: string
    ipAddress: string
    reason: string
    source: string
    details: string | null
    expiresAt: Date | null
    createdAt: Date
    updatedAt: Date
    _count: IPBlacklistCountAggregateOutputType | null
    _min: IPBlacklistMinAggregateOutputType | null
    _max: IPBlacklistMaxAggregateOutputType | null
  }

  type GetIPBlacklistGroupByPayload<T extends IPBlacklistGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<IPBlacklistGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof IPBlacklistGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], IPBlacklistGroupByOutputType[P]>
            : GetScalarType<T[P], IPBlacklistGroupByOutputType[P]>
        }
      >
    >


  export type IPBlacklistSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    ipAddress?: boolean
    reason?: boolean
    source?: boolean
    details?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["iPBlacklist"]>

  export type IPBlacklistSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    ipAddress?: boolean
    reason?: boolean
    source?: boolean
    details?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["iPBlacklist"]>

  export type IPBlacklistSelectScalar = {
    id?: boolean
    ipAddress?: boolean
    reason?: boolean
    source?: boolean
    details?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }


  export type $IPBlacklistPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "IPBlacklist"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      ipAddress: string
      reason: string
      source: string
      details: string | null
      expiresAt: Date | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["iPBlacklist"]>
    composites: {}
  }

  type IPBlacklistGetPayload<S extends boolean | null | undefined | IPBlacklistDefaultArgs> = $Result.GetResult<Prisma.$IPBlacklistPayload, S>

  type IPBlacklistCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<IPBlacklistFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: IPBlacklistCountAggregateInputType | true
    }

  export interface IPBlacklistDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['IPBlacklist'], meta: { name: 'IPBlacklist' } }
    /**
     * Find zero or one IPBlacklist that matches the filter.
     * @param {IPBlacklistFindUniqueArgs} args - Arguments to find a IPBlacklist
     * @example
     * // Get one IPBlacklist
     * const iPBlacklist = await prisma.iPBlacklist.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends IPBlacklistFindUniqueArgs>(args: SelectSubset<T, IPBlacklistFindUniqueArgs<ExtArgs>>): Prisma__IPBlacklistClient<$Result.GetResult<Prisma.$IPBlacklistPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one IPBlacklist that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {IPBlacklistFindUniqueOrThrowArgs} args - Arguments to find a IPBlacklist
     * @example
     * // Get one IPBlacklist
     * const iPBlacklist = await prisma.iPBlacklist.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends IPBlacklistFindUniqueOrThrowArgs>(args: SelectSubset<T, IPBlacklistFindUniqueOrThrowArgs<ExtArgs>>): Prisma__IPBlacklistClient<$Result.GetResult<Prisma.$IPBlacklistPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first IPBlacklist that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IPBlacklistFindFirstArgs} args - Arguments to find a IPBlacklist
     * @example
     * // Get one IPBlacklist
     * const iPBlacklist = await prisma.iPBlacklist.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends IPBlacklistFindFirstArgs>(args?: SelectSubset<T, IPBlacklistFindFirstArgs<ExtArgs>>): Prisma__IPBlacklistClient<$Result.GetResult<Prisma.$IPBlacklistPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first IPBlacklist that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IPBlacklistFindFirstOrThrowArgs} args - Arguments to find a IPBlacklist
     * @example
     * // Get one IPBlacklist
     * const iPBlacklist = await prisma.iPBlacklist.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends IPBlacklistFindFirstOrThrowArgs>(args?: SelectSubset<T, IPBlacklistFindFirstOrThrowArgs<ExtArgs>>): Prisma__IPBlacklistClient<$Result.GetResult<Prisma.$IPBlacklistPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more IPBlacklists that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IPBlacklistFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all IPBlacklists
     * const iPBlacklists = await prisma.iPBlacklist.findMany()
     * 
     * // Get first 10 IPBlacklists
     * const iPBlacklists = await prisma.iPBlacklist.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const iPBlacklistWithIdOnly = await prisma.iPBlacklist.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends IPBlacklistFindManyArgs>(args?: SelectSubset<T, IPBlacklistFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$IPBlacklistPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a IPBlacklist.
     * @param {IPBlacklistCreateArgs} args - Arguments to create a IPBlacklist.
     * @example
     * // Create one IPBlacklist
     * const IPBlacklist = await prisma.iPBlacklist.create({
     *   data: {
     *     // ... data to create a IPBlacklist
     *   }
     * })
     * 
     */
    create<T extends IPBlacklistCreateArgs>(args: SelectSubset<T, IPBlacklistCreateArgs<ExtArgs>>): Prisma__IPBlacklistClient<$Result.GetResult<Prisma.$IPBlacklistPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many IPBlacklists.
     * @param {IPBlacklistCreateManyArgs} args - Arguments to create many IPBlacklists.
     * @example
     * // Create many IPBlacklists
     * const iPBlacklist = await prisma.iPBlacklist.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends IPBlacklistCreateManyArgs>(args?: SelectSubset<T, IPBlacklistCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many IPBlacklists and returns the data saved in the database.
     * @param {IPBlacklistCreateManyAndReturnArgs} args - Arguments to create many IPBlacklists.
     * @example
     * // Create many IPBlacklists
     * const iPBlacklist = await prisma.iPBlacklist.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many IPBlacklists and only return the `id`
     * const iPBlacklistWithIdOnly = await prisma.iPBlacklist.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends IPBlacklistCreateManyAndReturnArgs>(args?: SelectSubset<T, IPBlacklistCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$IPBlacklistPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a IPBlacklist.
     * @param {IPBlacklistDeleteArgs} args - Arguments to delete one IPBlacklist.
     * @example
     * // Delete one IPBlacklist
     * const IPBlacklist = await prisma.iPBlacklist.delete({
     *   where: {
     *     // ... filter to delete one IPBlacklist
     *   }
     * })
     * 
     */
    delete<T extends IPBlacklistDeleteArgs>(args: SelectSubset<T, IPBlacklistDeleteArgs<ExtArgs>>): Prisma__IPBlacklistClient<$Result.GetResult<Prisma.$IPBlacklistPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one IPBlacklist.
     * @param {IPBlacklistUpdateArgs} args - Arguments to update one IPBlacklist.
     * @example
     * // Update one IPBlacklist
     * const iPBlacklist = await prisma.iPBlacklist.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends IPBlacklistUpdateArgs>(args: SelectSubset<T, IPBlacklistUpdateArgs<ExtArgs>>): Prisma__IPBlacklistClient<$Result.GetResult<Prisma.$IPBlacklistPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more IPBlacklists.
     * @param {IPBlacklistDeleteManyArgs} args - Arguments to filter IPBlacklists to delete.
     * @example
     * // Delete a few IPBlacklists
     * const { count } = await prisma.iPBlacklist.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends IPBlacklistDeleteManyArgs>(args?: SelectSubset<T, IPBlacklistDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more IPBlacklists.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IPBlacklistUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many IPBlacklists
     * const iPBlacklist = await prisma.iPBlacklist.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends IPBlacklistUpdateManyArgs>(args: SelectSubset<T, IPBlacklistUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one IPBlacklist.
     * @param {IPBlacklistUpsertArgs} args - Arguments to update or create a IPBlacklist.
     * @example
     * // Update or create a IPBlacklist
     * const iPBlacklist = await prisma.iPBlacklist.upsert({
     *   create: {
     *     // ... data to create a IPBlacklist
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the IPBlacklist we want to update
     *   }
     * })
     */
    upsert<T extends IPBlacklistUpsertArgs>(args: SelectSubset<T, IPBlacklistUpsertArgs<ExtArgs>>): Prisma__IPBlacklistClient<$Result.GetResult<Prisma.$IPBlacklistPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of IPBlacklists.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IPBlacklistCountArgs} args - Arguments to filter IPBlacklists to count.
     * @example
     * // Count the number of IPBlacklists
     * const count = await prisma.iPBlacklist.count({
     *   where: {
     *     // ... the filter for the IPBlacklists we want to count
     *   }
     * })
    **/
    count<T extends IPBlacklistCountArgs>(
      args?: Subset<T, IPBlacklistCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], IPBlacklistCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a IPBlacklist.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IPBlacklistAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends IPBlacklistAggregateArgs>(args: Subset<T, IPBlacklistAggregateArgs>): Prisma.PrismaPromise<GetIPBlacklistAggregateType<T>>

    /**
     * Group by IPBlacklist.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IPBlacklistGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends IPBlacklistGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: IPBlacklistGroupByArgs['orderBy'] }
        : { orderBy?: IPBlacklistGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, IPBlacklistGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetIPBlacklistGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the IPBlacklist model
   */
  readonly fields: IPBlacklistFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for IPBlacklist.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__IPBlacklistClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the IPBlacklist model
   */ 
  interface IPBlacklistFieldRefs {
    readonly id: FieldRef<"IPBlacklist", 'String'>
    readonly ipAddress: FieldRef<"IPBlacklist", 'String'>
    readonly reason: FieldRef<"IPBlacklist", 'String'>
    readonly source: FieldRef<"IPBlacklist", 'String'>
    readonly details: FieldRef<"IPBlacklist", 'String'>
    readonly expiresAt: FieldRef<"IPBlacklist", 'DateTime'>
    readonly createdAt: FieldRef<"IPBlacklist", 'DateTime'>
    readonly updatedAt: FieldRef<"IPBlacklist", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * IPBlacklist findUnique
   */
  export type IPBlacklistFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IPBlacklist
     */
    select?: IPBlacklistSelect<ExtArgs> | null
    /**
     * Filter, which IPBlacklist to fetch.
     */
    where: IPBlacklistWhereUniqueInput
  }

  /**
   * IPBlacklist findUniqueOrThrow
   */
  export type IPBlacklistFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IPBlacklist
     */
    select?: IPBlacklistSelect<ExtArgs> | null
    /**
     * Filter, which IPBlacklist to fetch.
     */
    where: IPBlacklistWhereUniqueInput
  }

  /**
   * IPBlacklist findFirst
   */
  export type IPBlacklistFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IPBlacklist
     */
    select?: IPBlacklistSelect<ExtArgs> | null
    /**
     * Filter, which IPBlacklist to fetch.
     */
    where?: IPBlacklistWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of IPBlacklists to fetch.
     */
    orderBy?: IPBlacklistOrderByWithRelationInput | IPBlacklistOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for IPBlacklists.
     */
    cursor?: IPBlacklistWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` IPBlacklists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` IPBlacklists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of IPBlacklists.
     */
    distinct?: IPBlacklistScalarFieldEnum | IPBlacklistScalarFieldEnum[]
  }

  /**
   * IPBlacklist findFirstOrThrow
   */
  export type IPBlacklistFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IPBlacklist
     */
    select?: IPBlacklistSelect<ExtArgs> | null
    /**
     * Filter, which IPBlacklist to fetch.
     */
    where?: IPBlacklistWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of IPBlacklists to fetch.
     */
    orderBy?: IPBlacklistOrderByWithRelationInput | IPBlacklistOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for IPBlacklists.
     */
    cursor?: IPBlacklistWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` IPBlacklists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` IPBlacklists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of IPBlacklists.
     */
    distinct?: IPBlacklistScalarFieldEnum | IPBlacklistScalarFieldEnum[]
  }

  /**
   * IPBlacklist findMany
   */
  export type IPBlacklistFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IPBlacklist
     */
    select?: IPBlacklistSelect<ExtArgs> | null
    /**
     * Filter, which IPBlacklists to fetch.
     */
    where?: IPBlacklistWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of IPBlacklists to fetch.
     */
    orderBy?: IPBlacklistOrderByWithRelationInput | IPBlacklistOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing IPBlacklists.
     */
    cursor?: IPBlacklistWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` IPBlacklists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` IPBlacklists.
     */
    skip?: number
    distinct?: IPBlacklistScalarFieldEnum | IPBlacklistScalarFieldEnum[]
  }

  /**
   * IPBlacklist create
   */
  export type IPBlacklistCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IPBlacklist
     */
    select?: IPBlacklistSelect<ExtArgs> | null
    /**
     * The data needed to create a IPBlacklist.
     */
    data: XOR<IPBlacklistCreateInput, IPBlacklistUncheckedCreateInput>
  }

  /**
   * IPBlacklist createMany
   */
  export type IPBlacklistCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many IPBlacklists.
     */
    data: IPBlacklistCreateManyInput | IPBlacklistCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * IPBlacklist createManyAndReturn
   */
  export type IPBlacklistCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IPBlacklist
     */
    select?: IPBlacklistSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many IPBlacklists.
     */
    data: IPBlacklistCreateManyInput | IPBlacklistCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * IPBlacklist update
   */
  export type IPBlacklistUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IPBlacklist
     */
    select?: IPBlacklistSelect<ExtArgs> | null
    /**
     * The data needed to update a IPBlacklist.
     */
    data: XOR<IPBlacklistUpdateInput, IPBlacklistUncheckedUpdateInput>
    /**
     * Choose, which IPBlacklist to update.
     */
    where: IPBlacklistWhereUniqueInput
  }

  /**
   * IPBlacklist updateMany
   */
  export type IPBlacklistUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update IPBlacklists.
     */
    data: XOR<IPBlacklistUpdateManyMutationInput, IPBlacklistUncheckedUpdateManyInput>
    /**
     * Filter which IPBlacklists to update
     */
    where?: IPBlacklistWhereInput
  }

  /**
   * IPBlacklist upsert
   */
  export type IPBlacklistUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IPBlacklist
     */
    select?: IPBlacklistSelect<ExtArgs> | null
    /**
     * The filter to search for the IPBlacklist to update in case it exists.
     */
    where: IPBlacklistWhereUniqueInput
    /**
     * In case the IPBlacklist found by the `where` argument doesn't exist, create a new IPBlacklist with this data.
     */
    create: XOR<IPBlacklistCreateInput, IPBlacklistUncheckedCreateInput>
    /**
     * In case the IPBlacklist was found with the provided `where` argument, update it with this data.
     */
    update: XOR<IPBlacklistUpdateInput, IPBlacklistUncheckedUpdateInput>
  }

  /**
   * IPBlacklist delete
   */
  export type IPBlacklistDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IPBlacklist
     */
    select?: IPBlacklistSelect<ExtArgs> | null
    /**
     * Filter which IPBlacklist to delete.
     */
    where: IPBlacklistWhereUniqueInput
  }

  /**
   * IPBlacklist deleteMany
   */
  export type IPBlacklistDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which IPBlacklists to delete
     */
    where?: IPBlacklistWhereInput
  }

  /**
   * IPBlacklist without action
   */
  export type IPBlacklistDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IPBlacklist
     */
    select?: IPBlacklistSelect<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UserScalarFieldEnum: {
    id: 'id',
    email: 'email',
    password: 'password',
    firstName: 'firstName',
    lastName: 'lastName',
    phone: 'phone',
    dateOfBirth: 'dateOfBirth',
    gender: 'gender',
    profileImage: 'profileImage',
    financialLevel: 'financialLevel',
    monthlyIncome: 'monthlyIncome',
    monthlyExpenses: 'monthlyExpenses',
    savingsGoal: 'savingsGoal',
    subscription: 'subscription',
    subscriptionStart: 'subscriptionStart',
    subscriptionEnd: 'subscriptionEnd',
    language: 'language',
    currency: 'currency',
    timezone: 'timezone',
    notifications: 'notifications',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    lastLoginAt: 'lastLoginAt',
    emailVerified: 'emailVerified',
    emailVerifiedAt: 'emailVerifiedAt',
    twoFactorEnabled: 'twoFactorEnabled',
    twoFactorSecret: 'twoFactorSecret',
    twoFactorBackupCodes: 'twoFactorBackupCodes',
    twoFactorEnabledAt: 'twoFactorEnabledAt',
    twoFactorDisabledAt: 'twoFactorDisabledAt'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const UserSessionScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    token: 'token',
    refreshToken: 'refreshToken',
    deviceInfo: 'deviceInfo',
    ipAddress: 'ipAddress',
    userAgent: 'userAgent',
    isActive: 'isActive',
    expiresAt: 'expiresAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type UserSessionScalarFieldEnum = (typeof UserSessionScalarFieldEnum)[keyof typeof UserSessionScalarFieldEnum]


  export const UserPreferenceScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    theme: 'theme',
    pushNotifications: 'pushNotifications',
    emailNotifications: 'emailNotifications',
    smsNotifications: 'smsNotifications',
    weeklyReports: 'weeklyReports',
    monthlyReports: 'monthlyReports',
    aiRecommendations: 'aiRecommendations',
    locationServices: 'locationServices',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type UserPreferenceScalarFieldEnum = (typeof UserPreferenceScalarFieldEnum)[keyof typeof UserPreferenceScalarFieldEnum]


  export const ReceiptScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    imageUrl: 'imageUrl',
    merchantName: 'merchantName',
    amount: 'amount',
    currency: 'currency',
    transactionDate: 'transactionDate',
    category: 'category',
    subcategory: 'subcategory',
    paymentMethod: 'paymentMethod',
    location: 'location',
    notes: 'notes',
    ocrConfidence: 'ocrConfidence',
    ocrRawText: 'ocrRawText',
    ocrProcessed: 'ocrProcessed',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ReceiptScalarFieldEnum = (typeof ReceiptScalarFieldEnum)[keyof typeof ReceiptScalarFieldEnum]


  export const FinancialTestScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    testVersion: 'testVersion',
    questions: 'questions',
    score: 'score',
    level: 'level',
    recommendations: 'recommendations',
    completedAt: 'completedAt'
  };

  export type FinancialTestScalarFieldEnum = (typeof FinancialTestScalarFieldEnum)[keyof typeof FinancialTestScalarFieldEnum]


  export const AIInteractionScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    sessionId: 'sessionId',
    interactionType: 'interactionType',
    userMessage: 'userMessage',
    aiResponse: 'aiResponse',
    model: 'model',
    tokensUsed: 'tokensUsed',
    responseTime: 'responseTime',
    isFinancialQuery: 'isFinancialQuery',
    queryCategory: 'queryCategory',
    disclaimerShown: 'disclaimerShown',
    disclaimerVersion: 'disclaimerVersion',
    userRating: 'userRating',
    userFeedback: 'userFeedback',
    ipAddress: 'ipAddress',
    userAgent: 'userAgent',
    metadata: 'metadata',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type AIInteractionScalarFieldEnum = (typeof AIInteractionScalarFieldEnum)[keyof typeof AIInteractionScalarFieldEnum]


  export const MarketplaceProductScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    shortDescription: 'shortDescription',
    category: 'category',
    subcategory: 'subcategory',
    price: 'price',
    currency: 'currency',
    originalPrice: 'originalPrice',
    discount: 'discount',
    providerId: 'providerId',
    providerName: 'providerName',
    providerLogo: 'providerLogo',
    images: 'images',
    videoUrl: 'videoUrl',
    duration: 'duration',
    level: 'level',
    features: 'features',
    requirements: 'requirements',
    whatYouWillLearn: 'whatYouWillLearn',
    averageRating: 'averageRating',
    totalReviews: 'totalReviews',
    totalSales: 'totalSales',
    isActive: 'isActive',
    isFeatured: 'isFeatured',
    isPopular: 'isPopular',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type MarketplaceProductScalarFieldEnum = (typeof MarketplaceProductScalarFieldEnum)[keyof typeof MarketplaceProductScalarFieldEnum]


  export const MarketplaceOrderScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    productId: 'productId',
    orderNumber: 'orderNumber',
    amount: 'amount',
    currency: 'currency',
    status: 'status',
    paymentMethod: 'paymentMethod',
    paymentGateway: 'paymentGateway',
    transactionId: 'transactionId',
    paymentStatus: 'paymentStatus',
    commission: 'commission',
    commissionRate: 'commissionRate',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    paidAt: 'paidAt'
  };

  export type MarketplaceOrderScalarFieldEnum = (typeof MarketplaceOrderScalarFieldEnum)[keyof typeof MarketplaceOrderScalarFieldEnum]


  export const ProductReviewScalarFieldEnum: {
    id: 'id',
    productId: 'productId',
    userId: 'userId',
    rating: 'rating',
    title: 'title',
    comment: 'comment',
    isVerified: 'isVerified',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ProductReviewScalarFieldEnum = (typeof ProductReviewScalarFieldEnum)[keyof typeof ProductReviewScalarFieldEnum]


  export const AuditLogScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    action: 'action',
    resource: 'resource',
    resourceId: 'resourceId',
    details: 'details',
    ipAddress: 'ipAddress',
    userAgent: 'userAgent',
    success: 'success',
    errorMessage: 'errorMessage',
    timestamp: 'timestamp'
  };

  export type AuditLogScalarFieldEnum = (typeof AuditLogScalarFieldEnum)[keyof typeof AuditLogScalarFieldEnum]


  export const SecurityLogScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    action: 'action',
    details: 'details',
    ipAddress: 'ipAddress',
    userAgent: 'userAgent',
    severity: 'severity',
    timestamp: 'timestamp'
  };

  export type SecurityLogScalarFieldEnum = (typeof SecurityLogScalarFieldEnum)[keyof typeof SecurityLogScalarFieldEnum]


  export const IPBlacklistScalarFieldEnum: {
    id: 'id',
    ipAddress: 'ipAddress',
    reason: 'reason',
    source: 'source',
    details: 'details',
    expiresAt: 'expiresAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type IPBlacklistScalarFieldEnum = (typeof IPBlacklistScalarFieldEnum)[keyof typeof IPBlacklistScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const JsonNullValueInput: {
    JsonNull: typeof JsonNull
  };

  export type JsonNullValueInput = (typeof JsonNullValueInput)[keyof typeof JsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Gender'
   */
  export type EnumGenderFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Gender'>
    


  /**
   * Reference to a field of type 'Gender[]'
   */
  export type ListEnumGenderFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Gender[]'>
    


  /**
   * Reference to a field of type 'FinancialLevel'
   */
  export type EnumFinancialLevelFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'FinancialLevel'>
    


  /**
   * Reference to a field of type 'FinancialLevel[]'
   */
  export type ListEnumFinancialLevelFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'FinancialLevel[]'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'Subscription'
   */
  export type EnumSubscriptionFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Subscription'>
    


  /**
   * Reference to a field of type 'Subscription[]'
   */
  export type ListEnumSubscriptionFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Subscription[]'>
    


  /**
   * Reference to a field of type 'Language'
   */
  export type EnumLanguageFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Language'>
    


  /**
   * Reference to a field of type 'Language[]'
   */
  export type ListEnumLanguageFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Language[]'>
    


  /**
   * Reference to a field of type 'Currency'
   */
  export type EnumCurrencyFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Currency'>
    


  /**
   * Reference to a field of type 'Currency[]'
   */
  export type ListEnumCurrencyFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Currency[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'Theme'
   */
  export type EnumThemeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Theme'>
    


  /**
   * Reference to a field of type 'Theme[]'
   */
  export type ListEnumThemeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Theme[]'>
    


  /**
   * Reference to a field of type 'ReceiptCategory'
   */
  export type EnumReceiptCategoryFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ReceiptCategory'>
    


  /**
   * Reference to a field of type 'ReceiptCategory[]'
   */
  export type ListEnumReceiptCategoryFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ReceiptCategory[]'>
    


  /**
   * Reference to a field of type 'PaymentMethod'
   */
  export type EnumPaymentMethodFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PaymentMethod'>
    


  /**
   * Reference to a field of type 'PaymentMethod[]'
   */
  export type ListEnumPaymentMethodFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PaymentMethod[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'AIInteractionType'
   */
  export type EnumAIInteractionTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AIInteractionType'>
    


  /**
   * Reference to a field of type 'AIInteractionType[]'
   */
  export type ListEnumAIInteractionTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AIInteractionType[]'>
    


  /**
   * Reference to a field of type 'FinancialQueryCategory'
   */
  export type EnumFinancialQueryCategoryFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'FinancialQueryCategory'>
    


  /**
   * Reference to a field of type 'FinancialQueryCategory[]'
   */
  export type ListEnumFinancialQueryCategoryFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'FinancialQueryCategory[]'>
    


  /**
   * Reference to a field of type 'ProductCategory'
   */
  export type EnumProductCategoryFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ProductCategory'>
    


  /**
   * Reference to a field of type 'ProductCategory[]'
   */
  export type ListEnumProductCategoryFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ProductCategory[]'>
    


  /**
   * Reference to a field of type 'OrderStatus'
   */
  export type EnumOrderStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'OrderStatus'>
    


  /**
   * Reference to a field of type 'OrderStatus[]'
   */
  export type ListEnumOrderStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'OrderStatus[]'>
    


  /**
   * Reference to a field of type 'PaymentGateway'
   */
  export type EnumPaymentGatewayFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PaymentGateway'>
    


  /**
   * Reference to a field of type 'PaymentGateway[]'
   */
  export type ListEnumPaymentGatewayFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PaymentGateway[]'>
    


  /**
   * Reference to a field of type 'PaymentStatus'
   */
  export type EnumPaymentStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PaymentStatus'>
    


  /**
   * Reference to a field of type 'PaymentStatus[]'
   */
  export type ListEnumPaymentStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PaymentStatus[]'>
    
  /**
   * Deep Input Types
   */


  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: StringFilter<"User"> | string
    email?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
    firstName?: StringFilter<"User"> | string
    lastName?: StringFilter<"User"> | string
    phone?: StringNullableFilter<"User"> | string | null
    dateOfBirth?: DateTimeNullableFilter<"User"> | Date | string | null
    gender?: EnumGenderNullableFilter<"User"> | $Enums.Gender | null
    profileImage?: StringNullableFilter<"User"> | string | null
    financialLevel?: EnumFinancialLevelFilter<"User"> | $Enums.FinancialLevel
    monthlyIncome?: DecimalNullableFilter<"User"> | Decimal | DecimalJsLike | number | string | null
    monthlyExpenses?: DecimalNullableFilter<"User"> | Decimal | DecimalJsLike | number | string | null
    savingsGoal?: DecimalNullableFilter<"User"> | Decimal | DecimalJsLike | number | string | null
    subscription?: EnumSubscriptionFilter<"User"> | $Enums.Subscription
    subscriptionStart?: DateTimeNullableFilter<"User"> | Date | string | null
    subscriptionEnd?: DateTimeNullableFilter<"User"> | Date | string | null
    language?: EnumLanguageFilter<"User"> | $Enums.Language
    currency?: EnumCurrencyFilter<"User"> | $Enums.Currency
    timezone?: StringFilter<"User"> | string
    notifications?: BoolFilter<"User"> | boolean
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    lastLoginAt?: DateTimeNullableFilter<"User"> | Date | string | null
    emailVerified?: BoolFilter<"User"> | boolean
    emailVerifiedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    twoFactorEnabled?: BoolFilter<"User"> | boolean
    twoFactorSecret?: StringNullableFilter<"User"> | string | null
    twoFactorBackupCodes?: StringNullableListFilter<"User">
    twoFactorEnabledAt?: DateTimeNullableFilter<"User"> | Date | string | null
    twoFactorDisabledAt?: DateTimeNullableFilter<"User"> | Date | string | null
    financialTests?: FinancialTestListRelationFilter
    marketplaceOrders?: MarketplaceOrderListRelationFilter
    receipts?: ReceiptListRelationFilter
    userPreferences?: XOR<UserPreferenceNullableRelationFilter, UserPreferenceWhereInput> | null
    userSessions?: UserSessionListRelationFilter
    aiInteractions?: AIInteractionListRelationFilter
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    phone?: SortOrderInput | SortOrder
    dateOfBirth?: SortOrderInput | SortOrder
    gender?: SortOrderInput | SortOrder
    profileImage?: SortOrderInput | SortOrder
    financialLevel?: SortOrder
    monthlyIncome?: SortOrderInput | SortOrder
    monthlyExpenses?: SortOrderInput | SortOrder
    savingsGoal?: SortOrderInput | SortOrder
    subscription?: SortOrder
    subscriptionStart?: SortOrderInput | SortOrder
    subscriptionEnd?: SortOrderInput | SortOrder
    language?: SortOrder
    currency?: SortOrder
    timezone?: SortOrder
    notifications?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    lastLoginAt?: SortOrderInput | SortOrder
    emailVerified?: SortOrder
    emailVerifiedAt?: SortOrderInput | SortOrder
    twoFactorEnabled?: SortOrder
    twoFactorSecret?: SortOrderInput | SortOrder
    twoFactorBackupCodes?: SortOrder
    twoFactorEnabledAt?: SortOrderInput | SortOrder
    twoFactorDisabledAt?: SortOrderInput | SortOrder
    financialTests?: FinancialTestOrderByRelationAggregateInput
    marketplaceOrders?: MarketplaceOrderOrderByRelationAggregateInput
    receipts?: ReceiptOrderByRelationAggregateInput
    userPreferences?: UserPreferenceOrderByWithRelationInput
    userSessions?: UserSessionOrderByRelationAggregateInput
    aiInteractions?: AIInteractionOrderByRelationAggregateInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    password?: StringFilter<"User"> | string
    firstName?: StringFilter<"User"> | string
    lastName?: StringFilter<"User"> | string
    phone?: StringNullableFilter<"User"> | string | null
    dateOfBirth?: DateTimeNullableFilter<"User"> | Date | string | null
    gender?: EnumGenderNullableFilter<"User"> | $Enums.Gender | null
    profileImage?: StringNullableFilter<"User"> | string | null
    financialLevel?: EnumFinancialLevelFilter<"User"> | $Enums.FinancialLevel
    monthlyIncome?: DecimalNullableFilter<"User"> | Decimal | DecimalJsLike | number | string | null
    monthlyExpenses?: DecimalNullableFilter<"User"> | Decimal | DecimalJsLike | number | string | null
    savingsGoal?: DecimalNullableFilter<"User"> | Decimal | DecimalJsLike | number | string | null
    subscription?: EnumSubscriptionFilter<"User"> | $Enums.Subscription
    subscriptionStart?: DateTimeNullableFilter<"User"> | Date | string | null
    subscriptionEnd?: DateTimeNullableFilter<"User"> | Date | string | null
    language?: EnumLanguageFilter<"User"> | $Enums.Language
    currency?: EnumCurrencyFilter<"User"> | $Enums.Currency
    timezone?: StringFilter<"User"> | string
    notifications?: BoolFilter<"User"> | boolean
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    lastLoginAt?: DateTimeNullableFilter<"User"> | Date | string | null
    emailVerified?: BoolFilter<"User"> | boolean
    emailVerifiedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    twoFactorEnabled?: BoolFilter<"User"> | boolean
    twoFactorSecret?: StringNullableFilter<"User"> | string | null
    twoFactorBackupCodes?: StringNullableListFilter<"User">
    twoFactorEnabledAt?: DateTimeNullableFilter<"User"> | Date | string | null
    twoFactorDisabledAt?: DateTimeNullableFilter<"User"> | Date | string | null
    financialTests?: FinancialTestListRelationFilter
    marketplaceOrders?: MarketplaceOrderListRelationFilter
    receipts?: ReceiptListRelationFilter
    userPreferences?: XOR<UserPreferenceNullableRelationFilter, UserPreferenceWhereInput> | null
    userSessions?: UserSessionListRelationFilter
    aiInteractions?: AIInteractionListRelationFilter
  }, "id" | "email">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    phone?: SortOrderInput | SortOrder
    dateOfBirth?: SortOrderInput | SortOrder
    gender?: SortOrderInput | SortOrder
    profileImage?: SortOrderInput | SortOrder
    financialLevel?: SortOrder
    monthlyIncome?: SortOrderInput | SortOrder
    monthlyExpenses?: SortOrderInput | SortOrder
    savingsGoal?: SortOrderInput | SortOrder
    subscription?: SortOrder
    subscriptionStart?: SortOrderInput | SortOrder
    subscriptionEnd?: SortOrderInput | SortOrder
    language?: SortOrder
    currency?: SortOrder
    timezone?: SortOrder
    notifications?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    lastLoginAt?: SortOrderInput | SortOrder
    emailVerified?: SortOrder
    emailVerifiedAt?: SortOrderInput | SortOrder
    twoFactorEnabled?: SortOrder
    twoFactorSecret?: SortOrderInput | SortOrder
    twoFactorBackupCodes?: SortOrder
    twoFactorEnabledAt?: SortOrderInput | SortOrder
    twoFactorDisabledAt?: SortOrderInput | SortOrder
    _count?: UserCountOrderByAggregateInput
    _avg?: UserAvgOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
    _sum?: UserSumOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"User"> | string
    email?: StringWithAggregatesFilter<"User"> | string
    password?: StringWithAggregatesFilter<"User"> | string
    firstName?: StringWithAggregatesFilter<"User"> | string
    lastName?: StringWithAggregatesFilter<"User"> | string
    phone?: StringNullableWithAggregatesFilter<"User"> | string | null
    dateOfBirth?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    gender?: EnumGenderNullableWithAggregatesFilter<"User"> | $Enums.Gender | null
    profileImage?: StringNullableWithAggregatesFilter<"User"> | string | null
    financialLevel?: EnumFinancialLevelWithAggregatesFilter<"User"> | $Enums.FinancialLevel
    monthlyIncome?: DecimalNullableWithAggregatesFilter<"User"> | Decimal | DecimalJsLike | number | string | null
    monthlyExpenses?: DecimalNullableWithAggregatesFilter<"User"> | Decimal | DecimalJsLike | number | string | null
    savingsGoal?: DecimalNullableWithAggregatesFilter<"User"> | Decimal | DecimalJsLike | number | string | null
    subscription?: EnumSubscriptionWithAggregatesFilter<"User"> | $Enums.Subscription
    subscriptionStart?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    subscriptionEnd?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    language?: EnumLanguageWithAggregatesFilter<"User"> | $Enums.Language
    currency?: EnumCurrencyWithAggregatesFilter<"User"> | $Enums.Currency
    timezone?: StringWithAggregatesFilter<"User"> | string
    notifications?: BoolWithAggregatesFilter<"User"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    lastLoginAt?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    emailVerified?: BoolWithAggregatesFilter<"User"> | boolean
    emailVerifiedAt?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    twoFactorEnabled?: BoolWithAggregatesFilter<"User"> | boolean
    twoFactorSecret?: StringNullableWithAggregatesFilter<"User"> | string | null
    twoFactorBackupCodes?: StringNullableListFilter<"User">
    twoFactorEnabledAt?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    twoFactorDisabledAt?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
  }

  export type UserSessionWhereInput = {
    AND?: UserSessionWhereInput | UserSessionWhereInput[]
    OR?: UserSessionWhereInput[]
    NOT?: UserSessionWhereInput | UserSessionWhereInput[]
    id?: StringFilter<"UserSession"> | string
    userId?: StringFilter<"UserSession"> | string
    token?: StringFilter<"UserSession"> | string
    refreshToken?: StringFilter<"UserSession"> | string
    deviceInfo?: JsonNullableFilter<"UserSession">
    ipAddress?: StringNullableFilter<"UserSession"> | string | null
    userAgent?: StringNullableFilter<"UserSession"> | string | null
    isActive?: BoolFilter<"UserSession"> | boolean
    expiresAt?: DateTimeFilter<"UserSession"> | Date | string
    createdAt?: DateTimeFilter<"UserSession"> | Date | string
    updatedAt?: DateTimeFilter<"UserSession"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type UserSessionOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    token?: SortOrder
    refreshToken?: SortOrder
    deviceInfo?: SortOrderInput | SortOrder
    ipAddress?: SortOrderInput | SortOrder
    userAgent?: SortOrderInput | SortOrder
    isActive?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    user?: UserOrderByWithRelationInput
  }

  export type UserSessionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    token?: string
    refreshToken?: string
    AND?: UserSessionWhereInput | UserSessionWhereInput[]
    OR?: UserSessionWhereInput[]
    NOT?: UserSessionWhereInput | UserSessionWhereInput[]
    userId?: StringFilter<"UserSession"> | string
    deviceInfo?: JsonNullableFilter<"UserSession">
    ipAddress?: StringNullableFilter<"UserSession"> | string | null
    userAgent?: StringNullableFilter<"UserSession"> | string | null
    isActive?: BoolFilter<"UserSession"> | boolean
    expiresAt?: DateTimeFilter<"UserSession"> | Date | string
    createdAt?: DateTimeFilter<"UserSession"> | Date | string
    updatedAt?: DateTimeFilter<"UserSession"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
  }, "id" | "token" | "refreshToken">

  export type UserSessionOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    token?: SortOrder
    refreshToken?: SortOrder
    deviceInfo?: SortOrderInput | SortOrder
    ipAddress?: SortOrderInput | SortOrder
    userAgent?: SortOrderInput | SortOrder
    isActive?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: UserSessionCountOrderByAggregateInput
    _max?: UserSessionMaxOrderByAggregateInput
    _min?: UserSessionMinOrderByAggregateInput
  }

  export type UserSessionScalarWhereWithAggregatesInput = {
    AND?: UserSessionScalarWhereWithAggregatesInput | UserSessionScalarWhereWithAggregatesInput[]
    OR?: UserSessionScalarWhereWithAggregatesInput[]
    NOT?: UserSessionScalarWhereWithAggregatesInput | UserSessionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"UserSession"> | string
    userId?: StringWithAggregatesFilter<"UserSession"> | string
    token?: StringWithAggregatesFilter<"UserSession"> | string
    refreshToken?: StringWithAggregatesFilter<"UserSession"> | string
    deviceInfo?: JsonNullableWithAggregatesFilter<"UserSession">
    ipAddress?: StringNullableWithAggregatesFilter<"UserSession"> | string | null
    userAgent?: StringNullableWithAggregatesFilter<"UserSession"> | string | null
    isActive?: BoolWithAggregatesFilter<"UserSession"> | boolean
    expiresAt?: DateTimeWithAggregatesFilter<"UserSession"> | Date | string
    createdAt?: DateTimeWithAggregatesFilter<"UserSession"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"UserSession"> | Date | string
  }

  export type UserPreferenceWhereInput = {
    AND?: UserPreferenceWhereInput | UserPreferenceWhereInput[]
    OR?: UserPreferenceWhereInput[]
    NOT?: UserPreferenceWhereInput | UserPreferenceWhereInput[]
    id?: StringFilter<"UserPreference"> | string
    userId?: StringFilter<"UserPreference"> | string
    theme?: EnumThemeFilter<"UserPreference"> | $Enums.Theme
    pushNotifications?: BoolFilter<"UserPreference"> | boolean
    emailNotifications?: BoolFilter<"UserPreference"> | boolean
    smsNotifications?: BoolFilter<"UserPreference"> | boolean
    weeklyReports?: BoolFilter<"UserPreference"> | boolean
    monthlyReports?: BoolFilter<"UserPreference"> | boolean
    aiRecommendations?: BoolFilter<"UserPreference"> | boolean
    locationServices?: BoolFilter<"UserPreference"> | boolean
    createdAt?: DateTimeFilter<"UserPreference"> | Date | string
    updatedAt?: DateTimeFilter<"UserPreference"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type UserPreferenceOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    theme?: SortOrder
    pushNotifications?: SortOrder
    emailNotifications?: SortOrder
    smsNotifications?: SortOrder
    weeklyReports?: SortOrder
    monthlyReports?: SortOrder
    aiRecommendations?: SortOrder
    locationServices?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    user?: UserOrderByWithRelationInput
  }

  export type UserPreferenceWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    userId?: string
    AND?: UserPreferenceWhereInput | UserPreferenceWhereInput[]
    OR?: UserPreferenceWhereInput[]
    NOT?: UserPreferenceWhereInput | UserPreferenceWhereInput[]
    theme?: EnumThemeFilter<"UserPreference"> | $Enums.Theme
    pushNotifications?: BoolFilter<"UserPreference"> | boolean
    emailNotifications?: BoolFilter<"UserPreference"> | boolean
    smsNotifications?: BoolFilter<"UserPreference"> | boolean
    weeklyReports?: BoolFilter<"UserPreference"> | boolean
    monthlyReports?: BoolFilter<"UserPreference"> | boolean
    aiRecommendations?: BoolFilter<"UserPreference"> | boolean
    locationServices?: BoolFilter<"UserPreference"> | boolean
    createdAt?: DateTimeFilter<"UserPreference"> | Date | string
    updatedAt?: DateTimeFilter<"UserPreference"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
  }, "id" | "userId">

  export type UserPreferenceOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    theme?: SortOrder
    pushNotifications?: SortOrder
    emailNotifications?: SortOrder
    smsNotifications?: SortOrder
    weeklyReports?: SortOrder
    monthlyReports?: SortOrder
    aiRecommendations?: SortOrder
    locationServices?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: UserPreferenceCountOrderByAggregateInput
    _max?: UserPreferenceMaxOrderByAggregateInput
    _min?: UserPreferenceMinOrderByAggregateInput
  }

  export type UserPreferenceScalarWhereWithAggregatesInput = {
    AND?: UserPreferenceScalarWhereWithAggregatesInput | UserPreferenceScalarWhereWithAggregatesInput[]
    OR?: UserPreferenceScalarWhereWithAggregatesInput[]
    NOT?: UserPreferenceScalarWhereWithAggregatesInput | UserPreferenceScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"UserPreference"> | string
    userId?: StringWithAggregatesFilter<"UserPreference"> | string
    theme?: EnumThemeWithAggregatesFilter<"UserPreference"> | $Enums.Theme
    pushNotifications?: BoolWithAggregatesFilter<"UserPreference"> | boolean
    emailNotifications?: BoolWithAggregatesFilter<"UserPreference"> | boolean
    smsNotifications?: BoolWithAggregatesFilter<"UserPreference"> | boolean
    weeklyReports?: BoolWithAggregatesFilter<"UserPreference"> | boolean
    monthlyReports?: BoolWithAggregatesFilter<"UserPreference"> | boolean
    aiRecommendations?: BoolWithAggregatesFilter<"UserPreference"> | boolean
    locationServices?: BoolWithAggregatesFilter<"UserPreference"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"UserPreference"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"UserPreference"> | Date | string
  }

  export type ReceiptWhereInput = {
    AND?: ReceiptWhereInput | ReceiptWhereInput[]
    OR?: ReceiptWhereInput[]
    NOT?: ReceiptWhereInput | ReceiptWhereInput[]
    id?: StringFilter<"Receipt"> | string
    userId?: StringFilter<"Receipt"> | string
    imageUrl?: StringNullableFilter<"Receipt"> | string | null
    merchantName?: StringFilter<"Receipt"> | string
    amount?: DecimalFilter<"Receipt"> | Decimal | DecimalJsLike | number | string
    currency?: EnumCurrencyFilter<"Receipt"> | $Enums.Currency
    transactionDate?: DateTimeFilter<"Receipt"> | Date | string
    category?: EnumReceiptCategoryFilter<"Receipt"> | $Enums.ReceiptCategory
    subcategory?: StringNullableFilter<"Receipt"> | string | null
    paymentMethod?: EnumPaymentMethodNullableFilter<"Receipt"> | $Enums.PaymentMethod | null
    location?: StringNullableFilter<"Receipt"> | string | null
    notes?: StringNullableFilter<"Receipt"> | string | null
    ocrConfidence?: FloatNullableFilter<"Receipt"> | number | null
    ocrRawText?: StringNullableFilter<"Receipt"> | string | null
    ocrProcessed?: BoolFilter<"Receipt"> | boolean
    createdAt?: DateTimeFilter<"Receipt"> | Date | string
    updatedAt?: DateTimeFilter<"Receipt"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type ReceiptOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    imageUrl?: SortOrderInput | SortOrder
    merchantName?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    transactionDate?: SortOrder
    category?: SortOrder
    subcategory?: SortOrderInput | SortOrder
    paymentMethod?: SortOrderInput | SortOrder
    location?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    ocrConfidence?: SortOrderInput | SortOrder
    ocrRawText?: SortOrderInput | SortOrder
    ocrProcessed?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    user?: UserOrderByWithRelationInput
  }

  export type ReceiptWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ReceiptWhereInput | ReceiptWhereInput[]
    OR?: ReceiptWhereInput[]
    NOT?: ReceiptWhereInput | ReceiptWhereInput[]
    userId?: StringFilter<"Receipt"> | string
    imageUrl?: StringNullableFilter<"Receipt"> | string | null
    merchantName?: StringFilter<"Receipt"> | string
    amount?: DecimalFilter<"Receipt"> | Decimal | DecimalJsLike | number | string
    currency?: EnumCurrencyFilter<"Receipt"> | $Enums.Currency
    transactionDate?: DateTimeFilter<"Receipt"> | Date | string
    category?: EnumReceiptCategoryFilter<"Receipt"> | $Enums.ReceiptCategory
    subcategory?: StringNullableFilter<"Receipt"> | string | null
    paymentMethod?: EnumPaymentMethodNullableFilter<"Receipt"> | $Enums.PaymentMethod | null
    location?: StringNullableFilter<"Receipt"> | string | null
    notes?: StringNullableFilter<"Receipt"> | string | null
    ocrConfidence?: FloatNullableFilter<"Receipt"> | number | null
    ocrRawText?: StringNullableFilter<"Receipt"> | string | null
    ocrProcessed?: BoolFilter<"Receipt"> | boolean
    createdAt?: DateTimeFilter<"Receipt"> | Date | string
    updatedAt?: DateTimeFilter<"Receipt"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
  }, "id">

  export type ReceiptOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    imageUrl?: SortOrderInput | SortOrder
    merchantName?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    transactionDate?: SortOrder
    category?: SortOrder
    subcategory?: SortOrderInput | SortOrder
    paymentMethod?: SortOrderInput | SortOrder
    location?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    ocrConfidence?: SortOrderInput | SortOrder
    ocrRawText?: SortOrderInput | SortOrder
    ocrProcessed?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ReceiptCountOrderByAggregateInput
    _avg?: ReceiptAvgOrderByAggregateInput
    _max?: ReceiptMaxOrderByAggregateInput
    _min?: ReceiptMinOrderByAggregateInput
    _sum?: ReceiptSumOrderByAggregateInput
  }

  export type ReceiptScalarWhereWithAggregatesInput = {
    AND?: ReceiptScalarWhereWithAggregatesInput | ReceiptScalarWhereWithAggregatesInput[]
    OR?: ReceiptScalarWhereWithAggregatesInput[]
    NOT?: ReceiptScalarWhereWithAggregatesInput | ReceiptScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Receipt"> | string
    userId?: StringWithAggregatesFilter<"Receipt"> | string
    imageUrl?: StringNullableWithAggregatesFilter<"Receipt"> | string | null
    merchantName?: StringWithAggregatesFilter<"Receipt"> | string
    amount?: DecimalWithAggregatesFilter<"Receipt"> | Decimal | DecimalJsLike | number | string
    currency?: EnumCurrencyWithAggregatesFilter<"Receipt"> | $Enums.Currency
    transactionDate?: DateTimeWithAggregatesFilter<"Receipt"> | Date | string
    category?: EnumReceiptCategoryWithAggregatesFilter<"Receipt"> | $Enums.ReceiptCategory
    subcategory?: StringNullableWithAggregatesFilter<"Receipt"> | string | null
    paymentMethod?: EnumPaymentMethodNullableWithAggregatesFilter<"Receipt"> | $Enums.PaymentMethod | null
    location?: StringNullableWithAggregatesFilter<"Receipt"> | string | null
    notes?: StringNullableWithAggregatesFilter<"Receipt"> | string | null
    ocrConfidence?: FloatNullableWithAggregatesFilter<"Receipt"> | number | null
    ocrRawText?: StringNullableWithAggregatesFilter<"Receipt"> | string | null
    ocrProcessed?: BoolWithAggregatesFilter<"Receipt"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"Receipt"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Receipt"> | Date | string
  }

  export type FinancialTestWhereInput = {
    AND?: FinancialTestWhereInput | FinancialTestWhereInput[]
    OR?: FinancialTestWhereInput[]
    NOT?: FinancialTestWhereInput | FinancialTestWhereInput[]
    id?: StringFilter<"FinancialTest"> | string
    userId?: StringFilter<"FinancialTest"> | string
    testVersion?: StringFilter<"FinancialTest"> | string
    questions?: JsonFilter<"FinancialTest">
    score?: IntFilter<"FinancialTest"> | number
    level?: EnumFinancialLevelFilter<"FinancialTest"> | $Enums.FinancialLevel
    recommendations?: JsonNullableFilter<"FinancialTest">
    completedAt?: DateTimeFilter<"FinancialTest"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type FinancialTestOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    testVersion?: SortOrder
    questions?: SortOrder
    score?: SortOrder
    level?: SortOrder
    recommendations?: SortOrderInput | SortOrder
    completedAt?: SortOrder
    user?: UserOrderByWithRelationInput
  }

  export type FinancialTestWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: FinancialTestWhereInput | FinancialTestWhereInput[]
    OR?: FinancialTestWhereInput[]
    NOT?: FinancialTestWhereInput | FinancialTestWhereInput[]
    userId?: StringFilter<"FinancialTest"> | string
    testVersion?: StringFilter<"FinancialTest"> | string
    questions?: JsonFilter<"FinancialTest">
    score?: IntFilter<"FinancialTest"> | number
    level?: EnumFinancialLevelFilter<"FinancialTest"> | $Enums.FinancialLevel
    recommendations?: JsonNullableFilter<"FinancialTest">
    completedAt?: DateTimeFilter<"FinancialTest"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
  }, "id">

  export type FinancialTestOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    testVersion?: SortOrder
    questions?: SortOrder
    score?: SortOrder
    level?: SortOrder
    recommendations?: SortOrderInput | SortOrder
    completedAt?: SortOrder
    _count?: FinancialTestCountOrderByAggregateInput
    _avg?: FinancialTestAvgOrderByAggregateInput
    _max?: FinancialTestMaxOrderByAggregateInput
    _min?: FinancialTestMinOrderByAggregateInput
    _sum?: FinancialTestSumOrderByAggregateInput
  }

  export type FinancialTestScalarWhereWithAggregatesInput = {
    AND?: FinancialTestScalarWhereWithAggregatesInput | FinancialTestScalarWhereWithAggregatesInput[]
    OR?: FinancialTestScalarWhereWithAggregatesInput[]
    NOT?: FinancialTestScalarWhereWithAggregatesInput | FinancialTestScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"FinancialTest"> | string
    userId?: StringWithAggregatesFilter<"FinancialTest"> | string
    testVersion?: StringWithAggregatesFilter<"FinancialTest"> | string
    questions?: JsonWithAggregatesFilter<"FinancialTest">
    score?: IntWithAggregatesFilter<"FinancialTest"> | number
    level?: EnumFinancialLevelWithAggregatesFilter<"FinancialTest"> | $Enums.FinancialLevel
    recommendations?: JsonNullableWithAggregatesFilter<"FinancialTest">
    completedAt?: DateTimeWithAggregatesFilter<"FinancialTest"> | Date | string
  }

  export type AIInteractionWhereInput = {
    AND?: AIInteractionWhereInput | AIInteractionWhereInput[]
    OR?: AIInteractionWhereInput[]
    NOT?: AIInteractionWhereInput | AIInteractionWhereInput[]
    id?: StringFilter<"AIInteraction"> | string
    userId?: StringFilter<"AIInteraction"> | string
    sessionId?: StringNullableFilter<"AIInteraction"> | string | null
    interactionType?: EnumAIInteractionTypeFilter<"AIInteraction"> | $Enums.AIInteractionType
    userMessage?: StringFilter<"AIInteraction"> | string
    aiResponse?: StringFilter<"AIInteraction"> | string
    model?: StringFilter<"AIInteraction"> | string
    tokensUsed?: IntNullableFilter<"AIInteraction"> | number | null
    responseTime?: IntNullableFilter<"AIInteraction"> | number | null
    isFinancialQuery?: BoolFilter<"AIInteraction"> | boolean
    queryCategory?: EnumFinancialQueryCategoryNullableFilter<"AIInteraction"> | $Enums.FinancialQueryCategory | null
    disclaimerShown?: BoolFilter<"AIInteraction"> | boolean
    disclaimerVersion?: StringFilter<"AIInteraction"> | string
    userRating?: IntNullableFilter<"AIInteraction"> | number | null
    userFeedback?: StringNullableFilter<"AIInteraction"> | string | null
    ipAddress?: StringNullableFilter<"AIInteraction"> | string | null
    userAgent?: StringNullableFilter<"AIInteraction"> | string | null
    metadata?: JsonNullableFilter<"AIInteraction">
    createdAt?: DateTimeFilter<"AIInteraction"> | Date | string
    updatedAt?: DateTimeFilter<"AIInteraction"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type AIInteractionOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    sessionId?: SortOrderInput | SortOrder
    interactionType?: SortOrder
    userMessage?: SortOrder
    aiResponse?: SortOrder
    model?: SortOrder
    tokensUsed?: SortOrderInput | SortOrder
    responseTime?: SortOrderInput | SortOrder
    isFinancialQuery?: SortOrder
    queryCategory?: SortOrderInput | SortOrder
    disclaimerShown?: SortOrder
    disclaimerVersion?: SortOrder
    userRating?: SortOrderInput | SortOrder
    userFeedback?: SortOrderInput | SortOrder
    ipAddress?: SortOrderInput | SortOrder
    userAgent?: SortOrderInput | SortOrder
    metadata?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    user?: UserOrderByWithRelationInput
  }

  export type AIInteractionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: AIInteractionWhereInput | AIInteractionWhereInput[]
    OR?: AIInteractionWhereInput[]
    NOT?: AIInteractionWhereInput | AIInteractionWhereInput[]
    userId?: StringFilter<"AIInteraction"> | string
    sessionId?: StringNullableFilter<"AIInteraction"> | string | null
    interactionType?: EnumAIInteractionTypeFilter<"AIInteraction"> | $Enums.AIInteractionType
    userMessage?: StringFilter<"AIInteraction"> | string
    aiResponse?: StringFilter<"AIInteraction"> | string
    model?: StringFilter<"AIInteraction"> | string
    tokensUsed?: IntNullableFilter<"AIInteraction"> | number | null
    responseTime?: IntNullableFilter<"AIInteraction"> | number | null
    isFinancialQuery?: BoolFilter<"AIInteraction"> | boolean
    queryCategory?: EnumFinancialQueryCategoryNullableFilter<"AIInteraction"> | $Enums.FinancialQueryCategory | null
    disclaimerShown?: BoolFilter<"AIInteraction"> | boolean
    disclaimerVersion?: StringFilter<"AIInteraction"> | string
    userRating?: IntNullableFilter<"AIInteraction"> | number | null
    userFeedback?: StringNullableFilter<"AIInteraction"> | string | null
    ipAddress?: StringNullableFilter<"AIInteraction"> | string | null
    userAgent?: StringNullableFilter<"AIInteraction"> | string | null
    metadata?: JsonNullableFilter<"AIInteraction">
    createdAt?: DateTimeFilter<"AIInteraction"> | Date | string
    updatedAt?: DateTimeFilter<"AIInteraction"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
  }, "id">

  export type AIInteractionOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    sessionId?: SortOrderInput | SortOrder
    interactionType?: SortOrder
    userMessage?: SortOrder
    aiResponse?: SortOrder
    model?: SortOrder
    tokensUsed?: SortOrderInput | SortOrder
    responseTime?: SortOrderInput | SortOrder
    isFinancialQuery?: SortOrder
    queryCategory?: SortOrderInput | SortOrder
    disclaimerShown?: SortOrder
    disclaimerVersion?: SortOrder
    userRating?: SortOrderInput | SortOrder
    userFeedback?: SortOrderInput | SortOrder
    ipAddress?: SortOrderInput | SortOrder
    userAgent?: SortOrderInput | SortOrder
    metadata?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: AIInteractionCountOrderByAggregateInput
    _avg?: AIInteractionAvgOrderByAggregateInput
    _max?: AIInteractionMaxOrderByAggregateInput
    _min?: AIInteractionMinOrderByAggregateInput
    _sum?: AIInteractionSumOrderByAggregateInput
  }

  export type AIInteractionScalarWhereWithAggregatesInput = {
    AND?: AIInteractionScalarWhereWithAggregatesInput | AIInteractionScalarWhereWithAggregatesInput[]
    OR?: AIInteractionScalarWhereWithAggregatesInput[]
    NOT?: AIInteractionScalarWhereWithAggregatesInput | AIInteractionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"AIInteraction"> | string
    userId?: StringWithAggregatesFilter<"AIInteraction"> | string
    sessionId?: StringNullableWithAggregatesFilter<"AIInteraction"> | string | null
    interactionType?: EnumAIInteractionTypeWithAggregatesFilter<"AIInteraction"> | $Enums.AIInteractionType
    userMessage?: StringWithAggregatesFilter<"AIInteraction"> | string
    aiResponse?: StringWithAggregatesFilter<"AIInteraction"> | string
    model?: StringWithAggregatesFilter<"AIInteraction"> | string
    tokensUsed?: IntNullableWithAggregatesFilter<"AIInteraction"> | number | null
    responseTime?: IntNullableWithAggregatesFilter<"AIInteraction"> | number | null
    isFinancialQuery?: BoolWithAggregatesFilter<"AIInteraction"> | boolean
    queryCategory?: EnumFinancialQueryCategoryNullableWithAggregatesFilter<"AIInteraction"> | $Enums.FinancialQueryCategory | null
    disclaimerShown?: BoolWithAggregatesFilter<"AIInteraction"> | boolean
    disclaimerVersion?: StringWithAggregatesFilter<"AIInteraction"> | string
    userRating?: IntNullableWithAggregatesFilter<"AIInteraction"> | number | null
    userFeedback?: StringNullableWithAggregatesFilter<"AIInteraction"> | string | null
    ipAddress?: StringNullableWithAggregatesFilter<"AIInteraction"> | string | null
    userAgent?: StringNullableWithAggregatesFilter<"AIInteraction"> | string | null
    metadata?: JsonNullableWithAggregatesFilter<"AIInteraction">
    createdAt?: DateTimeWithAggregatesFilter<"AIInteraction"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"AIInteraction"> | Date | string
  }

  export type MarketplaceProductWhereInput = {
    AND?: MarketplaceProductWhereInput | MarketplaceProductWhereInput[]
    OR?: MarketplaceProductWhereInput[]
    NOT?: MarketplaceProductWhereInput | MarketplaceProductWhereInput[]
    id?: StringFilter<"MarketplaceProduct"> | string
    name?: StringFilter<"MarketplaceProduct"> | string
    description?: StringFilter<"MarketplaceProduct"> | string
    shortDescription?: StringNullableFilter<"MarketplaceProduct"> | string | null
    category?: EnumProductCategoryFilter<"MarketplaceProduct"> | $Enums.ProductCategory
    subcategory?: StringNullableFilter<"MarketplaceProduct"> | string | null
    price?: DecimalFilter<"MarketplaceProduct"> | Decimal | DecimalJsLike | number | string
    currency?: EnumCurrencyFilter<"MarketplaceProduct"> | $Enums.Currency
    originalPrice?: DecimalNullableFilter<"MarketplaceProduct"> | Decimal | DecimalJsLike | number | string | null
    discount?: IntNullableFilter<"MarketplaceProduct"> | number | null
    providerId?: StringFilter<"MarketplaceProduct"> | string
    providerName?: StringFilter<"MarketplaceProduct"> | string
    providerLogo?: StringNullableFilter<"MarketplaceProduct"> | string | null
    images?: StringNullableListFilter<"MarketplaceProduct">
    videoUrl?: StringNullableFilter<"MarketplaceProduct"> | string | null
    duration?: StringNullableFilter<"MarketplaceProduct"> | string | null
    level?: EnumFinancialLevelNullableFilter<"MarketplaceProduct"> | $Enums.FinancialLevel | null
    features?: StringNullableListFilter<"MarketplaceProduct">
    requirements?: StringNullableFilter<"MarketplaceProduct"> | string | null
    whatYouWillLearn?: StringNullableFilter<"MarketplaceProduct"> | string | null
    averageRating?: FloatFilter<"MarketplaceProduct"> | number
    totalReviews?: IntFilter<"MarketplaceProduct"> | number
    totalSales?: IntFilter<"MarketplaceProduct"> | number
    isActive?: BoolFilter<"MarketplaceProduct"> | boolean
    isFeatured?: BoolFilter<"MarketplaceProduct"> | boolean
    isPopular?: BoolFilter<"MarketplaceProduct"> | boolean
    createdAt?: DateTimeFilter<"MarketplaceProduct"> | Date | string
    updatedAt?: DateTimeFilter<"MarketplaceProduct"> | Date | string
    orders?: MarketplaceOrderListRelationFilter
    reviews?: ProductReviewListRelationFilter
  }

  export type MarketplaceProductOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    shortDescription?: SortOrderInput | SortOrder
    category?: SortOrder
    subcategory?: SortOrderInput | SortOrder
    price?: SortOrder
    currency?: SortOrder
    originalPrice?: SortOrderInput | SortOrder
    discount?: SortOrderInput | SortOrder
    providerId?: SortOrder
    providerName?: SortOrder
    providerLogo?: SortOrderInput | SortOrder
    images?: SortOrder
    videoUrl?: SortOrderInput | SortOrder
    duration?: SortOrderInput | SortOrder
    level?: SortOrderInput | SortOrder
    features?: SortOrder
    requirements?: SortOrderInput | SortOrder
    whatYouWillLearn?: SortOrderInput | SortOrder
    averageRating?: SortOrder
    totalReviews?: SortOrder
    totalSales?: SortOrder
    isActive?: SortOrder
    isFeatured?: SortOrder
    isPopular?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    orders?: MarketplaceOrderOrderByRelationAggregateInput
    reviews?: ProductReviewOrderByRelationAggregateInput
  }

  export type MarketplaceProductWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: MarketplaceProductWhereInput | MarketplaceProductWhereInput[]
    OR?: MarketplaceProductWhereInput[]
    NOT?: MarketplaceProductWhereInput | MarketplaceProductWhereInput[]
    name?: StringFilter<"MarketplaceProduct"> | string
    description?: StringFilter<"MarketplaceProduct"> | string
    shortDescription?: StringNullableFilter<"MarketplaceProduct"> | string | null
    category?: EnumProductCategoryFilter<"MarketplaceProduct"> | $Enums.ProductCategory
    subcategory?: StringNullableFilter<"MarketplaceProduct"> | string | null
    price?: DecimalFilter<"MarketplaceProduct"> | Decimal | DecimalJsLike | number | string
    currency?: EnumCurrencyFilter<"MarketplaceProduct"> | $Enums.Currency
    originalPrice?: DecimalNullableFilter<"MarketplaceProduct"> | Decimal | DecimalJsLike | number | string | null
    discount?: IntNullableFilter<"MarketplaceProduct"> | number | null
    providerId?: StringFilter<"MarketplaceProduct"> | string
    providerName?: StringFilter<"MarketplaceProduct"> | string
    providerLogo?: StringNullableFilter<"MarketplaceProduct"> | string | null
    images?: StringNullableListFilter<"MarketplaceProduct">
    videoUrl?: StringNullableFilter<"MarketplaceProduct"> | string | null
    duration?: StringNullableFilter<"MarketplaceProduct"> | string | null
    level?: EnumFinancialLevelNullableFilter<"MarketplaceProduct"> | $Enums.FinancialLevel | null
    features?: StringNullableListFilter<"MarketplaceProduct">
    requirements?: StringNullableFilter<"MarketplaceProduct"> | string | null
    whatYouWillLearn?: StringNullableFilter<"MarketplaceProduct"> | string | null
    averageRating?: FloatFilter<"MarketplaceProduct"> | number
    totalReviews?: IntFilter<"MarketplaceProduct"> | number
    totalSales?: IntFilter<"MarketplaceProduct"> | number
    isActive?: BoolFilter<"MarketplaceProduct"> | boolean
    isFeatured?: BoolFilter<"MarketplaceProduct"> | boolean
    isPopular?: BoolFilter<"MarketplaceProduct"> | boolean
    createdAt?: DateTimeFilter<"MarketplaceProduct"> | Date | string
    updatedAt?: DateTimeFilter<"MarketplaceProduct"> | Date | string
    orders?: MarketplaceOrderListRelationFilter
    reviews?: ProductReviewListRelationFilter
  }, "id">

  export type MarketplaceProductOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    shortDescription?: SortOrderInput | SortOrder
    category?: SortOrder
    subcategory?: SortOrderInput | SortOrder
    price?: SortOrder
    currency?: SortOrder
    originalPrice?: SortOrderInput | SortOrder
    discount?: SortOrderInput | SortOrder
    providerId?: SortOrder
    providerName?: SortOrder
    providerLogo?: SortOrderInput | SortOrder
    images?: SortOrder
    videoUrl?: SortOrderInput | SortOrder
    duration?: SortOrderInput | SortOrder
    level?: SortOrderInput | SortOrder
    features?: SortOrder
    requirements?: SortOrderInput | SortOrder
    whatYouWillLearn?: SortOrderInput | SortOrder
    averageRating?: SortOrder
    totalReviews?: SortOrder
    totalSales?: SortOrder
    isActive?: SortOrder
    isFeatured?: SortOrder
    isPopular?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: MarketplaceProductCountOrderByAggregateInput
    _avg?: MarketplaceProductAvgOrderByAggregateInput
    _max?: MarketplaceProductMaxOrderByAggregateInput
    _min?: MarketplaceProductMinOrderByAggregateInput
    _sum?: MarketplaceProductSumOrderByAggregateInput
  }

  export type MarketplaceProductScalarWhereWithAggregatesInput = {
    AND?: MarketplaceProductScalarWhereWithAggregatesInput | MarketplaceProductScalarWhereWithAggregatesInput[]
    OR?: MarketplaceProductScalarWhereWithAggregatesInput[]
    NOT?: MarketplaceProductScalarWhereWithAggregatesInput | MarketplaceProductScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"MarketplaceProduct"> | string
    name?: StringWithAggregatesFilter<"MarketplaceProduct"> | string
    description?: StringWithAggregatesFilter<"MarketplaceProduct"> | string
    shortDescription?: StringNullableWithAggregatesFilter<"MarketplaceProduct"> | string | null
    category?: EnumProductCategoryWithAggregatesFilter<"MarketplaceProduct"> | $Enums.ProductCategory
    subcategory?: StringNullableWithAggregatesFilter<"MarketplaceProduct"> | string | null
    price?: DecimalWithAggregatesFilter<"MarketplaceProduct"> | Decimal | DecimalJsLike | number | string
    currency?: EnumCurrencyWithAggregatesFilter<"MarketplaceProduct"> | $Enums.Currency
    originalPrice?: DecimalNullableWithAggregatesFilter<"MarketplaceProduct"> | Decimal | DecimalJsLike | number | string | null
    discount?: IntNullableWithAggregatesFilter<"MarketplaceProduct"> | number | null
    providerId?: StringWithAggregatesFilter<"MarketplaceProduct"> | string
    providerName?: StringWithAggregatesFilter<"MarketplaceProduct"> | string
    providerLogo?: StringNullableWithAggregatesFilter<"MarketplaceProduct"> | string | null
    images?: StringNullableListFilter<"MarketplaceProduct">
    videoUrl?: StringNullableWithAggregatesFilter<"MarketplaceProduct"> | string | null
    duration?: StringNullableWithAggregatesFilter<"MarketplaceProduct"> | string | null
    level?: EnumFinancialLevelNullableWithAggregatesFilter<"MarketplaceProduct"> | $Enums.FinancialLevel | null
    features?: StringNullableListFilter<"MarketplaceProduct">
    requirements?: StringNullableWithAggregatesFilter<"MarketplaceProduct"> | string | null
    whatYouWillLearn?: StringNullableWithAggregatesFilter<"MarketplaceProduct"> | string | null
    averageRating?: FloatWithAggregatesFilter<"MarketplaceProduct"> | number
    totalReviews?: IntWithAggregatesFilter<"MarketplaceProduct"> | number
    totalSales?: IntWithAggregatesFilter<"MarketplaceProduct"> | number
    isActive?: BoolWithAggregatesFilter<"MarketplaceProduct"> | boolean
    isFeatured?: BoolWithAggregatesFilter<"MarketplaceProduct"> | boolean
    isPopular?: BoolWithAggregatesFilter<"MarketplaceProduct"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"MarketplaceProduct"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"MarketplaceProduct"> | Date | string
  }

  export type MarketplaceOrderWhereInput = {
    AND?: MarketplaceOrderWhereInput | MarketplaceOrderWhereInput[]
    OR?: MarketplaceOrderWhereInput[]
    NOT?: MarketplaceOrderWhereInput | MarketplaceOrderWhereInput[]
    id?: StringFilter<"MarketplaceOrder"> | string
    userId?: StringFilter<"MarketplaceOrder"> | string
    productId?: StringFilter<"MarketplaceOrder"> | string
    orderNumber?: StringFilter<"MarketplaceOrder"> | string
    amount?: DecimalFilter<"MarketplaceOrder"> | Decimal | DecimalJsLike | number | string
    currency?: EnumCurrencyFilter<"MarketplaceOrder"> | $Enums.Currency
    status?: EnumOrderStatusFilter<"MarketplaceOrder"> | $Enums.OrderStatus
    paymentMethod?: EnumPaymentMethodFilter<"MarketplaceOrder"> | $Enums.PaymentMethod
    paymentGateway?: EnumPaymentGatewayFilter<"MarketplaceOrder"> | $Enums.PaymentGateway
    transactionId?: StringNullableFilter<"MarketplaceOrder"> | string | null
    paymentStatus?: EnumPaymentStatusFilter<"MarketplaceOrder"> | $Enums.PaymentStatus
    commission?: DecimalNullableFilter<"MarketplaceOrder"> | Decimal | DecimalJsLike | number | string | null
    commissionRate?: FloatNullableFilter<"MarketplaceOrder"> | number | null
    createdAt?: DateTimeFilter<"MarketplaceOrder"> | Date | string
    updatedAt?: DateTimeFilter<"MarketplaceOrder"> | Date | string
    paidAt?: DateTimeNullableFilter<"MarketplaceOrder"> | Date | string | null
    product?: XOR<MarketplaceProductRelationFilter, MarketplaceProductWhereInput>
    user?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type MarketplaceOrderOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    productId?: SortOrder
    orderNumber?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    status?: SortOrder
    paymentMethod?: SortOrder
    paymentGateway?: SortOrder
    transactionId?: SortOrderInput | SortOrder
    paymentStatus?: SortOrder
    commission?: SortOrderInput | SortOrder
    commissionRate?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    paidAt?: SortOrderInput | SortOrder
    product?: MarketplaceProductOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
  }

  export type MarketplaceOrderWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    orderNumber?: string
    AND?: MarketplaceOrderWhereInput | MarketplaceOrderWhereInput[]
    OR?: MarketplaceOrderWhereInput[]
    NOT?: MarketplaceOrderWhereInput | MarketplaceOrderWhereInput[]
    userId?: StringFilter<"MarketplaceOrder"> | string
    productId?: StringFilter<"MarketplaceOrder"> | string
    amount?: DecimalFilter<"MarketplaceOrder"> | Decimal | DecimalJsLike | number | string
    currency?: EnumCurrencyFilter<"MarketplaceOrder"> | $Enums.Currency
    status?: EnumOrderStatusFilter<"MarketplaceOrder"> | $Enums.OrderStatus
    paymentMethod?: EnumPaymentMethodFilter<"MarketplaceOrder"> | $Enums.PaymentMethod
    paymentGateway?: EnumPaymentGatewayFilter<"MarketplaceOrder"> | $Enums.PaymentGateway
    transactionId?: StringNullableFilter<"MarketplaceOrder"> | string | null
    paymentStatus?: EnumPaymentStatusFilter<"MarketplaceOrder"> | $Enums.PaymentStatus
    commission?: DecimalNullableFilter<"MarketplaceOrder"> | Decimal | DecimalJsLike | number | string | null
    commissionRate?: FloatNullableFilter<"MarketplaceOrder"> | number | null
    createdAt?: DateTimeFilter<"MarketplaceOrder"> | Date | string
    updatedAt?: DateTimeFilter<"MarketplaceOrder"> | Date | string
    paidAt?: DateTimeNullableFilter<"MarketplaceOrder"> | Date | string | null
    product?: XOR<MarketplaceProductRelationFilter, MarketplaceProductWhereInput>
    user?: XOR<UserRelationFilter, UserWhereInput>
  }, "id" | "orderNumber">

  export type MarketplaceOrderOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    productId?: SortOrder
    orderNumber?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    status?: SortOrder
    paymentMethod?: SortOrder
    paymentGateway?: SortOrder
    transactionId?: SortOrderInput | SortOrder
    paymentStatus?: SortOrder
    commission?: SortOrderInput | SortOrder
    commissionRate?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    paidAt?: SortOrderInput | SortOrder
    _count?: MarketplaceOrderCountOrderByAggregateInput
    _avg?: MarketplaceOrderAvgOrderByAggregateInput
    _max?: MarketplaceOrderMaxOrderByAggregateInput
    _min?: MarketplaceOrderMinOrderByAggregateInput
    _sum?: MarketplaceOrderSumOrderByAggregateInput
  }

  export type MarketplaceOrderScalarWhereWithAggregatesInput = {
    AND?: MarketplaceOrderScalarWhereWithAggregatesInput | MarketplaceOrderScalarWhereWithAggregatesInput[]
    OR?: MarketplaceOrderScalarWhereWithAggregatesInput[]
    NOT?: MarketplaceOrderScalarWhereWithAggregatesInput | MarketplaceOrderScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"MarketplaceOrder"> | string
    userId?: StringWithAggregatesFilter<"MarketplaceOrder"> | string
    productId?: StringWithAggregatesFilter<"MarketplaceOrder"> | string
    orderNumber?: StringWithAggregatesFilter<"MarketplaceOrder"> | string
    amount?: DecimalWithAggregatesFilter<"MarketplaceOrder"> | Decimal | DecimalJsLike | number | string
    currency?: EnumCurrencyWithAggregatesFilter<"MarketplaceOrder"> | $Enums.Currency
    status?: EnumOrderStatusWithAggregatesFilter<"MarketplaceOrder"> | $Enums.OrderStatus
    paymentMethod?: EnumPaymentMethodWithAggregatesFilter<"MarketplaceOrder"> | $Enums.PaymentMethod
    paymentGateway?: EnumPaymentGatewayWithAggregatesFilter<"MarketplaceOrder"> | $Enums.PaymentGateway
    transactionId?: StringNullableWithAggregatesFilter<"MarketplaceOrder"> | string | null
    paymentStatus?: EnumPaymentStatusWithAggregatesFilter<"MarketplaceOrder"> | $Enums.PaymentStatus
    commission?: DecimalNullableWithAggregatesFilter<"MarketplaceOrder"> | Decimal | DecimalJsLike | number | string | null
    commissionRate?: FloatNullableWithAggregatesFilter<"MarketplaceOrder"> | number | null
    createdAt?: DateTimeWithAggregatesFilter<"MarketplaceOrder"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"MarketplaceOrder"> | Date | string
    paidAt?: DateTimeNullableWithAggregatesFilter<"MarketplaceOrder"> | Date | string | null
  }

  export type ProductReviewWhereInput = {
    AND?: ProductReviewWhereInput | ProductReviewWhereInput[]
    OR?: ProductReviewWhereInput[]
    NOT?: ProductReviewWhereInput | ProductReviewWhereInput[]
    id?: StringFilter<"ProductReview"> | string
    productId?: StringFilter<"ProductReview"> | string
    userId?: StringFilter<"ProductReview"> | string
    rating?: IntFilter<"ProductReview"> | number
    title?: StringNullableFilter<"ProductReview"> | string | null
    comment?: StringNullableFilter<"ProductReview"> | string | null
    isVerified?: BoolFilter<"ProductReview"> | boolean
    createdAt?: DateTimeFilter<"ProductReview"> | Date | string
    updatedAt?: DateTimeFilter<"ProductReview"> | Date | string
    product?: XOR<MarketplaceProductRelationFilter, MarketplaceProductWhereInput>
  }

  export type ProductReviewOrderByWithRelationInput = {
    id?: SortOrder
    productId?: SortOrder
    userId?: SortOrder
    rating?: SortOrder
    title?: SortOrderInput | SortOrder
    comment?: SortOrderInput | SortOrder
    isVerified?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    product?: MarketplaceProductOrderByWithRelationInput
  }

  export type ProductReviewWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ProductReviewWhereInput | ProductReviewWhereInput[]
    OR?: ProductReviewWhereInput[]
    NOT?: ProductReviewWhereInput | ProductReviewWhereInput[]
    productId?: StringFilter<"ProductReview"> | string
    userId?: StringFilter<"ProductReview"> | string
    rating?: IntFilter<"ProductReview"> | number
    title?: StringNullableFilter<"ProductReview"> | string | null
    comment?: StringNullableFilter<"ProductReview"> | string | null
    isVerified?: BoolFilter<"ProductReview"> | boolean
    createdAt?: DateTimeFilter<"ProductReview"> | Date | string
    updatedAt?: DateTimeFilter<"ProductReview"> | Date | string
    product?: XOR<MarketplaceProductRelationFilter, MarketplaceProductWhereInput>
  }, "id">

  export type ProductReviewOrderByWithAggregationInput = {
    id?: SortOrder
    productId?: SortOrder
    userId?: SortOrder
    rating?: SortOrder
    title?: SortOrderInput | SortOrder
    comment?: SortOrderInput | SortOrder
    isVerified?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ProductReviewCountOrderByAggregateInput
    _avg?: ProductReviewAvgOrderByAggregateInput
    _max?: ProductReviewMaxOrderByAggregateInput
    _min?: ProductReviewMinOrderByAggregateInput
    _sum?: ProductReviewSumOrderByAggregateInput
  }

  export type ProductReviewScalarWhereWithAggregatesInput = {
    AND?: ProductReviewScalarWhereWithAggregatesInput | ProductReviewScalarWhereWithAggregatesInput[]
    OR?: ProductReviewScalarWhereWithAggregatesInput[]
    NOT?: ProductReviewScalarWhereWithAggregatesInput | ProductReviewScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ProductReview"> | string
    productId?: StringWithAggregatesFilter<"ProductReview"> | string
    userId?: StringWithAggregatesFilter<"ProductReview"> | string
    rating?: IntWithAggregatesFilter<"ProductReview"> | number
    title?: StringNullableWithAggregatesFilter<"ProductReview"> | string | null
    comment?: StringNullableWithAggregatesFilter<"ProductReview"> | string | null
    isVerified?: BoolWithAggregatesFilter<"ProductReview"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"ProductReview"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ProductReview"> | Date | string
  }

  export type AuditLogWhereInput = {
    AND?: AuditLogWhereInput | AuditLogWhereInput[]
    OR?: AuditLogWhereInput[]
    NOT?: AuditLogWhereInput | AuditLogWhereInput[]
    id?: StringFilter<"AuditLog"> | string
    userId?: StringFilter<"AuditLog"> | string
    action?: StringFilter<"AuditLog"> | string
    resource?: StringFilter<"AuditLog"> | string
    resourceId?: StringNullableFilter<"AuditLog"> | string | null
    details?: StringNullableFilter<"AuditLog"> | string | null
    ipAddress?: StringNullableFilter<"AuditLog"> | string | null
    userAgent?: StringNullableFilter<"AuditLog"> | string | null
    success?: BoolFilter<"AuditLog"> | boolean
    errorMessage?: StringNullableFilter<"AuditLog"> | string | null
    timestamp?: DateTimeFilter<"AuditLog"> | Date | string
  }

  export type AuditLogOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    action?: SortOrder
    resource?: SortOrder
    resourceId?: SortOrderInput | SortOrder
    details?: SortOrderInput | SortOrder
    ipAddress?: SortOrderInput | SortOrder
    userAgent?: SortOrderInput | SortOrder
    success?: SortOrder
    errorMessage?: SortOrderInput | SortOrder
    timestamp?: SortOrder
  }

  export type AuditLogWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: AuditLogWhereInput | AuditLogWhereInput[]
    OR?: AuditLogWhereInput[]
    NOT?: AuditLogWhereInput | AuditLogWhereInput[]
    userId?: StringFilter<"AuditLog"> | string
    action?: StringFilter<"AuditLog"> | string
    resource?: StringFilter<"AuditLog"> | string
    resourceId?: StringNullableFilter<"AuditLog"> | string | null
    details?: StringNullableFilter<"AuditLog"> | string | null
    ipAddress?: StringNullableFilter<"AuditLog"> | string | null
    userAgent?: StringNullableFilter<"AuditLog"> | string | null
    success?: BoolFilter<"AuditLog"> | boolean
    errorMessage?: StringNullableFilter<"AuditLog"> | string | null
    timestamp?: DateTimeFilter<"AuditLog"> | Date | string
  }, "id">

  export type AuditLogOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    action?: SortOrder
    resource?: SortOrder
    resourceId?: SortOrderInput | SortOrder
    details?: SortOrderInput | SortOrder
    ipAddress?: SortOrderInput | SortOrder
    userAgent?: SortOrderInput | SortOrder
    success?: SortOrder
    errorMessage?: SortOrderInput | SortOrder
    timestamp?: SortOrder
    _count?: AuditLogCountOrderByAggregateInput
    _max?: AuditLogMaxOrderByAggregateInput
    _min?: AuditLogMinOrderByAggregateInput
  }

  export type AuditLogScalarWhereWithAggregatesInput = {
    AND?: AuditLogScalarWhereWithAggregatesInput | AuditLogScalarWhereWithAggregatesInput[]
    OR?: AuditLogScalarWhereWithAggregatesInput[]
    NOT?: AuditLogScalarWhereWithAggregatesInput | AuditLogScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"AuditLog"> | string
    userId?: StringWithAggregatesFilter<"AuditLog"> | string
    action?: StringWithAggregatesFilter<"AuditLog"> | string
    resource?: StringWithAggregatesFilter<"AuditLog"> | string
    resourceId?: StringNullableWithAggregatesFilter<"AuditLog"> | string | null
    details?: StringNullableWithAggregatesFilter<"AuditLog"> | string | null
    ipAddress?: StringNullableWithAggregatesFilter<"AuditLog"> | string | null
    userAgent?: StringNullableWithAggregatesFilter<"AuditLog"> | string | null
    success?: BoolWithAggregatesFilter<"AuditLog"> | boolean
    errorMessage?: StringNullableWithAggregatesFilter<"AuditLog"> | string | null
    timestamp?: DateTimeWithAggregatesFilter<"AuditLog"> | Date | string
  }

  export type SecurityLogWhereInput = {
    AND?: SecurityLogWhereInput | SecurityLogWhereInput[]
    OR?: SecurityLogWhereInput[]
    NOT?: SecurityLogWhereInput | SecurityLogWhereInput[]
    id?: StringFilter<"SecurityLog"> | string
    userId?: StringNullableFilter<"SecurityLog"> | string | null
    action?: StringFilter<"SecurityLog"> | string
    details?: StringNullableFilter<"SecurityLog"> | string | null
    ipAddress?: StringNullableFilter<"SecurityLog"> | string | null
    userAgent?: StringNullableFilter<"SecurityLog"> | string | null
    severity?: StringFilter<"SecurityLog"> | string
    timestamp?: DateTimeFilter<"SecurityLog"> | Date | string
  }

  export type SecurityLogOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrderInput | SortOrder
    action?: SortOrder
    details?: SortOrderInput | SortOrder
    ipAddress?: SortOrderInput | SortOrder
    userAgent?: SortOrderInput | SortOrder
    severity?: SortOrder
    timestamp?: SortOrder
  }

  export type SecurityLogWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: SecurityLogWhereInput | SecurityLogWhereInput[]
    OR?: SecurityLogWhereInput[]
    NOT?: SecurityLogWhereInput | SecurityLogWhereInput[]
    userId?: StringNullableFilter<"SecurityLog"> | string | null
    action?: StringFilter<"SecurityLog"> | string
    details?: StringNullableFilter<"SecurityLog"> | string | null
    ipAddress?: StringNullableFilter<"SecurityLog"> | string | null
    userAgent?: StringNullableFilter<"SecurityLog"> | string | null
    severity?: StringFilter<"SecurityLog"> | string
    timestamp?: DateTimeFilter<"SecurityLog"> | Date | string
  }, "id">

  export type SecurityLogOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrderInput | SortOrder
    action?: SortOrder
    details?: SortOrderInput | SortOrder
    ipAddress?: SortOrderInput | SortOrder
    userAgent?: SortOrderInput | SortOrder
    severity?: SortOrder
    timestamp?: SortOrder
    _count?: SecurityLogCountOrderByAggregateInput
    _max?: SecurityLogMaxOrderByAggregateInput
    _min?: SecurityLogMinOrderByAggregateInput
  }

  export type SecurityLogScalarWhereWithAggregatesInput = {
    AND?: SecurityLogScalarWhereWithAggregatesInput | SecurityLogScalarWhereWithAggregatesInput[]
    OR?: SecurityLogScalarWhereWithAggregatesInput[]
    NOT?: SecurityLogScalarWhereWithAggregatesInput | SecurityLogScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"SecurityLog"> | string
    userId?: StringNullableWithAggregatesFilter<"SecurityLog"> | string | null
    action?: StringWithAggregatesFilter<"SecurityLog"> | string
    details?: StringNullableWithAggregatesFilter<"SecurityLog"> | string | null
    ipAddress?: StringNullableWithAggregatesFilter<"SecurityLog"> | string | null
    userAgent?: StringNullableWithAggregatesFilter<"SecurityLog"> | string | null
    severity?: StringWithAggregatesFilter<"SecurityLog"> | string
    timestamp?: DateTimeWithAggregatesFilter<"SecurityLog"> | Date | string
  }

  export type IPBlacklistWhereInput = {
    AND?: IPBlacklistWhereInput | IPBlacklistWhereInput[]
    OR?: IPBlacklistWhereInput[]
    NOT?: IPBlacklistWhereInput | IPBlacklistWhereInput[]
    id?: StringFilter<"IPBlacklist"> | string
    ipAddress?: StringFilter<"IPBlacklist"> | string
    reason?: StringFilter<"IPBlacklist"> | string
    source?: StringFilter<"IPBlacklist"> | string
    details?: StringNullableFilter<"IPBlacklist"> | string | null
    expiresAt?: DateTimeNullableFilter<"IPBlacklist"> | Date | string | null
    createdAt?: DateTimeFilter<"IPBlacklist"> | Date | string
    updatedAt?: DateTimeFilter<"IPBlacklist"> | Date | string
  }

  export type IPBlacklistOrderByWithRelationInput = {
    id?: SortOrder
    ipAddress?: SortOrder
    reason?: SortOrder
    source?: SortOrder
    details?: SortOrderInput | SortOrder
    expiresAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type IPBlacklistWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    ipAddress?: string
    AND?: IPBlacklistWhereInput | IPBlacklistWhereInput[]
    OR?: IPBlacklistWhereInput[]
    NOT?: IPBlacklistWhereInput | IPBlacklistWhereInput[]
    reason?: StringFilter<"IPBlacklist"> | string
    source?: StringFilter<"IPBlacklist"> | string
    details?: StringNullableFilter<"IPBlacklist"> | string | null
    expiresAt?: DateTimeNullableFilter<"IPBlacklist"> | Date | string | null
    createdAt?: DateTimeFilter<"IPBlacklist"> | Date | string
    updatedAt?: DateTimeFilter<"IPBlacklist"> | Date | string
  }, "id" | "ipAddress">

  export type IPBlacklistOrderByWithAggregationInput = {
    id?: SortOrder
    ipAddress?: SortOrder
    reason?: SortOrder
    source?: SortOrder
    details?: SortOrderInput | SortOrder
    expiresAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: IPBlacklistCountOrderByAggregateInput
    _max?: IPBlacklistMaxOrderByAggregateInput
    _min?: IPBlacklistMinOrderByAggregateInput
  }

  export type IPBlacklistScalarWhereWithAggregatesInput = {
    AND?: IPBlacklistScalarWhereWithAggregatesInput | IPBlacklistScalarWhereWithAggregatesInput[]
    OR?: IPBlacklistScalarWhereWithAggregatesInput[]
    NOT?: IPBlacklistScalarWhereWithAggregatesInput | IPBlacklistScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"IPBlacklist"> | string
    ipAddress?: StringWithAggregatesFilter<"IPBlacklist"> | string
    reason?: StringWithAggregatesFilter<"IPBlacklist"> | string
    source?: StringWithAggregatesFilter<"IPBlacklist"> | string
    details?: StringNullableWithAggregatesFilter<"IPBlacklist"> | string | null
    expiresAt?: DateTimeNullableWithAggregatesFilter<"IPBlacklist"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"IPBlacklist"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"IPBlacklist"> | Date | string
  }

  export type UserCreateInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    phone?: string | null
    dateOfBirth?: Date | string | null
    gender?: $Enums.Gender | null
    profileImage?: string | null
    financialLevel?: $Enums.FinancialLevel
    monthlyIncome?: Decimal | DecimalJsLike | number | string | null
    monthlyExpenses?: Decimal | DecimalJsLike | number | string | null
    savingsGoal?: Decimal | DecimalJsLike | number | string | null
    subscription?: $Enums.Subscription
    subscriptionStart?: Date | string | null
    subscriptionEnd?: Date | string | null
    language?: $Enums.Language
    currency?: $Enums.Currency
    timezone?: string
    notifications?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLoginAt?: Date | string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    twoFactorEnabled?: boolean
    twoFactorSecret?: string | null
    twoFactorBackupCodes?: UserCreatetwoFactorBackupCodesInput | string[]
    twoFactorEnabledAt?: Date | string | null
    twoFactorDisabledAt?: Date | string | null
    financialTests?: FinancialTestCreateNestedManyWithoutUserInput
    marketplaceOrders?: MarketplaceOrderCreateNestedManyWithoutUserInput
    receipts?: ReceiptCreateNestedManyWithoutUserInput
    userPreferences?: UserPreferenceCreateNestedOneWithoutUserInput
    userSessions?: UserSessionCreateNestedManyWithoutUserInput
    aiInteractions?: AIInteractionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    phone?: string | null
    dateOfBirth?: Date | string | null
    gender?: $Enums.Gender | null
    profileImage?: string | null
    financialLevel?: $Enums.FinancialLevel
    monthlyIncome?: Decimal | DecimalJsLike | number | string | null
    monthlyExpenses?: Decimal | DecimalJsLike | number | string | null
    savingsGoal?: Decimal | DecimalJsLike | number | string | null
    subscription?: $Enums.Subscription
    subscriptionStart?: Date | string | null
    subscriptionEnd?: Date | string | null
    language?: $Enums.Language
    currency?: $Enums.Currency
    timezone?: string
    notifications?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLoginAt?: Date | string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    twoFactorEnabled?: boolean
    twoFactorSecret?: string | null
    twoFactorBackupCodes?: UserCreatetwoFactorBackupCodesInput | string[]
    twoFactorEnabledAt?: Date | string | null
    twoFactorDisabledAt?: Date | string | null
    financialTests?: FinancialTestUncheckedCreateNestedManyWithoutUserInput
    marketplaceOrders?: MarketplaceOrderUncheckedCreateNestedManyWithoutUserInput
    receipts?: ReceiptUncheckedCreateNestedManyWithoutUserInput
    userPreferences?: UserPreferenceUncheckedCreateNestedOneWithoutUserInput
    userSessions?: UserSessionUncheckedCreateNestedManyWithoutUserInput
    aiInteractions?: AIInteractionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | $Enums.Gender | null
    profileImage?: NullableStringFieldUpdateOperationsInput | string | null
    financialLevel?: EnumFinancialLevelFieldUpdateOperationsInput | $Enums.FinancialLevel
    monthlyIncome?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    monthlyExpenses?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    savingsGoal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    subscription?: EnumSubscriptionFieldUpdateOperationsInput | $Enums.Subscription
    subscriptionStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    subscriptionEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    language?: EnumLanguageFieldUpdateOperationsInput | $Enums.Language
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    timezone?: StringFieldUpdateOperationsInput | string
    notifications?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    twoFactorEnabled?: BoolFieldUpdateOperationsInput | boolean
    twoFactorSecret?: NullableStringFieldUpdateOperationsInput | string | null
    twoFactorBackupCodes?: UserUpdatetwoFactorBackupCodesInput | string[]
    twoFactorEnabledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    twoFactorDisabledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    financialTests?: FinancialTestUpdateManyWithoutUserNestedInput
    marketplaceOrders?: MarketplaceOrderUpdateManyWithoutUserNestedInput
    receipts?: ReceiptUpdateManyWithoutUserNestedInput
    userPreferences?: UserPreferenceUpdateOneWithoutUserNestedInput
    userSessions?: UserSessionUpdateManyWithoutUserNestedInput
    aiInteractions?: AIInteractionUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | $Enums.Gender | null
    profileImage?: NullableStringFieldUpdateOperationsInput | string | null
    financialLevel?: EnumFinancialLevelFieldUpdateOperationsInput | $Enums.FinancialLevel
    monthlyIncome?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    monthlyExpenses?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    savingsGoal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    subscription?: EnumSubscriptionFieldUpdateOperationsInput | $Enums.Subscription
    subscriptionStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    subscriptionEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    language?: EnumLanguageFieldUpdateOperationsInput | $Enums.Language
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    timezone?: StringFieldUpdateOperationsInput | string
    notifications?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    twoFactorEnabled?: BoolFieldUpdateOperationsInput | boolean
    twoFactorSecret?: NullableStringFieldUpdateOperationsInput | string | null
    twoFactorBackupCodes?: UserUpdatetwoFactorBackupCodesInput | string[]
    twoFactorEnabledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    twoFactorDisabledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    financialTests?: FinancialTestUncheckedUpdateManyWithoutUserNestedInput
    marketplaceOrders?: MarketplaceOrderUncheckedUpdateManyWithoutUserNestedInput
    receipts?: ReceiptUncheckedUpdateManyWithoutUserNestedInput
    userPreferences?: UserPreferenceUncheckedUpdateOneWithoutUserNestedInput
    userSessions?: UserSessionUncheckedUpdateManyWithoutUserNestedInput
    aiInteractions?: AIInteractionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateManyInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    phone?: string | null
    dateOfBirth?: Date | string | null
    gender?: $Enums.Gender | null
    profileImage?: string | null
    financialLevel?: $Enums.FinancialLevel
    monthlyIncome?: Decimal | DecimalJsLike | number | string | null
    monthlyExpenses?: Decimal | DecimalJsLike | number | string | null
    savingsGoal?: Decimal | DecimalJsLike | number | string | null
    subscription?: $Enums.Subscription
    subscriptionStart?: Date | string | null
    subscriptionEnd?: Date | string | null
    language?: $Enums.Language
    currency?: $Enums.Currency
    timezone?: string
    notifications?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLoginAt?: Date | string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    twoFactorEnabled?: boolean
    twoFactorSecret?: string | null
    twoFactorBackupCodes?: UserCreatetwoFactorBackupCodesInput | string[]
    twoFactorEnabledAt?: Date | string | null
    twoFactorDisabledAt?: Date | string | null
  }

  export type UserUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | $Enums.Gender | null
    profileImage?: NullableStringFieldUpdateOperationsInput | string | null
    financialLevel?: EnumFinancialLevelFieldUpdateOperationsInput | $Enums.FinancialLevel
    monthlyIncome?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    monthlyExpenses?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    savingsGoal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    subscription?: EnumSubscriptionFieldUpdateOperationsInput | $Enums.Subscription
    subscriptionStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    subscriptionEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    language?: EnumLanguageFieldUpdateOperationsInput | $Enums.Language
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    timezone?: StringFieldUpdateOperationsInput | string
    notifications?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    twoFactorEnabled?: BoolFieldUpdateOperationsInput | boolean
    twoFactorSecret?: NullableStringFieldUpdateOperationsInput | string | null
    twoFactorBackupCodes?: UserUpdatetwoFactorBackupCodesInput | string[]
    twoFactorEnabledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    twoFactorDisabledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UserUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | $Enums.Gender | null
    profileImage?: NullableStringFieldUpdateOperationsInput | string | null
    financialLevel?: EnumFinancialLevelFieldUpdateOperationsInput | $Enums.FinancialLevel
    monthlyIncome?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    monthlyExpenses?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    savingsGoal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    subscription?: EnumSubscriptionFieldUpdateOperationsInput | $Enums.Subscription
    subscriptionStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    subscriptionEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    language?: EnumLanguageFieldUpdateOperationsInput | $Enums.Language
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    timezone?: StringFieldUpdateOperationsInput | string
    notifications?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    twoFactorEnabled?: BoolFieldUpdateOperationsInput | boolean
    twoFactorSecret?: NullableStringFieldUpdateOperationsInput | string | null
    twoFactorBackupCodes?: UserUpdatetwoFactorBackupCodesInput | string[]
    twoFactorEnabledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    twoFactorDisabledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UserSessionCreateInput = {
    id?: string
    token: string
    refreshToken: string
    deviceInfo?: NullableJsonNullValueInput | InputJsonValue
    ipAddress?: string | null
    userAgent?: string | null
    isActive?: boolean
    expiresAt: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutUserSessionsInput
  }

  export type UserSessionUncheckedCreateInput = {
    id?: string
    userId: string
    token: string
    refreshToken: string
    deviceInfo?: NullableJsonNullValueInput | InputJsonValue
    ipAddress?: string | null
    userAgent?: string | null
    isActive?: boolean
    expiresAt: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserSessionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    refreshToken?: StringFieldUpdateOperationsInput | string
    deviceInfo?: NullableJsonNullValueInput | InputJsonValue
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutUserSessionsNestedInput
  }

  export type UserSessionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    refreshToken?: StringFieldUpdateOperationsInput | string
    deviceInfo?: NullableJsonNullValueInput | InputJsonValue
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserSessionCreateManyInput = {
    id?: string
    userId: string
    token: string
    refreshToken: string
    deviceInfo?: NullableJsonNullValueInput | InputJsonValue
    ipAddress?: string | null
    userAgent?: string | null
    isActive?: boolean
    expiresAt: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserSessionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    refreshToken?: StringFieldUpdateOperationsInput | string
    deviceInfo?: NullableJsonNullValueInput | InputJsonValue
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserSessionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    refreshToken?: StringFieldUpdateOperationsInput | string
    deviceInfo?: NullableJsonNullValueInput | InputJsonValue
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserPreferenceCreateInput = {
    id?: string
    theme?: $Enums.Theme
    pushNotifications?: boolean
    emailNotifications?: boolean
    smsNotifications?: boolean
    weeklyReports?: boolean
    monthlyReports?: boolean
    aiRecommendations?: boolean
    locationServices?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutUserPreferencesInput
  }

  export type UserPreferenceUncheckedCreateInput = {
    id?: string
    userId: string
    theme?: $Enums.Theme
    pushNotifications?: boolean
    emailNotifications?: boolean
    smsNotifications?: boolean
    weeklyReports?: boolean
    monthlyReports?: boolean
    aiRecommendations?: boolean
    locationServices?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserPreferenceUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    theme?: EnumThemeFieldUpdateOperationsInput | $Enums.Theme
    pushNotifications?: BoolFieldUpdateOperationsInput | boolean
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    smsNotifications?: BoolFieldUpdateOperationsInput | boolean
    weeklyReports?: BoolFieldUpdateOperationsInput | boolean
    monthlyReports?: BoolFieldUpdateOperationsInput | boolean
    aiRecommendations?: BoolFieldUpdateOperationsInput | boolean
    locationServices?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutUserPreferencesNestedInput
  }

  export type UserPreferenceUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    theme?: EnumThemeFieldUpdateOperationsInput | $Enums.Theme
    pushNotifications?: BoolFieldUpdateOperationsInput | boolean
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    smsNotifications?: BoolFieldUpdateOperationsInput | boolean
    weeklyReports?: BoolFieldUpdateOperationsInput | boolean
    monthlyReports?: BoolFieldUpdateOperationsInput | boolean
    aiRecommendations?: BoolFieldUpdateOperationsInput | boolean
    locationServices?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserPreferenceCreateManyInput = {
    id?: string
    userId: string
    theme?: $Enums.Theme
    pushNotifications?: boolean
    emailNotifications?: boolean
    smsNotifications?: boolean
    weeklyReports?: boolean
    monthlyReports?: boolean
    aiRecommendations?: boolean
    locationServices?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserPreferenceUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    theme?: EnumThemeFieldUpdateOperationsInput | $Enums.Theme
    pushNotifications?: BoolFieldUpdateOperationsInput | boolean
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    smsNotifications?: BoolFieldUpdateOperationsInput | boolean
    weeklyReports?: BoolFieldUpdateOperationsInput | boolean
    monthlyReports?: BoolFieldUpdateOperationsInput | boolean
    aiRecommendations?: BoolFieldUpdateOperationsInput | boolean
    locationServices?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserPreferenceUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    theme?: EnumThemeFieldUpdateOperationsInput | $Enums.Theme
    pushNotifications?: BoolFieldUpdateOperationsInput | boolean
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    smsNotifications?: BoolFieldUpdateOperationsInput | boolean
    weeklyReports?: BoolFieldUpdateOperationsInput | boolean
    monthlyReports?: BoolFieldUpdateOperationsInput | boolean
    aiRecommendations?: BoolFieldUpdateOperationsInput | boolean
    locationServices?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReceiptCreateInput = {
    id?: string
    imageUrl?: string | null
    merchantName: string
    amount: Decimal | DecimalJsLike | number | string
    currency?: $Enums.Currency
    transactionDate: Date | string
    category: $Enums.ReceiptCategory
    subcategory?: string | null
    paymentMethod?: $Enums.PaymentMethod | null
    location?: string | null
    notes?: string | null
    ocrConfidence?: number | null
    ocrRawText?: string | null
    ocrProcessed?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutReceiptsInput
  }

  export type ReceiptUncheckedCreateInput = {
    id?: string
    userId: string
    imageUrl?: string | null
    merchantName: string
    amount: Decimal | DecimalJsLike | number | string
    currency?: $Enums.Currency
    transactionDate: Date | string
    category: $Enums.ReceiptCategory
    subcategory?: string | null
    paymentMethod?: $Enums.PaymentMethod | null
    location?: string | null
    notes?: string | null
    ocrConfidence?: number | null
    ocrRawText?: string | null
    ocrProcessed?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReceiptUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    merchantName?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    transactionDate?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: EnumReceiptCategoryFieldUpdateOperationsInput | $Enums.ReceiptCategory
    subcategory?: NullableStringFieldUpdateOperationsInput | string | null
    paymentMethod?: NullableEnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    ocrConfidence?: NullableFloatFieldUpdateOperationsInput | number | null
    ocrRawText?: NullableStringFieldUpdateOperationsInput | string | null
    ocrProcessed?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutReceiptsNestedInput
  }

  export type ReceiptUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    merchantName?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    transactionDate?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: EnumReceiptCategoryFieldUpdateOperationsInput | $Enums.ReceiptCategory
    subcategory?: NullableStringFieldUpdateOperationsInput | string | null
    paymentMethod?: NullableEnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    ocrConfidence?: NullableFloatFieldUpdateOperationsInput | number | null
    ocrRawText?: NullableStringFieldUpdateOperationsInput | string | null
    ocrProcessed?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReceiptCreateManyInput = {
    id?: string
    userId: string
    imageUrl?: string | null
    merchantName: string
    amount: Decimal | DecimalJsLike | number | string
    currency?: $Enums.Currency
    transactionDate: Date | string
    category: $Enums.ReceiptCategory
    subcategory?: string | null
    paymentMethod?: $Enums.PaymentMethod | null
    location?: string | null
    notes?: string | null
    ocrConfidence?: number | null
    ocrRawText?: string | null
    ocrProcessed?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReceiptUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    merchantName?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    transactionDate?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: EnumReceiptCategoryFieldUpdateOperationsInput | $Enums.ReceiptCategory
    subcategory?: NullableStringFieldUpdateOperationsInput | string | null
    paymentMethod?: NullableEnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    ocrConfidence?: NullableFloatFieldUpdateOperationsInput | number | null
    ocrRawText?: NullableStringFieldUpdateOperationsInput | string | null
    ocrProcessed?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReceiptUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    merchantName?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    transactionDate?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: EnumReceiptCategoryFieldUpdateOperationsInput | $Enums.ReceiptCategory
    subcategory?: NullableStringFieldUpdateOperationsInput | string | null
    paymentMethod?: NullableEnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    ocrConfidence?: NullableFloatFieldUpdateOperationsInput | number | null
    ocrRawText?: NullableStringFieldUpdateOperationsInput | string | null
    ocrProcessed?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FinancialTestCreateInput = {
    id?: string
    testVersion?: string
    questions: JsonNullValueInput | InputJsonValue
    score: number
    level: $Enums.FinancialLevel
    recommendations?: NullableJsonNullValueInput | InputJsonValue
    completedAt?: Date | string
    user: UserCreateNestedOneWithoutFinancialTestsInput
  }

  export type FinancialTestUncheckedCreateInput = {
    id?: string
    userId: string
    testVersion?: string
    questions: JsonNullValueInput | InputJsonValue
    score: number
    level: $Enums.FinancialLevel
    recommendations?: NullableJsonNullValueInput | InputJsonValue
    completedAt?: Date | string
  }

  export type FinancialTestUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    testVersion?: StringFieldUpdateOperationsInput | string
    questions?: JsonNullValueInput | InputJsonValue
    score?: IntFieldUpdateOperationsInput | number
    level?: EnumFinancialLevelFieldUpdateOperationsInput | $Enums.FinancialLevel
    recommendations?: NullableJsonNullValueInput | InputJsonValue
    completedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutFinancialTestsNestedInput
  }

  export type FinancialTestUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    testVersion?: StringFieldUpdateOperationsInput | string
    questions?: JsonNullValueInput | InputJsonValue
    score?: IntFieldUpdateOperationsInput | number
    level?: EnumFinancialLevelFieldUpdateOperationsInput | $Enums.FinancialLevel
    recommendations?: NullableJsonNullValueInput | InputJsonValue
    completedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FinancialTestCreateManyInput = {
    id?: string
    userId: string
    testVersion?: string
    questions: JsonNullValueInput | InputJsonValue
    score: number
    level: $Enums.FinancialLevel
    recommendations?: NullableJsonNullValueInput | InputJsonValue
    completedAt?: Date | string
  }

  export type FinancialTestUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    testVersion?: StringFieldUpdateOperationsInput | string
    questions?: JsonNullValueInput | InputJsonValue
    score?: IntFieldUpdateOperationsInput | number
    level?: EnumFinancialLevelFieldUpdateOperationsInput | $Enums.FinancialLevel
    recommendations?: NullableJsonNullValueInput | InputJsonValue
    completedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FinancialTestUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    testVersion?: StringFieldUpdateOperationsInput | string
    questions?: JsonNullValueInput | InputJsonValue
    score?: IntFieldUpdateOperationsInput | number
    level?: EnumFinancialLevelFieldUpdateOperationsInput | $Enums.FinancialLevel
    recommendations?: NullableJsonNullValueInput | InputJsonValue
    completedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AIInteractionCreateInput = {
    id?: string
    sessionId?: string | null
    interactionType: $Enums.AIInteractionType
    userMessage: string
    aiResponse: string
    model?: string
    tokensUsed?: number | null
    responseTime?: number | null
    isFinancialQuery?: boolean
    queryCategory?: $Enums.FinancialQueryCategory | null
    disclaimerShown?: boolean
    disclaimerVersion?: string
    userRating?: number | null
    userFeedback?: string | null
    ipAddress?: string | null
    userAgent?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutAiInteractionsInput
  }

  export type AIInteractionUncheckedCreateInput = {
    id?: string
    userId: string
    sessionId?: string | null
    interactionType: $Enums.AIInteractionType
    userMessage: string
    aiResponse: string
    model?: string
    tokensUsed?: number | null
    responseTime?: number | null
    isFinancialQuery?: boolean
    queryCategory?: $Enums.FinancialQueryCategory | null
    disclaimerShown?: boolean
    disclaimerVersion?: string
    userRating?: number | null
    userFeedback?: string | null
    ipAddress?: string | null
    userAgent?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AIInteractionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
    interactionType?: EnumAIInteractionTypeFieldUpdateOperationsInput | $Enums.AIInteractionType
    userMessage?: StringFieldUpdateOperationsInput | string
    aiResponse?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    tokensUsed?: NullableIntFieldUpdateOperationsInput | number | null
    responseTime?: NullableIntFieldUpdateOperationsInput | number | null
    isFinancialQuery?: BoolFieldUpdateOperationsInput | boolean
    queryCategory?: NullableEnumFinancialQueryCategoryFieldUpdateOperationsInput | $Enums.FinancialQueryCategory | null
    disclaimerShown?: BoolFieldUpdateOperationsInput | boolean
    disclaimerVersion?: StringFieldUpdateOperationsInput | string
    userRating?: NullableIntFieldUpdateOperationsInput | number | null
    userFeedback?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutAiInteractionsNestedInput
  }

  export type AIInteractionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
    interactionType?: EnumAIInteractionTypeFieldUpdateOperationsInput | $Enums.AIInteractionType
    userMessage?: StringFieldUpdateOperationsInput | string
    aiResponse?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    tokensUsed?: NullableIntFieldUpdateOperationsInput | number | null
    responseTime?: NullableIntFieldUpdateOperationsInput | number | null
    isFinancialQuery?: BoolFieldUpdateOperationsInput | boolean
    queryCategory?: NullableEnumFinancialQueryCategoryFieldUpdateOperationsInput | $Enums.FinancialQueryCategory | null
    disclaimerShown?: BoolFieldUpdateOperationsInput | boolean
    disclaimerVersion?: StringFieldUpdateOperationsInput | string
    userRating?: NullableIntFieldUpdateOperationsInput | number | null
    userFeedback?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AIInteractionCreateManyInput = {
    id?: string
    userId: string
    sessionId?: string | null
    interactionType: $Enums.AIInteractionType
    userMessage: string
    aiResponse: string
    model?: string
    tokensUsed?: number | null
    responseTime?: number | null
    isFinancialQuery?: boolean
    queryCategory?: $Enums.FinancialQueryCategory | null
    disclaimerShown?: boolean
    disclaimerVersion?: string
    userRating?: number | null
    userFeedback?: string | null
    ipAddress?: string | null
    userAgent?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AIInteractionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
    interactionType?: EnumAIInteractionTypeFieldUpdateOperationsInput | $Enums.AIInteractionType
    userMessage?: StringFieldUpdateOperationsInput | string
    aiResponse?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    tokensUsed?: NullableIntFieldUpdateOperationsInput | number | null
    responseTime?: NullableIntFieldUpdateOperationsInput | number | null
    isFinancialQuery?: BoolFieldUpdateOperationsInput | boolean
    queryCategory?: NullableEnumFinancialQueryCategoryFieldUpdateOperationsInput | $Enums.FinancialQueryCategory | null
    disclaimerShown?: BoolFieldUpdateOperationsInput | boolean
    disclaimerVersion?: StringFieldUpdateOperationsInput | string
    userRating?: NullableIntFieldUpdateOperationsInput | number | null
    userFeedback?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AIInteractionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
    interactionType?: EnumAIInteractionTypeFieldUpdateOperationsInput | $Enums.AIInteractionType
    userMessage?: StringFieldUpdateOperationsInput | string
    aiResponse?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    tokensUsed?: NullableIntFieldUpdateOperationsInput | number | null
    responseTime?: NullableIntFieldUpdateOperationsInput | number | null
    isFinancialQuery?: BoolFieldUpdateOperationsInput | boolean
    queryCategory?: NullableEnumFinancialQueryCategoryFieldUpdateOperationsInput | $Enums.FinancialQueryCategory | null
    disclaimerShown?: BoolFieldUpdateOperationsInput | boolean
    disclaimerVersion?: StringFieldUpdateOperationsInput | string
    userRating?: NullableIntFieldUpdateOperationsInput | number | null
    userFeedback?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MarketplaceProductCreateInput = {
    id?: string
    name: string
    description: string
    shortDescription?: string | null
    category: $Enums.ProductCategory
    subcategory?: string | null
    price: Decimal | DecimalJsLike | number | string
    currency?: $Enums.Currency
    originalPrice?: Decimal | DecimalJsLike | number | string | null
    discount?: number | null
    providerId: string
    providerName: string
    providerLogo?: string | null
    images?: MarketplaceProductCreateimagesInput | string[]
    videoUrl?: string | null
    duration?: string | null
    level?: $Enums.FinancialLevel | null
    features?: MarketplaceProductCreatefeaturesInput | string[]
    requirements?: string | null
    whatYouWillLearn?: string | null
    averageRating?: number
    totalReviews?: number
    totalSales?: number
    isActive?: boolean
    isFeatured?: boolean
    isPopular?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    orders?: MarketplaceOrderCreateNestedManyWithoutProductInput
    reviews?: ProductReviewCreateNestedManyWithoutProductInput
  }

  export type MarketplaceProductUncheckedCreateInput = {
    id?: string
    name: string
    description: string
    shortDescription?: string | null
    category: $Enums.ProductCategory
    subcategory?: string | null
    price: Decimal | DecimalJsLike | number | string
    currency?: $Enums.Currency
    originalPrice?: Decimal | DecimalJsLike | number | string | null
    discount?: number | null
    providerId: string
    providerName: string
    providerLogo?: string | null
    images?: MarketplaceProductCreateimagesInput | string[]
    videoUrl?: string | null
    duration?: string | null
    level?: $Enums.FinancialLevel | null
    features?: MarketplaceProductCreatefeaturesInput | string[]
    requirements?: string | null
    whatYouWillLearn?: string | null
    averageRating?: number
    totalReviews?: number
    totalSales?: number
    isActive?: boolean
    isFeatured?: boolean
    isPopular?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    orders?: MarketplaceOrderUncheckedCreateNestedManyWithoutProductInput
    reviews?: ProductReviewUncheckedCreateNestedManyWithoutProductInput
  }

  export type MarketplaceProductUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    category?: EnumProductCategoryFieldUpdateOperationsInput | $Enums.ProductCategory
    subcategory?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    originalPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    discount?: NullableIntFieldUpdateOperationsInput | number | null
    providerId?: StringFieldUpdateOperationsInput | string
    providerName?: StringFieldUpdateOperationsInput | string
    providerLogo?: NullableStringFieldUpdateOperationsInput | string | null
    images?: MarketplaceProductUpdateimagesInput | string[]
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: NullableStringFieldUpdateOperationsInput | string | null
    level?: NullableEnumFinancialLevelFieldUpdateOperationsInput | $Enums.FinancialLevel | null
    features?: MarketplaceProductUpdatefeaturesInput | string[]
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    whatYouWillLearn?: NullableStringFieldUpdateOperationsInput | string | null
    averageRating?: FloatFieldUpdateOperationsInput | number
    totalReviews?: IntFieldUpdateOperationsInput | number
    totalSales?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isPopular?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    orders?: MarketplaceOrderUpdateManyWithoutProductNestedInput
    reviews?: ProductReviewUpdateManyWithoutProductNestedInput
  }

  export type MarketplaceProductUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    category?: EnumProductCategoryFieldUpdateOperationsInput | $Enums.ProductCategory
    subcategory?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    originalPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    discount?: NullableIntFieldUpdateOperationsInput | number | null
    providerId?: StringFieldUpdateOperationsInput | string
    providerName?: StringFieldUpdateOperationsInput | string
    providerLogo?: NullableStringFieldUpdateOperationsInput | string | null
    images?: MarketplaceProductUpdateimagesInput | string[]
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: NullableStringFieldUpdateOperationsInput | string | null
    level?: NullableEnumFinancialLevelFieldUpdateOperationsInput | $Enums.FinancialLevel | null
    features?: MarketplaceProductUpdatefeaturesInput | string[]
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    whatYouWillLearn?: NullableStringFieldUpdateOperationsInput | string | null
    averageRating?: FloatFieldUpdateOperationsInput | number
    totalReviews?: IntFieldUpdateOperationsInput | number
    totalSales?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isPopular?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    orders?: MarketplaceOrderUncheckedUpdateManyWithoutProductNestedInput
    reviews?: ProductReviewUncheckedUpdateManyWithoutProductNestedInput
  }

  export type MarketplaceProductCreateManyInput = {
    id?: string
    name: string
    description: string
    shortDescription?: string | null
    category: $Enums.ProductCategory
    subcategory?: string | null
    price: Decimal | DecimalJsLike | number | string
    currency?: $Enums.Currency
    originalPrice?: Decimal | DecimalJsLike | number | string | null
    discount?: number | null
    providerId: string
    providerName: string
    providerLogo?: string | null
    images?: MarketplaceProductCreateimagesInput | string[]
    videoUrl?: string | null
    duration?: string | null
    level?: $Enums.FinancialLevel | null
    features?: MarketplaceProductCreatefeaturesInput | string[]
    requirements?: string | null
    whatYouWillLearn?: string | null
    averageRating?: number
    totalReviews?: number
    totalSales?: number
    isActive?: boolean
    isFeatured?: boolean
    isPopular?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type MarketplaceProductUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    category?: EnumProductCategoryFieldUpdateOperationsInput | $Enums.ProductCategory
    subcategory?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    originalPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    discount?: NullableIntFieldUpdateOperationsInput | number | null
    providerId?: StringFieldUpdateOperationsInput | string
    providerName?: StringFieldUpdateOperationsInput | string
    providerLogo?: NullableStringFieldUpdateOperationsInput | string | null
    images?: MarketplaceProductUpdateimagesInput | string[]
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: NullableStringFieldUpdateOperationsInput | string | null
    level?: NullableEnumFinancialLevelFieldUpdateOperationsInput | $Enums.FinancialLevel | null
    features?: MarketplaceProductUpdatefeaturesInput | string[]
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    whatYouWillLearn?: NullableStringFieldUpdateOperationsInput | string | null
    averageRating?: FloatFieldUpdateOperationsInput | number
    totalReviews?: IntFieldUpdateOperationsInput | number
    totalSales?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isPopular?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MarketplaceProductUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    category?: EnumProductCategoryFieldUpdateOperationsInput | $Enums.ProductCategory
    subcategory?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    originalPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    discount?: NullableIntFieldUpdateOperationsInput | number | null
    providerId?: StringFieldUpdateOperationsInput | string
    providerName?: StringFieldUpdateOperationsInput | string
    providerLogo?: NullableStringFieldUpdateOperationsInput | string | null
    images?: MarketplaceProductUpdateimagesInput | string[]
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: NullableStringFieldUpdateOperationsInput | string | null
    level?: NullableEnumFinancialLevelFieldUpdateOperationsInput | $Enums.FinancialLevel | null
    features?: MarketplaceProductUpdatefeaturesInput | string[]
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    whatYouWillLearn?: NullableStringFieldUpdateOperationsInput | string | null
    averageRating?: FloatFieldUpdateOperationsInput | number
    totalReviews?: IntFieldUpdateOperationsInput | number
    totalSales?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isPopular?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MarketplaceOrderCreateInput = {
    id?: string
    orderNumber: string
    amount: Decimal | DecimalJsLike | number | string
    currency?: $Enums.Currency
    status?: $Enums.OrderStatus
    paymentMethod: $Enums.PaymentMethod
    paymentGateway: $Enums.PaymentGateway
    transactionId?: string | null
    paymentStatus?: $Enums.PaymentStatus
    commission?: Decimal | DecimalJsLike | number | string | null
    commissionRate?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    paidAt?: Date | string | null
    product: MarketplaceProductCreateNestedOneWithoutOrdersInput
    user: UserCreateNestedOneWithoutMarketplaceOrdersInput
  }

  export type MarketplaceOrderUncheckedCreateInput = {
    id?: string
    userId: string
    productId: string
    orderNumber: string
    amount: Decimal | DecimalJsLike | number | string
    currency?: $Enums.Currency
    status?: $Enums.OrderStatus
    paymentMethod: $Enums.PaymentMethod
    paymentGateway: $Enums.PaymentGateway
    transactionId?: string | null
    paymentStatus?: $Enums.PaymentStatus
    commission?: Decimal | DecimalJsLike | number | string | null
    commissionRate?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    paidAt?: Date | string | null
  }

  export type MarketplaceOrderUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    paymentMethod?: EnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod
    paymentGateway?: EnumPaymentGatewayFieldUpdateOperationsInput | $Enums.PaymentGateway
    transactionId?: NullableStringFieldUpdateOperationsInput | string | null
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    commission?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    commissionRate?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    product?: MarketplaceProductUpdateOneRequiredWithoutOrdersNestedInput
    user?: UserUpdateOneRequiredWithoutMarketplaceOrdersNestedInput
  }

  export type MarketplaceOrderUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    paymentMethod?: EnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod
    paymentGateway?: EnumPaymentGatewayFieldUpdateOperationsInput | $Enums.PaymentGateway
    transactionId?: NullableStringFieldUpdateOperationsInput | string | null
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    commission?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    commissionRate?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MarketplaceOrderCreateManyInput = {
    id?: string
    userId: string
    productId: string
    orderNumber: string
    amount: Decimal | DecimalJsLike | number | string
    currency?: $Enums.Currency
    status?: $Enums.OrderStatus
    paymentMethod: $Enums.PaymentMethod
    paymentGateway: $Enums.PaymentGateway
    transactionId?: string | null
    paymentStatus?: $Enums.PaymentStatus
    commission?: Decimal | DecimalJsLike | number | string | null
    commissionRate?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    paidAt?: Date | string | null
  }

  export type MarketplaceOrderUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    paymentMethod?: EnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod
    paymentGateway?: EnumPaymentGatewayFieldUpdateOperationsInput | $Enums.PaymentGateway
    transactionId?: NullableStringFieldUpdateOperationsInput | string | null
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    commission?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    commissionRate?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MarketplaceOrderUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    paymentMethod?: EnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod
    paymentGateway?: EnumPaymentGatewayFieldUpdateOperationsInput | $Enums.PaymentGateway
    transactionId?: NullableStringFieldUpdateOperationsInput | string | null
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    commission?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    commissionRate?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ProductReviewCreateInput = {
    id?: string
    userId: string
    rating: number
    title?: string | null
    comment?: string | null
    isVerified?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    product: MarketplaceProductCreateNestedOneWithoutReviewsInput
  }

  export type ProductReviewUncheckedCreateInput = {
    id?: string
    productId: string
    userId: string
    rating: number
    title?: string | null
    comment?: string | null
    isVerified?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductReviewUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: MarketplaceProductUpdateOneRequiredWithoutReviewsNestedInput
  }

  export type ProductReviewUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductReviewCreateManyInput = {
    id?: string
    productId: string
    userId: string
    rating: number
    title?: string | null
    comment?: string | null
    isVerified?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductReviewUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductReviewUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AuditLogCreateInput = {
    id?: string
    userId: string
    action: string
    resource: string
    resourceId?: string | null
    details?: string | null
    ipAddress?: string | null
    userAgent?: string | null
    success: boolean
    errorMessage?: string | null
    timestamp?: Date | string
  }

  export type AuditLogUncheckedCreateInput = {
    id?: string
    userId: string
    action: string
    resource: string
    resourceId?: string | null
    details?: string | null
    ipAddress?: string | null
    userAgent?: string | null
    success: boolean
    errorMessage?: string | null
    timestamp?: Date | string
  }

  export type AuditLogUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    resource?: StringFieldUpdateOperationsInput | string
    resourceId?: NullableStringFieldUpdateOperationsInput | string | null
    details?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    success?: BoolFieldUpdateOperationsInput | boolean
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AuditLogUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    resource?: StringFieldUpdateOperationsInput | string
    resourceId?: NullableStringFieldUpdateOperationsInput | string | null
    details?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    success?: BoolFieldUpdateOperationsInput | boolean
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AuditLogCreateManyInput = {
    id?: string
    userId: string
    action: string
    resource: string
    resourceId?: string | null
    details?: string | null
    ipAddress?: string | null
    userAgent?: string | null
    success: boolean
    errorMessage?: string | null
    timestamp?: Date | string
  }

  export type AuditLogUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    resource?: StringFieldUpdateOperationsInput | string
    resourceId?: NullableStringFieldUpdateOperationsInput | string | null
    details?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    success?: BoolFieldUpdateOperationsInput | boolean
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AuditLogUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    resource?: StringFieldUpdateOperationsInput | string
    resourceId?: NullableStringFieldUpdateOperationsInput | string | null
    details?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    success?: BoolFieldUpdateOperationsInput | boolean
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SecurityLogCreateInput = {
    id?: string
    userId?: string | null
    action: string
    details?: string | null
    ipAddress?: string | null
    userAgent?: string | null
    severity: string
    timestamp?: Date | string
  }

  export type SecurityLogUncheckedCreateInput = {
    id?: string
    userId?: string | null
    action: string
    details?: string | null
    ipAddress?: string | null
    userAgent?: string | null
    severity: string
    timestamp?: Date | string
  }

  export type SecurityLogUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    action?: StringFieldUpdateOperationsInput | string
    details?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    severity?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SecurityLogUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    action?: StringFieldUpdateOperationsInput | string
    details?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    severity?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SecurityLogCreateManyInput = {
    id?: string
    userId?: string | null
    action: string
    details?: string | null
    ipAddress?: string | null
    userAgent?: string | null
    severity: string
    timestamp?: Date | string
  }

  export type SecurityLogUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    action?: StringFieldUpdateOperationsInput | string
    details?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    severity?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SecurityLogUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    action?: StringFieldUpdateOperationsInput | string
    details?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    severity?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type IPBlacklistCreateInput = {
    id?: string
    ipAddress: string
    reason: string
    source: string
    details?: string | null
    expiresAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type IPBlacklistUncheckedCreateInput = {
    id?: string
    ipAddress: string
    reason: string
    source: string
    details?: string | null
    expiresAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type IPBlacklistUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    ipAddress?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    source?: StringFieldUpdateOperationsInput | string
    details?: NullableStringFieldUpdateOperationsInput | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type IPBlacklistUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    ipAddress?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    source?: StringFieldUpdateOperationsInput | string
    details?: NullableStringFieldUpdateOperationsInput | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type IPBlacklistCreateManyInput = {
    id?: string
    ipAddress: string
    reason: string
    source: string
    details?: string | null
    expiresAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type IPBlacklistUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    ipAddress?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    source?: StringFieldUpdateOperationsInput | string
    details?: NullableStringFieldUpdateOperationsInput | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type IPBlacklistUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    ipAddress?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    source?: StringFieldUpdateOperationsInput | string
    details?: NullableStringFieldUpdateOperationsInput | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type EnumGenderNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.Gender | EnumGenderFieldRefInput<$PrismaModel> | null
    in?: $Enums.Gender[] | ListEnumGenderFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.Gender[] | ListEnumGenderFieldRefInput<$PrismaModel> | null
    not?: NestedEnumGenderNullableFilter<$PrismaModel> | $Enums.Gender | null
  }

  export type EnumFinancialLevelFilter<$PrismaModel = never> = {
    equals?: $Enums.FinancialLevel | EnumFinancialLevelFieldRefInput<$PrismaModel>
    in?: $Enums.FinancialLevel[] | ListEnumFinancialLevelFieldRefInput<$PrismaModel>
    notIn?: $Enums.FinancialLevel[] | ListEnumFinancialLevelFieldRefInput<$PrismaModel>
    not?: NestedEnumFinancialLevelFilter<$PrismaModel> | $Enums.FinancialLevel
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type EnumSubscriptionFilter<$PrismaModel = never> = {
    equals?: $Enums.Subscription | EnumSubscriptionFieldRefInput<$PrismaModel>
    in?: $Enums.Subscription[] | ListEnumSubscriptionFieldRefInput<$PrismaModel>
    notIn?: $Enums.Subscription[] | ListEnumSubscriptionFieldRefInput<$PrismaModel>
    not?: NestedEnumSubscriptionFilter<$PrismaModel> | $Enums.Subscription
  }

  export type EnumLanguageFilter<$PrismaModel = never> = {
    equals?: $Enums.Language | EnumLanguageFieldRefInput<$PrismaModel>
    in?: $Enums.Language[] | ListEnumLanguageFieldRefInput<$PrismaModel>
    notIn?: $Enums.Language[] | ListEnumLanguageFieldRefInput<$PrismaModel>
    not?: NestedEnumLanguageFilter<$PrismaModel> | $Enums.Language
  }

  export type EnumCurrencyFilter<$PrismaModel = never> = {
    equals?: $Enums.Currency | EnumCurrencyFieldRefInput<$PrismaModel>
    in?: $Enums.Currency[] | ListEnumCurrencyFieldRefInput<$PrismaModel>
    notIn?: $Enums.Currency[] | ListEnumCurrencyFieldRefInput<$PrismaModel>
    not?: NestedEnumCurrencyFilter<$PrismaModel> | $Enums.Currency
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type StringNullableListFilter<$PrismaModel = never> = {
    equals?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    has?: string | StringFieldRefInput<$PrismaModel> | null
    hasEvery?: string[] | ListStringFieldRefInput<$PrismaModel>
    hasSome?: string[] | ListStringFieldRefInput<$PrismaModel>
    isEmpty?: boolean
  }

  export type FinancialTestListRelationFilter = {
    every?: FinancialTestWhereInput
    some?: FinancialTestWhereInput
    none?: FinancialTestWhereInput
  }

  export type MarketplaceOrderListRelationFilter = {
    every?: MarketplaceOrderWhereInput
    some?: MarketplaceOrderWhereInput
    none?: MarketplaceOrderWhereInput
  }

  export type ReceiptListRelationFilter = {
    every?: ReceiptWhereInput
    some?: ReceiptWhereInput
    none?: ReceiptWhereInput
  }

  export type UserPreferenceNullableRelationFilter = {
    is?: UserPreferenceWhereInput | null
    isNot?: UserPreferenceWhereInput | null
  }

  export type UserSessionListRelationFilter = {
    every?: UserSessionWhereInput
    some?: UserSessionWhereInput
    none?: UserSessionWhereInput
  }

  export type AIInteractionListRelationFilter = {
    every?: AIInteractionWhereInput
    some?: AIInteractionWhereInput
    none?: AIInteractionWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type FinancialTestOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MarketplaceOrderOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ReceiptOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserSessionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AIInteractionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    phone?: SortOrder
    dateOfBirth?: SortOrder
    gender?: SortOrder
    profileImage?: SortOrder
    financialLevel?: SortOrder
    monthlyIncome?: SortOrder
    monthlyExpenses?: SortOrder
    savingsGoal?: SortOrder
    subscription?: SortOrder
    subscriptionStart?: SortOrder
    subscriptionEnd?: SortOrder
    language?: SortOrder
    currency?: SortOrder
    timezone?: SortOrder
    notifications?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    lastLoginAt?: SortOrder
    emailVerified?: SortOrder
    emailVerifiedAt?: SortOrder
    twoFactorEnabled?: SortOrder
    twoFactorSecret?: SortOrder
    twoFactorBackupCodes?: SortOrder
    twoFactorEnabledAt?: SortOrder
    twoFactorDisabledAt?: SortOrder
  }

  export type UserAvgOrderByAggregateInput = {
    monthlyIncome?: SortOrder
    monthlyExpenses?: SortOrder
    savingsGoal?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    phone?: SortOrder
    dateOfBirth?: SortOrder
    gender?: SortOrder
    profileImage?: SortOrder
    financialLevel?: SortOrder
    monthlyIncome?: SortOrder
    monthlyExpenses?: SortOrder
    savingsGoal?: SortOrder
    subscription?: SortOrder
    subscriptionStart?: SortOrder
    subscriptionEnd?: SortOrder
    language?: SortOrder
    currency?: SortOrder
    timezone?: SortOrder
    notifications?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    lastLoginAt?: SortOrder
    emailVerified?: SortOrder
    emailVerifiedAt?: SortOrder
    twoFactorEnabled?: SortOrder
    twoFactorSecret?: SortOrder
    twoFactorEnabledAt?: SortOrder
    twoFactorDisabledAt?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    phone?: SortOrder
    dateOfBirth?: SortOrder
    gender?: SortOrder
    profileImage?: SortOrder
    financialLevel?: SortOrder
    monthlyIncome?: SortOrder
    monthlyExpenses?: SortOrder
    savingsGoal?: SortOrder
    subscription?: SortOrder
    subscriptionStart?: SortOrder
    subscriptionEnd?: SortOrder
    language?: SortOrder
    currency?: SortOrder
    timezone?: SortOrder
    notifications?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    lastLoginAt?: SortOrder
    emailVerified?: SortOrder
    emailVerifiedAt?: SortOrder
    twoFactorEnabled?: SortOrder
    twoFactorSecret?: SortOrder
    twoFactorEnabledAt?: SortOrder
    twoFactorDisabledAt?: SortOrder
  }

  export type UserSumOrderByAggregateInput = {
    monthlyIncome?: SortOrder
    monthlyExpenses?: SortOrder
    savingsGoal?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type EnumGenderNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Gender | EnumGenderFieldRefInput<$PrismaModel> | null
    in?: $Enums.Gender[] | ListEnumGenderFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.Gender[] | ListEnumGenderFieldRefInput<$PrismaModel> | null
    not?: NestedEnumGenderNullableWithAggregatesFilter<$PrismaModel> | $Enums.Gender | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumGenderNullableFilter<$PrismaModel>
    _max?: NestedEnumGenderNullableFilter<$PrismaModel>
  }

  export type EnumFinancialLevelWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.FinancialLevel | EnumFinancialLevelFieldRefInput<$PrismaModel>
    in?: $Enums.FinancialLevel[] | ListEnumFinancialLevelFieldRefInput<$PrismaModel>
    notIn?: $Enums.FinancialLevel[] | ListEnumFinancialLevelFieldRefInput<$PrismaModel>
    not?: NestedEnumFinancialLevelWithAggregatesFilter<$PrismaModel> | $Enums.FinancialLevel
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumFinancialLevelFilter<$PrismaModel>
    _max?: NestedEnumFinancialLevelFilter<$PrismaModel>
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type EnumSubscriptionWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Subscription | EnumSubscriptionFieldRefInput<$PrismaModel>
    in?: $Enums.Subscription[] | ListEnumSubscriptionFieldRefInput<$PrismaModel>
    notIn?: $Enums.Subscription[] | ListEnumSubscriptionFieldRefInput<$PrismaModel>
    not?: NestedEnumSubscriptionWithAggregatesFilter<$PrismaModel> | $Enums.Subscription
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumSubscriptionFilter<$PrismaModel>
    _max?: NestedEnumSubscriptionFilter<$PrismaModel>
  }

  export type EnumLanguageWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Language | EnumLanguageFieldRefInput<$PrismaModel>
    in?: $Enums.Language[] | ListEnumLanguageFieldRefInput<$PrismaModel>
    notIn?: $Enums.Language[] | ListEnumLanguageFieldRefInput<$PrismaModel>
    not?: NestedEnumLanguageWithAggregatesFilter<$PrismaModel> | $Enums.Language
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumLanguageFilter<$PrismaModel>
    _max?: NestedEnumLanguageFilter<$PrismaModel>
  }

  export type EnumCurrencyWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Currency | EnumCurrencyFieldRefInput<$PrismaModel>
    in?: $Enums.Currency[] | ListEnumCurrencyFieldRefInput<$PrismaModel>
    notIn?: $Enums.Currency[] | ListEnumCurrencyFieldRefInput<$PrismaModel>
    not?: NestedEnumCurrencyWithAggregatesFilter<$PrismaModel> | $Enums.Currency
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCurrencyFilter<$PrismaModel>
    _max?: NestedEnumCurrencyFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }
  export type JsonNullableFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type UserRelationFilter = {
    is?: UserWhereInput
    isNot?: UserWhereInput
  }

  export type UserSessionCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    token?: SortOrder
    refreshToken?: SortOrder
    deviceInfo?: SortOrder
    ipAddress?: SortOrder
    userAgent?: SortOrder
    isActive?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserSessionMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    token?: SortOrder
    refreshToken?: SortOrder
    ipAddress?: SortOrder
    userAgent?: SortOrder
    isActive?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserSessionMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    token?: SortOrder
    refreshToken?: SortOrder
    ipAddress?: SortOrder
    userAgent?: SortOrder
    isActive?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type EnumThemeFilter<$PrismaModel = never> = {
    equals?: $Enums.Theme | EnumThemeFieldRefInput<$PrismaModel>
    in?: $Enums.Theme[] | ListEnumThemeFieldRefInput<$PrismaModel>
    notIn?: $Enums.Theme[] | ListEnumThemeFieldRefInput<$PrismaModel>
    not?: NestedEnumThemeFilter<$PrismaModel> | $Enums.Theme
  }

  export type UserPreferenceCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    theme?: SortOrder
    pushNotifications?: SortOrder
    emailNotifications?: SortOrder
    smsNotifications?: SortOrder
    weeklyReports?: SortOrder
    monthlyReports?: SortOrder
    aiRecommendations?: SortOrder
    locationServices?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserPreferenceMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    theme?: SortOrder
    pushNotifications?: SortOrder
    emailNotifications?: SortOrder
    smsNotifications?: SortOrder
    weeklyReports?: SortOrder
    monthlyReports?: SortOrder
    aiRecommendations?: SortOrder
    locationServices?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserPreferenceMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    theme?: SortOrder
    pushNotifications?: SortOrder
    emailNotifications?: SortOrder
    smsNotifications?: SortOrder
    weeklyReports?: SortOrder
    monthlyReports?: SortOrder
    aiRecommendations?: SortOrder
    locationServices?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EnumThemeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Theme | EnumThemeFieldRefInput<$PrismaModel>
    in?: $Enums.Theme[] | ListEnumThemeFieldRefInput<$PrismaModel>
    notIn?: $Enums.Theme[] | ListEnumThemeFieldRefInput<$PrismaModel>
    not?: NestedEnumThemeWithAggregatesFilter<$PrismaModel> | $Enums.Theme
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumThemeFilter<$PrismaModel>
    _max?: NestedEnumThemeFilter<$PrismaModel>
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type EnumReceiptCategoryFilter<$PrismaModel = never> = {
    equals?: $Enums.ReceiptCategory | EnumReceiptCategoryFieldRefInput<$PrismaModel>
    in?: $Enums.ReceiptCategory[] | ListEnumReceiptCategoryFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReceiptCategory[] | ListEnumReceiptCategoryFieldRefInput<$PrismaModel>
    not?: NestedEnumReceiptCategoryFilter<$PrismaModel> | $Enums.ReceiptCategory
  }

  export type EnumPaymentMethodNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentMethod | EnumPaymentMethodFieldRefInput<$PrismaModel> | null
    in?: $Enums.PaymentMethod[] | ListEnumPaymentMethodFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.PaymentMethod[] | ListEnumPaymentMethodFieldRefInput<$PrismaModel> | null
    not?: NestedEnumPaymentMethodNullableFilter<$PrismaModel> | $Enums.PaymentMethod | null
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type ReceiptCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    imageUrl?: SortOrder
    merchantName?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    transactionDate?: SortOrder
    category?: SortOrder
    subcategory?: SortOrder
    paymentMethod?: SortOrder
    location?: SortOrder
    notes?: SortOrder
    ocrConfidence?: SortOrder
    ocrRawText?: SortOrder
    ocrProcessed?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ReceiptAvgOrderByAggregateInput = {
    amount?: SortOrder
    ocrConfidence?: SortOrder
  }

  export type ReceiptMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    imageUrl?: SortOrder
    merchantName?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    transactionDate?: SortOrder
    category?: SortOrder
    subcategory?: SortOrder
    paymentMethod?: SortOrder
    location?: SortOrder
    notes?: SortOrder
    ocrConfidence?: SortOrder
    ocrRawText?: SortOrder
    ocrProcessed?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ReceiptMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    imageUrl?: SortOrder
    merchantName?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    transactionDate?: SortOrder
    category?: SortOrder
    subcategory?: SortOrder
    paymentMethod?: SortOrder
    location?: SortOrder
    notes?: SortOrder
    ocrConfidence?: SortOrder
    ocrRawText?: SortOrder
    ocrProcessed?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ReceiptSumOrderByAggregateInput = {
    amount?: SortOrder
    ocrConfidence?: SortOrder
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type EnumReceiptCategoryWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ReceiptCategory | EnumReceiptCategoryFieldRefInput<$PrismaModel>
    in?: $Enums.ReceiptCategory[] | ListEnumReceiptCategoryFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReceiptCategory[] | ListEnumReceiptCategoryFieldRefInput<$PrismaModel>
    not?: NestedEnumReceiptCategoryWithAggregatesFilter<$PrismaModel> | $Enums.ReceiptCategory
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumReceiptCategoryFilter<$PrismaModel>
    _max?: NestedEnumReceiptCategoryFilter<$PrismaModel>
  }

  export type EnumPaymentMethodNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentMethod | EnumPaymentMethodFieldRefInput<$PrismaModel> | null
    in?: $Enums.PaymentMethod[] | ListEnumPaymentMethodFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.PaymentMethod[] | ListEnumPaymentMethodFieldRefInput<$PrismaModel> | null
    not?: NestedEnumPaymentMethodNullableWithAggregatesFilter<$PrismaModel> | $Enums.PaymentMethod | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumPaymentMethodNullableFilter<$PrismaModel>
    _max?: NestedEnumPaymentMethodNullableFilter<$PrismaModel>
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }
  export type JsonFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonFilterBase<$PrismaModel>>, 'path'>>

  export type JsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type FinancialTestCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    testVersion?: SortOrder
    questions?: SortOrder
    score?: SortOrder
    level?: SortOrder
    recommendations?: SortOrder
    completedAt?: SortOrder
  }

  export type FinancialTestAvgOrderByAggregateInput = {
    score?: SortOrder
  }

  export type FinancialTestMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    testVersion?: SortOrder
    score?: SortOrder
    level?: SortOrder
    completedAt?: SortOrder
  }

  export type FinancialTestMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    testVersion?: SortOrder
    score?: SortOrder
    level?: SortOrder
    completedAt?: SortOrder
  }

  export type FinancialTestSumOrderByAggregateInput = {
    score?: SortOrder
  }
  export type JsonWithAggregatesFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedJsonFilter<$PrismaModel>
    _max?: NestedJsonFilter<$PrismaModel>
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type EnumAIInteractionTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.AIInteractionType | EnumAIInteractionTypeFieldRefInput<$PrismaModel>
    in?: $Enums.AIInteractionType[] | ListEnumAIInteractionTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.AIInteractionType[] | ListEnumAIInteractionTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumAIInteractionTypeFilter<$PrismaModel> | $Enums.AIInteractionType
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type EnumFinancialQueryCategoryNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.FinancialQueryCategory | EnumFinancialQueryCategoryFieldRefInput<$PrismaModel> | null
    in?: $Enums.FinancialQueryCategory[] | ListEnumFinancialQueryCategoryFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.FinancialQueryCategory[] | ListEnumFinancialQueryCategoryFieldRefInput<$PrismaModel> | null
    not?: NestedEnumFinancialQueryCategoryNullableFilter<$PrismaModel> | $Enums.FinancialQueryCategory | null
  }

  export type AIInteractionCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    sessionId?: SortOrder
    interactionType?: SortOrder
    userMessage?: SortOrder
    aiResponse?: SortOrder
    model?: SortOrder
    tokensUsed?: SortOrder
    responseTime?: SortOrder
    isFinancialQuery?: SortOrder
    queryCategory?: SortOrder
    disclaimerShown?: SortOrder
    disclaimerVersion?: SortOrder
    userRating?: SortOrder
    userFeedback?: SortOrder
    ipAddress?: SortOrder
    userAgent?: SortOrder
    metadata?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AIInteractionAvgOrderByAggregateInput = {
    tokensUsed?: SortOrder
    responseTime?: SortOrder
    userRating?: SortOrder
  }

  export type AIInteractionMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    sessionId?: SortOrder
    interactionType?: SortOrder
    userMessage?: SortOrder
    aiResponse?: SortOrder
    model?: SortOrder
    tokensUsed?: SortOrder
    responseTime?: SortOrder
    isFinancialQuery?: SortOrder
    queryCategory?: SortOrder
    disclaimerShown?: SortOrder
    disclaimerVersion?: SortOrder
    userRating?: SortOrder
    userFeedback?: SortOrder
    ipAddress?: SortOrder
    userAgent?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AIInteractionMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    sessionId?: SortOrder
    interactionType?: SortOrder
    userMessage?: SortOrder
    aiResponse?: SortOrder
    model?: SortOrder
    tokensUsed?: SortOrder
    responseTime?: SortOrder
    isFinancialQuery?: SortOrder
    queryCategory?: SortOrder
    disclaimerShown?: SortOrder
    disclaimerVersion?: SortOrder
    userRating?: SortOrder
    userFeedback?: SortOrder
    ipAddress?: SortOrder
    userAgent?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AIInteractionSumOrderByAggregateInput = {
    tokensUsed?: SortOrder
    responseTime?: SortOrder
    userRating?: SortOrder
  }

  export type EnumAIInteractionTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AIInteractionType | EnumAIInteractionTypeFieldRefInput<$PrismaModel>
    in?: $Enums.AIInteractionType[] | ListEnumAIInteractionTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.AIInteractionType[] | ListEnumAIInteractionTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumAIInteractionTypeWithAggregatesFilter<$PrismaModel> | $Enums.AIInteractionType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAIInteractionTypeFilter<$PrismaModel>
    _max?: NestedEnumAIInteractionTypeFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type EnumFinancialQueryCategoryNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.FinancialQueryCategory | EnumFinancialQueryCategoryFieldRefInput<$PrismaModel> | null
    in?: $Enums.FinancialQueryCategory[] | ListEnumFinancialQueryCategoryFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.FinancialQueryCategory[] | ListEnumFinancialQueryCategoryFieldRefInput<$PrismaModel> | null
    not?: NestedEnumFinancialQueryCategoryNullableWithAggregatesFilter<$PrismaModel> | $Enums.FinancialQueryCategory | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumFinancialQueryCategoryNullableFilter<$PrismaModel>
    _max?: NestedEnumFinancialQueryCategoryNullableFilter<$PrismaModel>
  }

  export type EnumProductCategoryFilter<$PrismaModel = never> = {
    equals?: $Enums.ProductCategory | EnumProductCategoryFieldRefInput<$PrismaModel>
    in?: $Enums.ProductCategory[] | ListEnumProductCategoryFieldRefInput<$PrismaModel>
    notIn?: $Enums.ProductCategory[] | ListEnumProductCategoryFieldRefInput<$PrismaModel>
    not?: NestedEnumProductCategoryFilter<$PrismaModel> | $Enums.ProductCategory
  }

  export type EnumFinancialLevelNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.FinancialLevel | EnumFinancialLevelFieldRefInput<$PrismaModel> | null
    in?: $Enums.FinancialLevel[] | ListEnumFinancialLevelFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.FinancialLevel[] | ListEnumFinancialLevelFieldRefInput<$PrismaModel> | null
    not?: NestedEnumFinancialLevelNullableFilter<$PrismaModel> | $Enums.FinancialLevel | null
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type ProductReviewListRelationFilter = {
    every?: ProductReviewWhereInput
    some?: ProductReviewWhereInput
    none?: ProductReviewWhereInput
  }

  export type ProductReviewOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MarketplaceProductCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    shortDescription?: SortOrder
    category?: SortOrder
    subcategory?: SortOrder
    price?: SortOrder
    currency?: SortOrder
    originalPrice?: SortOrder
    discount?: SortOrder
    providerId?: SortOrder
    providerName?: SortOrder
    providerLogo?: SortOrder
    images?: SortOrder
    videoUrl?: SortOrder
    duration?: SortOrder
    level?: SortOrder
    features?: SortOrder
    requirements?: SortOrder
    whatYouWillLearn?: SortOrder
    averageRating?: SortOrder
    totalReviews?: SortOrder
    totalSales?: SortOrder
    isActive?: SortOrder
    isFeatured?: SortOrder
    isPopular?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type MarketplaceProductAvgOrderByAggregateInput = {
    price?: SortOrder
    originalPrice?: SortOrder
    discount?: SortOrder
    averageRating?: SortOrder
    totalReviews?: SortOrder
    totalSales?: SortOrder
  }

  export type MarketplaceProductMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    shortDescription?: SortOrder
    category?: SortOrder
    subcategory?: SortOrder
    price?: SortOrder
    currency?: SortOrder
    originalPrice?: SortOrder
    discount?: SortOrder
    providerId?: SortOrder
    providerName?: SortOrder
    providerLogo?: SortOrder
    videoUrl?: SortOrder
    duration?: SortOrder
    level?: SortOrder
    requirements?: SortOrder
    whatYouWillLearn?: SortOrder
    averageRating?: SortOrder
    totalReviews?: SortOrder
    totalSales?: SortOrder
    isActive?: SortOrder
    isFeatured?: SortOrder
    isPopular?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type MarketplaceProductMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    shortDescription?: SortOrder
    category?: SortOrder
    subcategory?: SortOrder
    price?: SortOrder
    currency?: SortOrder
    originalPrice?: SortOrder
    discount?: SortOrder
    providerId?: SortOrder
    providerName?: SortOrder
    providerLogo?: SortOrder
    videoUrl?: SortOrder
    duration?: SortOrder
    level?: SortOrder
    requirements?: SortOrder
    whatYouWillLearn?: SortOrder
    averageRating?: SortOrder
    totalReviews?: SortOrder
    totalSales?: SortOrder
    isActive?: SortOrder
    isFeatured?: SortOrder
    isPopular?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type MarketplaceProductSumOrderByAggregateInput = {
    price?: SortOrder
    originalPrice?: SortOrder
    discount?: SortOrder
    averageRating?: SortOrder
    totalReviews?: SortOrder
    totalSales?: SortOrder
  }

  export type EnumProductCategoryWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ProductCategory | EnumProductCategoryFieldRefInput<$PrismaModel>
    in?: $Enums.ProductCategory[] | ListEnumProductCategoryFieldRefInput<$PrismaModel>
    notIn?: $Enums.ProductCategory[] | ListEnumProductCategoryFieldRefInput<$PrismaModel>
    not?: NestedEnumProductCategoryWithAggregatesFilter<$PrismaModel> | $Enums.ProductCategory
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumProductCategoryFilter<$PrismaModel>
    _max?: NestedEnumProductCategoryFilter<$PrismaModel>
  }

  export type EnumFinancialLevelNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.FinancialLevel | EnumFinancialLevelFieldRefInput<$PrismaModel> | null
    in?: $Enums.FinancialLevel[] | ListEnumFinancialLevelFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.FinancialLevel[] | ListEnumFinancialLevelFieldRefInput<$PrismaModel> | null
    not?: NestedEnumFinancialLevelNullableWithAggregatesFilter<$PrismaModel> | $Enums.FinancialLevel | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumFinancialLevelNullableFilter<$PrismaModel>
    _max?: NestedEnumFinancialLevelNullableFilter<$PrismaModel>
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type EnumOrderStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderStatus | EnumOrderStatusFieldRefInput<$PrismaModel>
    in?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderStatusFilter<$PrismaModel> | $Enums.OrderStatus
  }

  export type EnumPaymentMethodFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentMethod | EnumPaymentMethodFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentMethod[] | ListEnumPaymentMethodFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentMethod[] | ListEnumPaymentMethodFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentMethodFilter<$PrismaModel> | $Enums.PaymentMethod
  }

  export type EnumPaymentGatewayFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentGateway | EnumPaymentGatewayFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentGateway[] | ListEnumPaymentGatewayFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentGateway[] | ListEnumPaymentGatewayFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentGatewayFilter<$PrismaModel> | $Enums.PaymentGateway
  }

  export type EnumPaymentStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentStatus | EnumPaymentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentStatusFilter<$PrismaModel> | $Enums.PaymentStatus
  }

  export type MarketplaceProductRelationFilter = {
    is?: MarketplaceProductWhereInput
    isNot?: MarketplaceProductWhereInput
  }

  export type MarketplaceOrderCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    productId?: SortOrder
    orderNumber?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    status?: SortOrder
    paymentMethod?: SortOrder
    paymentGateway?: SortOrder
    transactionId?: SortOrder
    paymentStatus?: SortOrder
    commission?: SortOrder
    commissionRate?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    paidAt?: SortOrder
  }

  export type MarketplaceOrderAvgOrderByAggregateInput = {
    amount?: SortOrder
    commission?: SortOrder
    commissionRate?: SortOrder
  }

  export type MarketplaceOrderMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    productId?: SortOrder
    orderNumber?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    status?: SortOrder
    paymentMethod?: SortOrder
    paymentGateway?: SortOrder
    transactionId?: SortOrder
    paymentStatus?: SortOrder
    commission?: SortOrder
    commissionRate?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    paidAt?: SortOrder
  }

  export type MarketplaceOrderMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    productId?: SortOrder
    orderNumber?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    status?: SortOrder
    paymentMethod?: SortOrder
    paymentGateway?: SortOrder
    transactionId?: SortOrder
    paymentStatus?: SortOrder
    commission?: SortOrder
    commissionRate?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    paidAt?: SortOrder
  }

  export type MarketplaceOrderSumOrderByAggregateInput = {
    amount?: SortOrder
    commission?: SortOrder
    commissionRate?: SortOrder
  }

  export type EnumOrderStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderStatus | EnumOrderStatusFieldRefInput<$PrismaModel>
    in?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderStatusWithAggregatesFilter<$PrismaModel> | $Enums.OrderStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumOrderStatusFilter<$PrismaModel>
    _max?: NestedEnumOrderStatusFilter<$PrismaModel>
  }

  export type EnumPaymentMethodWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentMethod | EnumPaymentMethodFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentMethod[] | ListEnumPaymentMethodFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentMethod[] | ListEnumPaymentMethodFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentMethodWithAggregatesFilter<$PrismaModel> | $Enums.PaymentMethod
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPaymentMethodFilter<$PrismaModel>
    _max?: NestedEnumPaymentMethodFilter<$PrismaModel>
  }

  export type EnumPaymentGatewayWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentGateway | EnumPaymentGatewayFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentGateway[] | ListEnumPaymentGatewayFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentGateway[] | ListEnumPaymentGatewayFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentGatewayWithAggregatesFilter<$PrismaModel> | $Enums.PaymentGateway
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPaymentGatewayFilter<$PrismaModel>
    _max?: NestedEnumPaymentGatewayFilter<$PrismaModel>
  }

  export type EnumPaymentStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentStatus | EnumPaymentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentStatusWithAggregatesFilter<$PrismaModel> | $Enums.PaymentStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPaymentStatusFilter<$PrismaModel>
    _max?: NestedEnumPaymentStatusFilter<$PrismaModel>
  }

  export type ProductReviewCountOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    userId?: SortOrder
    rating?: SortOrder
    title?: SortOrder
    comment?: SortOrder
    isVerified?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProductReviewAvgOrderByAggregateInput = {
    rating?: SortOrder
  }

  export type ProductReviewMaxOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    userId?: SortOrder
    rating?: SortOrder
    title?: SortOrder
    comment?: SortOrder
    isVerified?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProductReviewMinOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    userId?: SortOrder
    rating?: SortOrder
    title?: SortOrder
    comment?: SortOrder
    isVerified?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProductReviewSumOrderByAggregateInput = {
    rating?: SortOrder
  }

  export type AuditLogCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    action?: SortOrder
    resource?: SortOrder
    resourceId?: SortOrder
    details?: SortOrder
    ipAddress?: SortOrder
    userAgent?: SortOrder
    success?: SortOrder
    errorMessage?: SortOrder
    timestamp?: SortOrder
  }

  export type AuditLogMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    action?: SortOrder
    resource?: SortOrder
    resourceId?: SortOrder
    details?: SortOrder
    ipAddress?: SortOrder
    userAgent?: SortOrder
    success?: SortOrder
    errorMessage?: SortOrder
    timestamp?: SortOrder
  }

  export type AuditLogMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    action?: SortOrder
    resource?: SortOrder
    resourceId?: SortOrder
    details?: SortOrder
    ipAddress?: SortOrder
    userAgent?: SortOrder
    success?: SortOrder
    errorMessage?: SortOrder
    timestamp?: SortOrder
  }

  export type SecurityLogCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    action?: SortOrder
    details?: SortOrder
    ipAddress?: SortOrder
    userAgent?: SortOrder
    severity?: SortOrder
    timestamp?: SortOrder
  }

  export type SecurityLogMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    action?: SortOrder
    details?: SortOrder
    ipAddress?: SortOrder
    userAgent?: SortOrder
    severity?: SortOrder
    timestamp?: SortOrder
  }

  export type SecurityLogMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    action?: SortOrder
    details?: SortOrder
    ipAddress?: SortOrder
    userAgent?: SortOrder
    severity?: SortOrder
    timestamp?: SortOrder
  }

  export type IPBlacklistCountOrderByAggregateInput = {
    id?: SortOrder
    ipAddress?: SortOrder
    reason?: SortOrder
    source?: SortOrder
    details?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type IPBlacklistMaxOrderByAggregateInput = {
    id?: SortOrder
    ipAddress?: SortOrder
    reason?: SortOrder
    source?: SortOrder
    details?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type IPBlacklistMinOrderByAggregateInput = {
    id?: SortOrder
    ipAddress?: SortOrder
    reason?: SortOrder
    source?: SortOrder
    details?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserCreatetwoFactorBackupCodesInput = {
    set: string[]
  }

  export type FinancialTestCreateNestedManyWithoutUserInput = {
    create?: XOR<FinancialTestCreateWithoutUserInput, FinancialTestUncheckedCreateWithoutUserInput> | FinancialTestCreateWithoutUserInput[] | FinancialTestUncheckedCreateWithoutUserInput[]
    connectOrCreate?: FinancialTestCreateOrConnectWithoutUserInput | FinancialTestCreateOrConnectWithoutUserInput[]
    createMany?: FinancialTestCreateManyUserInputEnvelope
    connect?: FinancialTestWhereUniqueInput | FinancialTestWhereUniqueInput[]
  }

  export type MarketplaceOrderCreateNestedManyWithoutUserInput = {
    create?: XOR<MarketplaceOrderCreateWithoutUserInput, MarketplaceOrderUncheckedCreateWithoutUserInput> | MarketplaceOrderCreateWithoutUserInput[] | MarketplaceOrderUncheckedCreateWithoutUserInput[]
    connectOrCreate?: MarketplaceOrderCreateOrConnectWithoutUserInput | MarketplaceOrderCreateOrConnectWithoutUserInput[]
    createMany?: MarketplaceOrderCreateManyUserInputEnvelope
    connect?: MarketplaceOrderWhereUniqueInput | MarketplaceOrderWhereUniqueInput[]
  }

  export type ReceiptCreateNestedManyWithoutUserInput = {
    create?: XOR<ReceiptCreateWithoutUserInput, ReceiptUncheckedCreateWithoutUserInput> | ReceiptCreateWithoutUserInput[] | ReceiptUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ReceiptCreateOrConnectWithoutUserInput | ReceiptCreateOrConnectWithoutUserInput[]
    createMany?: ReceiptCreateManyUserInputEnvelope
    connect?: ReceiptWhereUniqueInput | ReceiptWhereUniqueInput[]
  }

  export type UserPreferenceCreateNestedOneWithoutUserInput = {
    create?: XOR<UserPreferenceCreateWithoutUserInput, UserPreferenceUncheckedCreateWithoutUserInput>
    connectOrCreate?: UserPreferenceCreateOrConnectWithoutUserInput
    connect?: UserPreferenceWhereUniqueInput
  }

  export type UserSessionCreateNestedManyWithoutUserInput = {
    create?: XOR<UserSessionCreateWithoutUserInput, UserSessionUncheckedCreateWithoutUserInput> | UserSessionCreateWithoutUserInput[] | UserSessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserSessionCreateOrConnectWithoutUserInput | UserSessionCreateOrConnectWithoutUserInput[]
    createMany?: UserSessionCreateManyUserInputEnvelope
    connect?: UserSessionWhereUniqueInput | UserSessionWhereUniqueInput[]
  }

  export type AIInteractionCreateNestedManyWithoutUserInput = {
    create?: XOR<AIInteractionCreateWithoutUserInput, AIInteractionUncheckedCreateWithoutUserInput> | AIInteractionCreateWithoutUserInput[] | AIInteractionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AIInteractionCreateOrConnectWithoutUserInput | AIInteractionCreateOrConnectWithoutUserInput[]
    createMany?: AIInteractionCreateManyUserInputEnvelope
    connect?: AIInteractionWhereUniqueInput | AIInteractionWhereUniqueInput[]
  }

  export type FinancialTestUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<FinancialTestCreateWithoutUserInput, FinancialTestUncheckedCreateWithoutUserInput> | FinancialTestCreateWithoutUserInput[] | FinancialTestUncheckedCreateWithoutUserInput[]
    connectOrCreate?: FinancialTestCreateOrConnectWithoutUserInput | FinancialTestCreateOrConnectWithoutUserInput[]
    createMany?: FinancialTestCreateManyUserInputEnvelope
    connect?: FinancialTestWhereUniqueInput | FinancialTestWhereUniqueInput[]
  }

  export type MarketplaceOrderUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<MarketplaceOrderCreateWithoutUserInput, MarketplaceOrderUncheckedCreateWithoutUserInput> | MarketplaceOrderCreateWithoutUserInput[] | MarketplaceOrderUncheckedCreateWithoutUserInput[]
    connectOrCreate?: MarketplaceOrderCreateOrConnectWithoutUserInput | MarketplaceOrderCreateOrConnectWithoutUserInput[]
    createMany?: MarketplaceOrderCreateManyUserInputEnvelope
    connect?: MarketplaceOrderWhereUniqueInput | MarketplaceOrderWhereUniqueInput[]
  }

  export type ReceiptUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<ReceiptCreateWithoutUserInput, ReceiptUncheckedCreateWithoutUserInput> | ReceiptCreateWithoutUserInput[] | ReceiptUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ReceiptCreateOrConnectWithoutUserInput | ReceiptCreateOrConnectWithoutUserInput[]
    createMany?: ReceiptCreateManyUserInputEnvelope
    connect?: ReceiptWhereUniqueInput | ReceiptWhereUniqueInput[]
  }

  export type UserPreferenceUncheckedCreateNestedOneWithoutUserInput = {
    create?: XOR<UserPreferenceCreateWithoutUserInput, UserPreferenceUncheckedCreateWithoutUserInput>
    connectOrCreate?: UserPreferenceCreateOrConnectWithoutUserInput
    connect?: UserPreferenceWhereUniqueInput
  }

  export type UserSessionUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<UserSessionCreateWithoutUserInput, UserSessionUncheckedCreateWithoutUserInput> | UserSessionCreateWithoutUserInput[] | UserSessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserSessionCreateOrConnectWithoutUserInput | UserSessionCreateOrConnectWithoutUserInput[]
    createMany?: UserSessionCreateManyUserInputEnvelope
    connect?: UserSessionWhereUniqueInput | UserSessionWhereUniqueInput[]
  }

  export type AIInteractionUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<AIInteractionCreateWithoutUserInput, AIInteractionUncheckedCreateWithoutUserInput> | AIInteractionCreateWithoutUserInput[] | AIInteractionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AIInteractionCreateOrConnectWithoutUserInput | AIInteractionCreateOrConnectWithoutUserInput[]
    createMany?: AIInteractionCreateManyUserInputEnvelope
    connect?: AIInteractionWhereUniqueInput | AIInteractionWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type NullableEnumGenderFieldUpdateOperationsInput = {
    set?: $Enums.Gender | null
  }

  export type EnumFinancialLevelFieldUpdateOperationsInput = {
    set?: $Enums.FinancialLevel
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type EnumSubscriptionFieldUpdateOperationsInput = {
    set?: $Enums.Subscription
  }

  export type EnumLanguageFieldUpdateOperationsInput = {
    set?: $Enums.Language
  }

  export type EnumCurrencyFieldUpdateOperationsInput = {
    set?: $Enums.Currency
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type UserUpdatetwoFactorBackupCodesInput = {
    set?: string[]
    push?: string | string[]
  }

  export type FinancialTestUpdateManyWithoutUserNestedInput = {
    create?: XOR<FinancialTestCreateWithoutUserInput, FinancialTestUncheckedCreateWithoutUserInput> | FinancialTestCreateWithoutUserInput[] | FinancialTestUncheckedCreateWithoutUserInput[]
    connectOrCreate?: FinancialTestCreateOrConnectWithoutUserInput | FinancialTestCreateOrConnectWithoutUserInput[]
    upsert?: FinancialTestUpsertWithWhereUniqueWithoutUserInput | FinancialTestUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: FinancialTestCreateManyUserInputEnvelope
    set?: FinancialTestWhereUniqueInput | FinancialTestWhereUniqueInput[]
    disconnect?: FinancialTestWhereUniqueInput | FinancialTestWhereUniqueInput[]
    delete?: FinancialTestWhereUniqueInput | FinancialTestWhereUniqueInput[]
    connect?: FinancialTestWhereUniqueInput | FinancialTestWhereUniqueInput[]
    update?: FinancialTestUpdateWithWhereUniqueWithoutUserInput | FinancialTestUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: FinancialTestUpdateManyWithWhereWithoutUserInput | FinancialTestUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: FinancialTestScalarWhereInput | FinancialTestScalarWhereInput[]
  }

  export type MarketplaceOrderUpdateManyWithoutUserNestedInput = {
    create?: XOR<MarketplaceOrderCreateWithoutUserInput, MarketplaceOrderUncheckedCreateWithoutUserInput> | MarketplaceOrderCreateWithoutUserInput[] | MarketplaceOrderUncheckedCreateWithoutUserInput[]
    connectOrCreate?: MarketplaceOrderCreateOrConnectWithoutUserInput | MarketplaceOrderCreateOrConnectWithoutUserInput[]
    upsert?: MarketplaceOrderUpsertWithWhereUniqueWithoutUserInput | MarketplaceOrderUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: MarketplaceOrderCreateManyUserInputEnvelope
    set?: MarketplaceOrderWhereUniqueInput | MarketplaceOrderWhereUniqueInput[]
    disconnect?: MarketplaceOrderWhereUniqueInput | MarketplaceOrderWhereUniqueInput[]
    delete?: MarketplaceOrderWhereUniqueInput | MarketplaceOrderWhereUniqueInput[]
    connect?: MarketplaceOrderWhereUniqueInput | MarketplaceOrderWhereUniqueInput[]
    update?: MarketplaceOrderUpdateWithWhereUniqueWithoutUserInput | MarketplaceOrderUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: MarketplaceOrderUpdateManyWithWhereWithoutUserInput | MarketplaceOrderUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: MarketplaceOrderScalarWhereInput | MarketplaceOrderScalarWhereInput[]
  }

  export type ReceiptUpdateManyWithoutUserNestedInput = {
    create?: XOR<ReceiptCreateWithoutUserInput, ReceiptUncheckedCreateWithoutUserInput> | ReceiptCreateWithoutUserInput[] | ReceiptUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ReceiptCreateOrConnectWithoutUserInput | ReceiptCreateOrConnectWithoutUserInput[]
    upsert?: ReceiptUpsertWithWhereUniqueWithoutUserInput | ReceiptUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: ReceiptCreateManyUserInputEnvelope
    set?: ReceiptWhereUniqueInput | ReceiptWhereUniqueInput[]
    disconnect?: ReceiptWhereUniqueInput | ReceiptWhereUniqueInput[]
    delete?: ReceiptWhereUniqueInput | ReceiptWhereUniqueInput[]
    connect?: ReceiptWhereUniqueInput | ReceiptWhereUniqueInput[]
    update?: ReceiptUpdateWithWhereUniqueWithoutUserInput | ReceiptUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: ReceiptUpdateManyWithWhereWithoutUserInput | ReceiptUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: ReceiptScalarWhereInput | ReceiptScalarWhereInput[]
  }

  export type UserPreferenceUpdateOneWithoutUserNestedInput = {
    create?: XOR<UserPreferenceCreateWithoutUserInput, UserPreferenceUncheckedCreateWithoutUserInput>
    connectOrCreate?: UserPreferenceCreateOrConnectWithoutUserInput
    upsert?: UserPreferenceUpsertWithoutUserInput
    disconnect?: UserPreferenceWhereInput | boolean
    delete?: UserPreferenceWhereInput | boolean
    connect?: UserPreferenceWhereUniqueInput
    update?: XOR<XOR<UserPreferenceUpdateToOneWithWhereWithoutUserInput, UserPreferenceUpdateWithoutUserInput>, UserPreferenceUncheckedUpdateWithoutUserInput>
  }

  export type UserSessionUpdateManyWithoutUserNestedInput = {
    create?: XOR<UserSessionCreateWithoutUserInput, UserSessionUncheckedCreateWithoutUserInput> | UserSessionCreateWithoutUserInput[] | UserSessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserSessionCreateOrConnectWithoutUserInput | UserSessionCreateOrConnectWithoutUserInput[]
    upsert?: UserSessionUpsertWithWhereUniqueWithoutUserInput | UserSessionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: UserSessionCreateManyUserInputEnvelope
    set?: UserSessionWhereUniqueInput | UserSessionWhereUniqueInput[]
    disconnect?: UserSessionWhereUniqueInput | UserSessionWhereUniqueInput[]
    delete?: UserSessionWhereUniqueInput | UserSessionWhereUniqueInput[]
    connect?: UserSessionWhereUniqueInput | UserSessionWhereUniqueInput[]
    update?: UserSessionUpdateWithWhereUniqueWithoutUserInput | UserSessionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: UserSessionUpdateManyWithWhereWithoutUserInput | UserSessionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: UserSessionScalarWhereInput | UserSessionScalarWhereInput[]
  }

  export type AIInteractionUpdateManyWithoutUserNestedInput = {
    create?: XOR<AIInteractionCreateWithoutUserInput, AIInteractionUncheckedCreateWithoutUserInput> | AIInteractionCreateWithoutUserInput[] | AIInteractionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AIInteractionCreateOrConnectWithoutUserInput | AIInteractionCreateOrConnectWithoutUserInput[]
    upsert?: AIInteractionUpsertWithWhereUniqueWithoutUserInput | AIInteractionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: AIInteractionCreateManyUserInputEnvelope
    set?: AIInteractionWhereUniqueInput | AIInteractionWhereUniqueInput[]
    disconnect?: AIInteractionWhereUniqueInput | AIInteractionWhereUniqueInput[]
    delete?: AIInteractionWhereUniqueInput | AIInteractionWhereUniqueInput[]
    connect?: AIInteractionWhereUniqueInput | AIInteractionWhereUniqueInput[]
    update?: AIInteractionUpdateWithWhereUniqueWithoutUserInput | AIInteractionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: AIInteractionUpdateManyWithWhereWithoutUserInput | AIInteractionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: AIInteractionScalarWhereInput | AIInteractionScalarWhereInput[]
  }

  export type FinancialTestUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<FinancialTestCreateWithoutUserInput, FinancialTestUncheckedCreateWithoutUserInput> | FinancialTestCreateWithoutUserInput[] | FinancialTestUncheckedCreateWithoutUserInput[]
    connectOrCreate?: FinancialTestCreateOrConnectWithoutUserInput | FinancialTestCreateOrConnectWithoutUserInput[]
    upsert?: FinancialTestUpsertWithWhereUniqueWithoutUserInput | FinancialTestUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: FinancialTestCreateManyUserInputEnvelope
    set?: FinancialTestWhereUniqueInput | FinancialTestWhereUniqueInput[]
    disconnect?: FinancialTestWhereUniqueInput | FinancialTestWhereUniqueInput[]
    delete?: FinancialTestWhereUniqueInput | FinancialTestWhereUniqueInput[]
    connect?: FinancialTestWhereUniqueInput | FinancialTestWhereUniqueInput[]
    update?: FinancialTestUpdateWithWhereUniqueWithoutUserInput | FinancialTestUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: FinancialTestUpdateManyWithWhereWithoutUserInput | FinancialTestUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: FinancialTestScalarWhereInput | FinancialTestScalarWhereInput[]
  }

  export type MarketplaceOrderUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<MarketplaceOrderCreateWithoutUserInput, MarketplaceOrderUncheckedCreateWithoutUserInput> | MarketplaceOrderCreateWithoutUserInput[] | MarketplaceOrderUncheckedCreateWithoutUserInput[]
    connectOrCreate?: MarketplaceOrderCreateOrConnectWithoutUserInput | MarketplaceOrderCreateOrConnectWithoutUserInput[]
    upsert?: MarketplaceOrderUpsertWithWhereUniqueWithoutUserInput | MarketplaceOrderUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: MarketplaceOrderCreateManyUserInputEnvelope
    set?: MarketplaceOrderWhereUniqueInput | MarketplaceOrderWhereUniqueInput[]
    disconnect?: MarketplaceOrderWhereUniqueInput | MarketplaceOrderWhereUniqueInput[]
    delete?: MarketplaceOrderWhereUniqueInput | MarketplaceOrderWhereUniqueInput[]
    connect?: MarketplaceOrderWhereUniqueInput | MarketplaceOrderWhereUniqueInput[]
    update?: MarketplaceOrderUpdateWithWhereUniqueWithoutUserInput | MarketplaceOrderUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: MarketplaceOrderUpdateManyWithWhereWithoutUserInput | MarketplaceOrderUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: MarketplaceOrderScalarWhereInput | MarketplaceOrderScalarWhereInput[]
  }

  export type ReceiptUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<ReceiptCreateWithoutUserInput, ReceiptUncheckedCreateWithoutUserInput> | ReceiptCreateWithoutUserInput[] | ReceiptUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ReceiptCreateOrConnectWithoutUserInput | ReceiptCreateOrConnectWithoutUserInput[]
    upsert?: ReceiptUpsertWithWhereUniqueWithoutUserInput | ReceiptUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: ReceiptCreateManyUserInputEnvelope
    set?: ReceiptWhereUniqueInput | ReceiptWhereUniqueInput[]
    disconnect?: ReceiptWhereUniqueInput | ReceiptWhereUniqueInput[]
    delete?: ReceiptWhereUniqueInput | ReceiptWhereUniqueInput[]
    connect?: ReceiptWhereUniqueInput | ReceiptWhereUniqueInput[]
    update?: ReceiptUpdateWithWhereUniqueWithoutUserInput | ReceiptUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: ReceiptUpdateManyWithWhereWithoutUserInput | ReceiptUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: ReceiptScalarWhereInput | ReceiptScalarWhereInput[]
  }

  export type UserPreferenceUncheckedUpdateOneWithoutUserNestedInput = {
    create?: XOR<UserPreferenceCreateWithoutUserInput, UserPreferenceUncheckedCreateWithoutUserInput>
    connectOrCreate?: UserPreferenceCreateOrConnectWithoutUserInput
    upsert?: UserPreferenceUpsertWithoutUserInput
    disconnect?: UserPreferenceWhereInput | boolean
    delete?: UserPreferenceWhereInput | boolean
    connect?: UserPreferenceWhereUniqueInput
    update?: XOR<XOR<UserPreferenceUpdateToOneWithWhereWithoutUserInput, UserPreferenceUpdateWithoutUserInput>, UserPreferenceUncheckedUpdateWithoutUserInput>
  }

  export type UserSessionUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<UserSessionCreateWithoutUserInput, UserSessionUncheckedCreateWithoutUserInput> | UserSessionCreateWithoutUserInput[] | UserSessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserSessionCreateOrConnectWithoutUserInput | UserSessionCreateOrConnectWithoutUserInput[]
    upsert?: UserSessionUpsertWithWhereUniqueWithoutUserInput | UserSessionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: UserSessionCreateManyUserInputEnvelope
    set?: UserSessionWhereUniqueInput | UserSessionWhereUniqueInput[]
    disconnect?: UserSessionWhereUniqueInput | UserSessionWhereUniqueInput[]
    delete?: UserSessionWhereUniqueInput | UserSessionWhereUniqueInput[]
    connect?: UserSessionWhereUniqueInput | UserSessionWhereUniqueInput[]
    update?: UserSessionUpdateWithWhereUniqueWithoutUserInput | UserSessionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: UserSessionUpdateManyWithWhereWithoutUserInput | UserSessionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: UserSessionScalarWhereInput | UserSessionScalarWhereInput[]
  }

  export type AIInteractionUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<AIInteractionCreateWithoutUserInput, AIInteractionUncheckedCreateWithoutUserInput> | AIInteractionCreateWithoutUserInput[] | AIInteractionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AIInteractionCreateOrConnectWithoutUserInput | AIInteractionCreateOrConnectWithoutUserInput[]
    upsert?: AIInteractionUpsertWithWhereUniqueWithoutUserInput | AIInteractionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: AIInteractionCreateManyUserInputEnvelope
    set?: AIInteractionWhereUniqueInput | AIInteractionWhereUniqueInput[]
    disconnect?: AIInteractionWhereUniqueInput | AIInteractionWhereUniqueInput[]
    delete?: AIInteractionWhereUniqueInput | AIInteractionWhereUniqueInput[]
    connect?: AIInteractionWhereUniqueInput | AIInteractionWhereUniqueInput[]
    update?: AIInteractionUpdateWithWhereUniqueWithoutUserInput | AIInteractionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: AIInteractionUpdateManyWithWhereWithoutUserInput | AIInteractionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: AIInteractionScalarWhereInput | AIInteractionScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutUserSessionsInput = {
    create?: XOR<UserCreateWithoutUserSessionsInput, UserUncheckedCreateWithoutUserSessionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutUserSessionsInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutUserSessionsNestedInput = {
    create?: XOR<UserCreateWithoutUserSessionsInput, UserUncheckedCreateWithoutUserSessionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutUserSessionsInput
    upsert?: UserUpsertWithoutUserSessionsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutUserSessionsInput, UserUpdateWithoutUserSessionsInput>, UserUncheckedUpdateWithoutUserSessionsInput>
  }

  export type UserCreateNestedOneWithoutUserPreferencesInput = {
    create?: XOR<UserCreateWithoutUserPreferencesInput, UserUncheckedCreateWithoutUserPreferencesInput>
    connectOrCreate?: UserCreateOrConnectWithoutUserPreferencesInput
    connect?: UserWhereUniqueInput
  }

  export type EnumThemeFieldUpdateOperationsInput = {
    set?: $Enums.Theme
  }

  export type UserUpdateOneRequiredWithoutUserPreferencesNestedInput = {
    create?: XOR<UserCreateWithoutUserPreferencesInput, UserUncheckedCreateWithoutUserPreferencesInput>
    connectOrCreate?: UserCreateOrConnectWithoutUserPreferencesInput
    upsert?: UserUpsertWithoutUserPreferencesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutUserPreferencesInput, UserUpdateWithoutUserPreferencesInput>, UserUncheckedUpdateWithoutUserPreferencesInput>
  }

  export type UserCreateNestedOneWithoutReceiptsInput = {
    create?: XOR<UserCreateWithoutReceiptsInput, UserUncheckedCreateWithoutReceiptsInput>
    connectOrCreate?: UserCreateOrConnectWithoutReceiptsInput
    connect?: UserWhereUniqueInput
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type EnumReceiptCategoryFieldUpdateOperationsInput = {
    set?: $Enums.ReceiptCategory
  }

  export type NullableEnumPaymentMethodFieldUpdateOperationsInput = {
    set?: $Enums.PaymentMethod | null
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type UserUpdateOneRequiredWithoutReceiptsNestedInput = {
    create?: XOR<UserCreateWithoutReceiptsInput, UserUncheckedCreateWithoutReceiptsInput>
    connectOrCreate?: UserCreateOrConnectWithoutReceiptsInput
    upsert?: UserUpsertWithoutReceiptsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutReceiptsInput, UserUpdateWithoutReceiptsInput>, UserUncheckedUpdateWithoutReceiptsInput>
  }

  export type UserCreateNestedOneWithoutFinancialTestsInput = {
    create?: XOR<UserCreateWithoutFinancialTestsInput, UserUncheckedCreateWithoutFinancialTestsInput>
    connectOrCreate?: UserCreateOrConnectWithoutFinancialTestsInput
    connect?: UserWhereUniqueInput
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type UserUpdateOneRequiredWithoutFinancialTestsNestedInput = {
    create?: XOR<UserCreateWithoutFinancialTestsInput, UserUncheckedCreateWithoutFinancialTestsInput>
    connectOrCreate?: UserCreateOrConnectWithoutFinancialTestsInput
    upsert?: UserUpsertWithoutFinancialTestsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutFinancialTestsInput, UserUpdateWithoutFinancialTestsInput>, UserUncheckedUpdateWithoutFinancialTestsInput>
  }

  export type UserCreateNestedOneWithoutAiInteractionsInput = {
    create?: XOR<UserCreateWithoutAiInteractionsInput, UserUncheckedCreateWithoutAiInteractionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAiInteractionsInput
    connect?: UserWhereUniqueInput
  }

  export type EnumAIInteractionTypeFieldUpdateOperationsInput = {
    set?: $Enums.AIInteractionType
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableEnumFinancialQueryCategoryFieldUpdateOperationsInput = {
    set?: $Enums.FinancialQueryCategory | null
  }

  export type UserUpdateOneRequiredWithoutAiInteractionsNestedInput = {
    create?: XOR<UserCreateWithoutAiInteractionsInput, UserUncheckedCreateWithoutAiInteractionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAiInteractionsInput
    upsert?: UserUpsertWithoutAiInteractionsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutAiInteractionsInput, UserUpdateWithoutAiInteractionsInput>, UserUncheckedUpdateWithoutAiInteractionsInput>
  }

  export type MarketplaceProductCreateimagesInput = {
    set: string[]
  }

  export type MarketplaceProductCreatefeaturesInput = {
    set: string[]
  }

  export type MarketplaceOrderCreateNestedManyWithoutProductInput = {
    create?: XOR<MarketplaceOrderCreateWithoutProductInput, MarketplaceOrderUncheckedCreateWithoutProductInput> | MarketplaceOrderCreateWithoutProductInput[] | MarketplaceOrderUncheckedCreateWithoutProductInput[]
    connectOrCreate?: MarketplaceOrderCreateOrConnectWithoutProductInput | MarketplaceOrderCreateOrConnectWithoutProductInput[]
    createMany?: MarketplaceOrderCreateManyProductInputEnvelope
    connect?: MarketplaceOrderWhereUniqueInput | MarketplaceOrderWhereUniqueInput[]
  }

  export type ProductReviewCreateNestedManyWithoutProductInput = {
    create?: XOR<ProductReviewCreateWithoutProductInput, ProductReviewUncheckedCreateWithoutProductInput> | ProductReviewCreateWithoutProductInput[] | ProductReviewUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductReviewCreateOrConnectWithoutProductInput | ProductReviewCreateOrConnectWithoutProductInput[]
    createMany?: ProductReviewCreateManyProductInputEnvelope
    connect?: ProductReviewWhereUniqueInput | ProductReviewWhereUniqueInput[]
  }

  export type MarketplaceOrderUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<MarketplaceOrderCreateWithoutProductInput, MarketplaceOrderUncheckedCreateWithoutProductInput> | MarketplaceOrderCreateWithoutProductInput[] | MarketplaceOrderUncheckedCreateWithoutProductInput[]
    connectOrCreate?: MarketplaceOrderCreateOrConnectWithoutProductInput | MarketplaceOrderCreateOrConnectWithoutProductInput[]
    createMany?: MarketplaceOrderCreateManyProductInputEnvelope
    connect?: MarketplaceOrderWhereUniqueInput | MarketplaceOrderWhereUniqueInput[]
  }

  export type ProductReviewUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<ProductReviewCreateWithoutProductInput, ProductReviewUncheckedCreateWithoutProductInput> | ProductReviewCreateWithoutProductInput[] | ProductReviewUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductReviewCreateOrConnectWithoutProductInput | ProductReviewCreateOrConnectWithoutProductInput[]
    createMany?: ProductReviewCreateManyProductInputEnvelope
    connect?: ProductReviewWhereUniqueInput | ProductReviewWhereUniqueInput[]
  }

  export type EnumProductCategoryFieldUpdateOperationsInput = {
    set?: $Enums.ProductCategory
  }

  export type MarketplaceProductUpdateimagesInput = {
    set?: string[]
    push?: string | string[]
  }

  export type NullableEnumFinancialLevelFieldUpdateOperationsInput = {
    set?: $Enums.FinancialLevel | null
  }

  export type MarketplaceProductUpdatefeaturesInput = {
    set?: string[]
    push?: string | string[]
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type MarketplaceOrderUpdateManyWithoutProductNestedInput = {
    create?: XOR<MarketplaceOrderCreateWithoutProductInput, MarketplaceOrderUncheckedCreateWithoutProductInput> | MarketplaceOrderCreateWithoutProductInput[] | MarketplaceOrderUncheckedCreateWithoutProductInput[]
    connectOrCreate?: MarketplaceOrderCreateOrConnectWithoutProductInput | MarketplaceOrderCreateOrConnectWithoutProductInput[]
    upsert?: MarketplaceOrderUpsertWithWhereUniqueWithoutProductInput | MarketplaceOrderUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: MarketplaceOrderCreateManyProductInputEnvelope
    set?: MarketplaceOrderWhereUniqueInput | MarketplaceOrderWhereUniqueInput[]
    disconnect?: MarketplaceOrderWhereUniqueInput | MarketplaceOrderWhereUniqueInput[]
    delete?: MarketplaceOrderWhereUniqueInput | MarketplaceOrderWhereUniqueInput[]
    connect?: MarketplaceOrderWhereUniqueInput | MarketplaceOrderWhereUniqueInput[]
    update?: MarketplaceOrderUpdateWithWhereUniqueWithoutProductInput | MarketplaceOrderUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: MarketplaceOrderUpdateManyWithWhereWithoutProductInput | MarketplaceOrderUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: MarketplaceOrderScalarWhereInput | MarketplaceOrderScalarWhereInput[]
  }

  export type ProductReviewUpdateManyWithoutProductNestedInput = {
    create?: XOR<ProductReviewCreateWithoutProductInput, ProductReviewUncheckedCreateWithoutProductInput> | ProductReviewCreateWithoutProductInput[] | ProductReviewUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductReviewCreateOrConnectWithoutProductInput | ProductReviewCreateOrConnectWithoutProductInput[]
    upsert?: ProductReviewUpsertWithWhereUniqueWithoutProductInput | ProductReviewUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: ProductReviewCreateManyProductInputEnvelope
    set?: ProductReviewWhereUniqueInput | ProductReviewWhereUniqueInput[]
    disconnect?: ProductReviewWhereUniqueInput | ProductReviewWhereUniqueInput[]
    delete?: ProductReviewWhereUniqueInput | ProductReviewWhereUniqueInput[]
    connect?: ProductReviewWhereUniqueInput | ProductReviewWhereUniqueInput[]
    update?: ProductReviewUpdateWithWhereUniqueWithoutProductInput | ProductReviewUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: ProductReviewUpdateManyWithWhereWithoutProductInput | ProductReviewUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: ProductReviewScalarWhereInput | ProductReviewScalarWhereInput[]
  }

  export type MarketplaceOrderUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<MarketplaceOrderCreateWithoutProductInput, MarketplaceOrderUncheckedCreateWithoutProductInput> | MarketplaceOrderCreateWithoutProductInput[] | MarketplaceOrderUncheckedCreateWithoutProductInput[]
    connectOrCreate?: MarketplaceOrderCreateOrConnectWithoutProductInput | MarketplaceOrderCreateOrConnectWithoutProductInput[]
    upsert?: MarketplaceOrderUpsertWithWhereUniqueWithoutProductInput | MarketplaceOrderUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: MarketplaceOrderCreateManyProductInputEnvelope
    set?: MarketplaceOrderWhereUniqueInput | MarketplaceOrderWhereUniqueInput[]
    disconnect?: MarketplaceOrderWhereUniqueInput | MarketplaceOrderWhereUniqueInput[]
    delete?: MarketplaceOrderWhereUniqueInput | MarketplaceOrderWhereUniqueInput[]
    connect?: MarketplaceOrderWhereUniqueInput | MarketplaceOrderWhereUniqueInput[]
    update?: MarketplaceOrderUpdateWithWhereUniqueWithoutProductInput | MarketplaceOrderUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: MarketplaceOrderUpdateManyWithWhereWithoutProductInput | MarketplaceOrderUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: MarketplaceOrderScalarWhereInput | MarketplaceOrderScalarWhereInput[]
  }

  export type ProductReviewUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<ProductReviewCreateWithoutProductInput, ProductReviewUncheckedCreateWithoutProductInput> | ProductReviewCreateWithoutProductInput[] | ProductReviewUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductReviewCreateOrConnectWithoutProductInput | ProductReviewCreateOrConnectWithoutProductInput[]
    upsert?: ProductReviewUpsertWithWhereUniqueWithoutProductInput | ProductReviewUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: ProductReviewCreateManyProductInputEnvelope
    set?: ProductReviewWhereUniqueInput | ProductReviewWhereUniqueInput[]
    disconnect?: ProductReviewWhereUniqueInput | ProductReviewWhereUniqueInput[]
    delete?: ProductReviewWhereUniqueInput | ProductReviewWhereUniqueInput[]
    connect?: ProductReviewWhereUniqueInput | ProductReviewWhereUniqueInput[]
    update?: ProductReviewUpdateWithWhereUniqueWithoutProductInput | ProductReviewUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: ProductReviewUpdateManyWithWhereWithoutProductInput | ProductReviewUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: ProductReviewScalarWhereInput | ProductReviewScalarWhereInput[]
  }

  export type MarketplaceProductCreateNestedOneWithoutOrdersInput = {
    create?: XOR<MarketplaceProductCreateWithoutOrdersInput, MarketplaceProductUncheckedCreateWithoutOrdersInput>
    connectOrCreate?: MarketplaceProductCreateOrConnectWithoutOrdersInput
    connect?: MarketplaceProductWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutMarketplaceOrdersInput = {
    create?: XOR<UserCreateWithoutMarketplaceOrdersInput, UserUncheckedCreateWithoutMarketplaceOrdersInput>
    connectOrCreate?: UserCreateOrConnectWithoutMarketplaceOrdersInput
    connect?: UserWhereUniqueInput
  }

  export type EnumOrderStatusFieldUpdateOperationsInput = {
    set?: $Enums.OrderStatus
  }

  export type EnumPaymentMethodFieldUpdateOperationsInput = {
    set?: $Enums.PaymentMethod
  }

  export type EnumPaymentGatewayFieldUpdateOperationsInput = {
    set?: $Enums.PaymentGateway
  }

  export type EnumPaymentStatusFieldUpdateOperationsInput = {
    set?: $Enums.PaymentStatus
  }

  export type MarketplaceProductUpdateOneRequiredWithoutOrdersNestedInput = {
    create?: XOR<MarketplaceProductCreateWithoutOrdersInput, MarketplaceProductUncheckedCreateWithoutOrdersInput>
    connectOrCreate?: MarketplaceProductCreateOrConnectWithoutOrdersInput
    upsert?: MarketplaceProductUpsertWithoutOrdersInput
    connect?: MarketplaceProductWhereUniqueInput
    update?: XOR<XOR<MarketplaceProductUpdateToOneWithWhereWithoutOrdersInput, MarketplaceProductUpdateWithoutOrdersInput>, MarketplaceProductUncheckedUpdateWithoutOrdersInput>
  }

  export type UserUpdateOneRequiredWithoutMarketplaceOrdersNestedInput = {
    create?: XOR<UserCreateWithoutMarketplaceOrdersInput, UserUncheckedCreateWithoutMarketplaceOrdersInput>
    connectOrCreate?: UserCreateOrConnectWithoutMarketplaceOrdersInput
    upsert?: UserUpsertWithoutMarketplaceOrdersInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutMarketplaceOrdersInput, UserUpdateWithoutMarketplaceOrdersInput>, UserUncheckedUpdateWithoutMarketplaceOrdersInput>
  }

  export type MarketplaceProductCreateNestedOneWithoutReviewsInput = {
    create?: XOR<MarketplaceProductCreateWithoutReviewsInput, MarketplaceProductUncheckedCreateWithoutReviewsInput>
    connectOrCreate?: MarketplaceProductCreateOrConnectWithoutReviewsInput
    connect?: MarketplaceProductWhereUniqueInput
  }

  export type MarketplaceProductUpdateOneRequiredWithoutReviewsNestedInput = {
    create?: XOR<MarketplaceProductCreateWithoutReviewsInput, MarketplaceProductUncheckedCreateWithoutReviewsInput>
    connectOrCreate?: MarketplaceProductCreateOrConnectWithoutReviewsInput
    upsert?: MarketplaceProductUpsertWithoutReviewsInput
    connect?: MarketplaceProductWhereUniqueInput
    update?: XOR<XOR<MarketplaceProductUpdateToOneWithWhereWithoutReviewsInput, MarketplaceProductUpdateWithoutReviewsInput>, MarketplaceProductUncheckedUpdateWithoutReviewsInput>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedEnumGenderNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.Gender | EnumGenderFieldRefInput<$PrismaModel> | null
    in?: $Enums.Gender[] | ListEnumGenderFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.Gender[] | ListEnumGenderFieldRefInput<$PrismaModel> | null
    not?: NestedEnumGenderNullableFilter<$PrismaModel> | $Enums.Gender | null
  }

  export type NestedEnumFinancialLevelFilter<$PrismaModel = never> = {
    equals?: $Enums.FinancialLevel | EnumFinancialLevelFieldRefInput<$PrismaModel>
    in?: $Enums.FinancialLevel[] | ListEnumFinancialLevelFieldRefInput<$PrismaModel>
    notIn?: $Enums.FinancialLevel[] | ListEnumFinancialLevelFieldRefInput<$PrismaModel>
    not?: NestedEnumFinancialLevelFilter<$PrismaModel> | $Enums.FinancialLevel
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedEnumSubscriptionFilter<$PrismaModel = never> = {
    equals?: $Enums.Subscription | EnumSubscriptionFieldRefInput<$PrismaModel>
    in?: $Enums.Subscription[] | ListEnumSubscriptionFieldRefInput<$PrismaModel>
    notIn?: $Enums.Subscription[] | ListEnumSubscriptionFieldRefInput<$PrismaModel>
    not?: NestedEnumSubscriptionFilter<$PrismaModel> | $Enums.Subscription
  }

  export type NestedEnumLanguageFilter<$PrismaModel = never> = {
    equals?: $Enums.Language | EnumLanguageFieldRefInput<$PrismaModel>
    in?: $Enums.Language[] | ListEnumLanguageFieldRefInput<$PrismaModel>
    notIn?: $Enums.Language[] | ListEnumLanguageFieldRefInput<$PrismaModel>
    not?: NestedEnumLanguageFilter<$PrismaModel> | $Enums.Language
  }

  export type NestedEnumCurrencyFilter<$PrismaModel = never> = {
    equals?: $Enums.Currency | EnumCurrencyFieldRefInput<$PrismaModel>
    in?: $Enums.Currency[] | ListEnumCurrencyFieldRefInput<$PrismaModel>
    notIn?: $Enums.Currency[] | ListEnumCurrencyFieldRefInput<$PrismaModel>
    not?: NestedEnumCurrencyFilter<$PrismaModel> | $Enums.Currency
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedEnumGenderNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Gender | EnumGenderFieldRefInput<$PrismaModel> | null
    in?: $Enums.Gender[] | ListEnumGenderFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.Gender[] | ListEnumGenderFieldRefInput<$PrismaModel> | null
    not?: NestedEnumGenderNullableWithAggregatesFilter<$PrismaModel> | $Enums.Gender | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumGenderNullableFilter<$PrismaModel>
    _max?: NestedEnumGenderNullableFilter<$PrismaModel>
  }

  export type NestedEnumFinancialLevelWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.FinancialLevel | EnumFinancialLevelFieldRefInput<$PrismaModel>
    in?: $Enums.FinancialLevel[] | ListEnumFinancialLevelFieldRefInput<$PrismaModel>
    notIn?: $Enums.FinancialLevel[] | ListEnumFinancialLevelFieldRefInput<$PrismaModel>
    not?: NestedEnumFinancialLevelWithAggregatesFilter<$PrismaModel> | $Enums.FinancialLevel
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumFinancialLevelFilter<$PrismaModel>
    _max?: NestedEnumFinancialLevelFilter<$PrismaModel>
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type NestedEnumSubscriptionWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Subscription | EnumSubscriptionFieldRefInput<$PrismaModel>
    in?: $Enums.Subscription[] | ListEnumSubscriptionFieldRefInput<$PrismaModel>
    notIn?: $Enums.Subscription[] | ListEnumSubscriptionFieldRefInput<$PrismaModel>
    not?: NestedEnumSubscriptionWithAggregatesFilter<$PrismaModel> | $Enums.Subscription
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumSubscriptionFilter<$PrismaModel>
    _max?: NestedEnumSubscriptionFilter<$PrismaModel>
  }

  export type NestedEnumLanguageWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Language | EnumLanguageFieldRefInput<$PrismaModel>
    in?: $Enums.Language[] | ListEnumLanguageFieldRefInput<$PrismaModel>
    notIn?: $Enums.Language[] | ListEnumLanguageFieldRefInput<$PrismaModel>
    not?: NestedEnumLanguageWithAggregatesFilter<$PrismaModel> | $Enums.Language
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumLanguageFilter<$PrismaModel>
    _max?: NestedEnumLanguageFilter<$PrismaModel>
  }

  export type NestedEnumCurrencyWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Currency | EnumCurrencyFieldRefInput<$PrismaModel>
    in?: $Enums.Currency[] | ListEnumCurrencyFieldRefInput<$PrismaModel>
    notIn?: $Enums.Currency[] | ListEnumCurrencyFieldRefInput<$PrismaModel>
    not?: NestedEnumCurrencyWithAggregatesFilter<$PrismaModel> | $Enums.Currency
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCurrencyFilter<$PrismaModel>
    _max?: NestedEnumCurrencyFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedEnumThemeFilter<$PrismaModel = never> = {
    equals?: $Enums.Theme | EnumThemeFieldRefInput<$PrismaModel>
    in?: $Enums.Theme[] | ListEnumThemeFieldRefInput<$PrismaModel>
    notIn?: $Enums.Theme[] | ListEnumThemeFieldRefInput<$PrismaModel>
    not?: NestedEnumThemeFilter<$PrismaModel> | $Enums.Theme
  }

  export type NestedEnumThemeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Theme | EnumThemeFieldRefInput<$PrismaModel>
    in?: $Enums.Theme[] | ListEnumThemeFieldRefInput<$PrismaModel>
    notIn?: $Enums.Theme[] | ListEnumThemeFieldRefInput<$PrismaModel>
    not?: NestedEnumThemeWithAggregatesFilter<$PrismaModel> | $Enums.Theme
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumThemeFilter<$PrismaModel>
    _max?: NestedEnumThemeFilter<$PrismaModel>
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedEnumReceiptCategoryFilter<$PrismaModel = never> = {
    equals?: $Enums.ReceiptCategory | EnumReceiptCategoryFieldRefInput<$PrismaModel>
    in?: $Enums.ReceiptCategory[] | ListEnumReceiptCategoryFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReceiptCategory[] | ListEnumReceiptCategoryFieldRefInput<$PrismaModel>
    not?: NestedEnumReceiptCategoryFilter<$PrismaModel> | $Enums.ReceiptCategory
  }

  export type NestedEnumPaymentMethodNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentMethod | EnumPaymentMethodFieldRefInput<$PrismaModel> | null
    in?: $Enums.PaymentMethod[] | ListEnumPaymentMethodFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.PaymentMethod[] | ListEnumPaymentMethodFieldRefInput<$PrismaModel> | null
    not?: NestedEnumPaymentMethodNullableFilter<$PrismaModel> | $Enums.PaymentMethod | null
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type NestedEnumReceiptCategoryWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ReceiptCategory | EnumReceiptCategoryFieldRefInput<$PrismaModel>
    in?: $Enums.ReceiptCategory[] | ListEnumReceiptCategoryFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReceiptCategory[] | ListEnumReceiptCategoryFieldRefInput<$PrismaModel>
    not?: NestedEnumReceiptCategoryWithAggregatesFilter<$PrismaModel> | $Enums.ReceiptCategory
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumReceiptCategoryFilter<$PrismaModel>
    _max?: NestedEnumReceiptCategoryFilter<$PrismaModel>
  }

  export type NestedEnumPaymentMethodNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentMethod | EnumPaymentMethodFieldRefInput<$PrismaModel> | null
    in?: $Enums.PaymentMethod[] | ListEnumPaymentMethodFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.PaymentMethod[] | ListEnumPaymentMethodFieldRefInput<$PrismaModel> | null
    not?: NestedEnumPaymentMethodNullableWithAggregatesFilter<$PrismaModel> | $Enums.PaymentMethod | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumPaymentMethodNullableFilter<$PrismaModel>
    _max?: NestedEnumPaymentMethodNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }
  export type NestedJsonFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<NestedJsonFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedEnumAIInteractionTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.AIInteractionType | EnumAIInteractionTypeFieldRefInput<$PrismaModel>
    in?: $Enums.AIInteractionType[] | ListEnumAIInteractionTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.AIInteractionType[] | ListEnumAIInteractionTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumAIInteractionTypeFilter<$PrismaModel> | $Enums.AIInteractionType
  }

  export type NestedEnumFinancialQueryCategoryNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.FinancialQueryCategory | EnumFinancialQueryCategoryFieldRefInput<$PrismaModel> | null
    in?: $Enums.FinancialQueryCategory[] | ListEnumFinancialQueryCategoryFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.FinancialQueryCategory[] | ListEnumFinancialQueryCategoryFieldRefInput<$PrismaModel> | null
    not?: NestedEnumFinancialQueryCategoryNullableFilter<$PrismaModel> | $Enums.FinancialQueryCategory | null
  }

  export type NestedEnumAIInteractionTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AIInteractionType | EnumAIInteractionTypeFieldRefInput<$PrismaModel>
    in?: $Enums.AIInteractionType[] | ListEnumAIInteractionTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.AIInteractionType[] | ListEnumAIInteractionTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumAIInteractionTypeWithAggregatesFilter<$PrismaModel> | $Enums.AIInteractionType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAIInteractionTypeFilter<$PrismaModel>
    _max?: NestedEnumAIInteractionTypeFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedEnumFinancialQueryCategoryNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.FinancialQueryCategory | EnumFinancialQueryCategoryFieldRefInput<$PrismaModel> | null
    in?: $Enums.FinancialQueryCategory[] | ListEnumFinancialQueryCategoryFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.FinancialQueryCategory[] | ListEnumFinancialQueryCategoryFieldRefInput<$PrismaModel> | null
    not?: NestedEnumFinancialQueryCategoryNullableWithAggregatesFilter<$PrismaModel> | $Enums.FinancialQueryCategory | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumFinancialQueryCategoryNullableFilter<$PrismaModel>
    _max?: NestedEnumFinancialQueryCategoryNullableFilter<$PrismaModel>
  }

  export type NestedEnumProductCategoryFilter<$PrismaModel = never> = {
    equals?: $Enums.ProductCategory | EnumProductCategoryFieldRefInput<$PrismaModel>
    in?: $Enums.ProductCategory[] | ListEnumProductCategoryFieldRefInput<$PrismaModel>
    notIn?: $Enums.ProductCategory[] | ListEnumProductCategoryFieldRefInput<$PrismaModel>
    not?: NestedEnumProductCategoryFilter<$PrismaModel> | $Enums.ProductCategory
  }

  export type NestedEnumFinancialLevelNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.FinancialLevel | EnumFinancialLevelFieldRefInput<$PrismaModel> | null
    in?: $Enums.FinancialLevel[] | ListEnumFinancialLevelFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.FinancialLevel[] | ListEnumFinancialLevelFieldRefInput<$PrismaModel> | null
    not?: NestedEnumFinancialLevelNullableFilter<$PrismaModel> | $Enums.FinancialLevel | null
  }

  export type NestedEnumProductCategoryWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ProductCategory | EnumProductCategoryFieldRefInput<$PrismaModel>
    in?: $Enums.ProductCategory[] | ListEnumProductCategoryFieldRefInput<$PrismaModel>
    notIn?: $Enums.ProductCategory[] | ListEnumProductCategoryFieldRefInput<$PrismaModel>
    not?: NestedEnumProductCategoryWithAggregatesFilter<$PrismaModel> | $Enums.ProductCategory
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumProductCategoryFilter<$PrismaModel>
    _max?: NestedEnumProductCategoryFilter<$PrismaModel>
  }

  export type NestedEnumFinancialLevelNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.FinancialLevel | EnumFinancialLevelFieldRefInput<$PrismaModel> | null
    in?: $Enums.FinancialLevel[] | ListEnumFinancialLevelFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.FinancialLevel[] | ListEnumFinancialLevelFieldRefInput<$PrismaModel> | null
    not?: NestedEnumFinancialLevelNullableWithAggregatesFilter<$PrismaModel> | $Enums.FinancialLevel | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumFinancialLevelNullableFilter<$PrismaModel>
    _max?: NestedEnumFinancialLevelNullableFilter<$PrismaModel>
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type NestedEnumOrderStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderStatus | EnumOrderStatusFieldRefInput<$PrismaModel>
    in?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderStatusFilter<$PrismaModel> | $Enums.OrderStatus
  }

  export type NestedEnumPaymentMethodFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentMethod | EnumPaymentMethodFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentMethod[] | ListEnumPaymentMethodFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentMethod[] | ListEnumPaymentMethodFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentMethodFilter<$PrismaModel> | $Enums.PaymentMethod
  }

  export type NestedEnumPaymentGatewayFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentGateway | EnumPaymentGatewayFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentGateway[] | ListEnumPaymentGatewayFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentGateway[] | ListEnumPaymentGatewayFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentGatewayFilter<$PrismaModel> | $Enums.PaymentGateway
  }

  export type NestedEnumPaymentStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentStatus | EnumPaymentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentStatusFilter<$PrismaModel> | $Enums.PaymentStatus
  }

  export type NestedEnumOrderStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderStatus | EnumOrderStatusFieldRefInput<$PrismaModel>
    in?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderStatusWithAggregatesFilter<$PrismaModel> | $Enums.OrderStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumOrderStatusFilter<$PrismaModel>
    _max?: NestedEnumOrderStatusFilter<$PrismaModel>
  }

  export type NestedEnumPaymentMethodWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentMethod | EnumPaymentMethodFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentMethod[] | ListEnumPaymentMethodFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentMethod[] | ListEnumPaymentMethodFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentMethodWithAggregatesFilter<$PrismaModel> | $Enums.PaymentMethod
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPaymentMethodFilter<$PrismaModel>
    _max?: NestedEnumPaymentMethodFilter<$PrismaModel>
  }

  export type NestedEnumPaymentGatewayWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentGateway | EnumPaymentGatewayFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentGateway[] | ListEnumPaymentGatewayFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentGateway[] | ListEnumPaymentGatewayFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentGatewayWithAggregatesFilter<$PrismaModel> | $Enums.PaymentGateway
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPaymentGatewayFilter<$PrismaModel>
    _max?: NestedEnumPaymentGatewayFilter<$PrismaModel>
  }

  export type NestedEnumPaymentStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentStatus | EnumPaymentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentStatusWithAggregatesFilter<$PrismaModel> | $Enums.PaymentStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPaymentStatusFilter<$PrismaModel>
    _max?: NestedEnumPaymentStatusFilter<$PrismaModel>
  }

  export type FinancialTestCreateWithoutUserInput = {
    id?: string
    testVersion?: string
    questions: JsonNullValueInput | InputJsonValue
    score: number
    level: $Enums.FinancialLevel
    recommendations?: NullableJsonNullValueInput | InputJsonValue
    completedAt?: Date | string
  }

  export type FinancialTestUncheckedCreateWithoutUserInput = {
    id?: string
    testVersion?: string
    questions: JsonNullValueInput | InputJsonValue
    score: number
    level: $Enums.FinancialLevel
    recommendations?: NullableJsonNullValueInput | InputJsonValue
    completedAt?: Date | string
  }

  export type FinancialTestCreateOrConnectWithoutUserInput = {
    where: FinancialTestWhereUniqueInput
    create: XOR<FinancialTestCreateWithoutUserInput, FinancialTestUncheckedCreateWithoutUserInput>
  }

  export type FinancialTestCreateManyUserInputEnvelope = {
    data: FinancialTestCreateManyUserInput | FinancialTestCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type MarketplaceOrderCreateWithoutUserInput = {
    id?: string
    orderNumber: string
    amount: Decimal | DecimalJsLike | number | string
    currency?: $Enums.Currency
    status?: $Enums.OrderStatus
    paymentMethod: $Enums.PaymentMethod
    paymentGateway: $Enums.PaymentGateway
    transactionId?: string | null
    paymentStatus?: $Enums.PaymentStatus
    commission?: Decimal | DecimalJsLike | number | string | null
    commissionRate?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    paidAt?: Date | string | null
    product: MarketplaceProductCreateNestedOneWithoutOrdersInput
  }

  export type MarketplaceOrderUncheckedCreateWithoutUserInput = {
    id?: string
    productId: string
    orderNumber: string
    amount: Decimal | DecimalJsLike | number | string
    currency?: $Enums.Currency
    status?: $Enums.OrderStatus
    paymentMethod: $Enums.PaymentMethod
    paymentGateway: $Enums.PaymentGateway
    transactionId?: string | null
    paymentStatus?: $Enums.PaymentStatus
    commission?: Decimal | DecimalJsLike | number | string | null
    commissionRate?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    paidAt?: Date | string | null
  }

  export type MarketplaceOrderCreateOrConnectWithoutUserInput = {
    where: MarketplaceOrderWhereUniqueInput
    create: XOR<MarketplaceOrderCreateWithoutUserInput, MarketplaceOrderUncheckedCreateWithoutUserInput>
  }

  export type MarketplaceOrderCreateManyUserInputEnvelope = {
    data: MarketplaceOrderCreateManyUserInput | MarketplaceOrderCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type ReceiptCreateWithoutUserInput = {
    id?: string
    imageUrl?: string | null
    merchantName: string
    amount: Decimal | DecimalJsLike | number | string
    currency?: $Enums.Currency
    transactionDate: Date | string
    category: $Enums.ReceiptCategory
    subcategory?: string | null
    paymentMethod?: $Enums.PaymentMethod | null
    location?: string | null
    notes?: string | null
    ocrConfidence?: number | null
    ocrRawText?: string | null
    ocrProcessed?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReceiptUncheckedCreateWithoutUserInput = {
    id?: string
    imageUrl?: string | null
    merchantName: string
    amount: Decimal | DecimalJsLike | number | string
    currency?: $Enums.Currency
    transactionDate: Date | string
    category: $Enums.ReceiptCategory
    subcategory?: string | null
    paymentMethod?: $Enums.PaymentMethod | null
    location?: string | null
    notes?: string | null
    ocrConfidence?: number | null
    ocrRawText?: string | null
    ocrProcessed?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReceiptCreateOrConnectWithoutUserInput = {
    where: ReceiptWhereUniqueInput
    create: XOR<ReceiptCreateWithoutUserInput, ReceiptUncheckedCreateWithoutUserInput>
  }

  export type ReceiptCreateManyUserInputEnvelope = {
    data: ReceiptCreateManyUserInput | ReceiptCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type UserPreferenceCreateWithoutUserInput = {
    id?: string
    theme?: $Enums.Theme
    pushNotifications?: boolean
    emailNotifications?: boolean
    smsNotifications?: boolean
    weeklyReports?: boolean
    monthlyReports?: boolean
    aiRecommendations?: boolean
    locationServices?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserPreferenceUncheckedCreateWithoutUserInput = {
    id?: string
    theme?: $Enums.Theme
    pushNotifications?: boolean
    emailNotifications?: boolean
    smsNotifications?: boolean
    weeklyReports?: boolean
    monthlyReports?: boolean
    aiRecommendations?: boolean
    locationServices?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserPreferenceCreateOrConnectWithoutUserInput = {
    where: UserPreferenceWhereUniqueInput
    create: XOR<UserPreferenceCreateWithoutUserInput, UserPreferenceUncheckedCreateWithoutUserInput>
  }

  export type UserSessionCreateWithoutUserInput = {
    id?: string
    token: string
    refreshToken: string
    deviceInfo?: NullableJsonNullValueInput | InputJsonValue
    ipAddress?: string | null
    userAgent?: string | null
    isActive?: boolean
    expiresAt: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserSessionUncheckedCreateWithoutUserInput = {
    id?: string
    token: string
    refreshToken: string
    deviceInfo?: NullableJsonNullValueInput | InputJsonValue
    ipAddress?: string | null
    userAgent?: string | null
    isActive?: boolean
    expiresAt: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserSessionCreateOrConnectWithoutUserInput = {
    where: UserSessionWhereUniqueInput
    create: XOR<UserSessionCreateWithoutUserInput, UserSessionUncheckedCreateWithoutUserInput>
  }

  export type UserSessionCreateManyUserInputEnvelope = {
    data: UserSessionCreateManyUserInput | UserSessionCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type AIInteractionCreateWithoutUserInput = {
    id?: string
    sessionId?: string | null
    interactionType: $Enums.AIInteractionType
    userMessage: string
    aiResponse: string
    model?: string
    tokensUsed?: number | null
    responseTime?: number | null
    isFinancialQuery?: boolean
    queryCategory?: $Enums.FinancialQueryCategory | null
    disclaimerShown?: boolean
    disclaimerVersion?: string
    userRating?: number | null
    userFeedback?: string | null
    ipAddress?: string | null
    userAgent?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AIInteractionUncheckedCreateWithoutUserInput = {
    id?: string
    sessionId?: string | null
    interactionType: $Enums.AIInteractionType
    userMessage: string
    aiResponse: string
    model?: string
    tokensUsed?: number | null
    responseTime?: number | null
    isFinancialQuery?: boolean
    queryCategory?: $Enums.FinancialQueryCategory | null
    disclaimerShown?: boolean
    disclaimerVersion?: string
    userRating?: number | null
    userFeedback?: string | null
    ipAddress?: string | null
    userAgent?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AIInteractionCreateOrConnectWithoutUserInput = {
    where: AIInteractionWhereUniqueInput
    create: XOR<AIInteractionCreateWithoutUserInput, AIInteractionUncheckedCreateWithoutUserInput>
  }

  export type AIInteractionCreateManyUserInputEnvelope = {
    data: AIInteractionCreateManyUserInput | AIInteractionCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type FinancialTestUpsertWithWhereUniqueWithoutUserInput = {
    where: FinancialTestWhereUniqueInput
    update: XOR<FinancialTestUpdateWithoutUserInput, FinancialTestUncheckedUpdateWithoutUserInput>
    create: XOR<FinancialTestCreateWithoutUserInput, FinancialTestUncheckedCreateWithoutUserInput>
  }

  export type FinancialTestUpdateWithWhereUniqueWithoutUserInput = {
    where: FinancialTestWhereUniqueInput
    data: XOR<FinancialTestUpdateWithoutUserInput, FinancialTestUncheckedUpdateWithoutUserInput>
  }

  export type FinancialTestUpdateManyWithWhereWithoutUserInput = {
    where: FinancialTestScalarWhereInput
    data: XOR<FinancialTestUpdateManyMutationInput, FinancialTestUncheckedUpdateManyWithoutUserInput>
  }

  export type FinancialTestScalarWhereInput = {
    AND?: FinancialTestScalarWhereInput | FinancialTestScalarWhereInput[]
    OR?: FinancialTestScalarWhereInput[]
    NOT?: FinancialTestScalarWhereInput | FinancialTestScalarWhereInput[]
    id?: StringFilter<"FinancialTest"> | string
    userId?: StringFilter<"FinancialTest"> | string
    testVersion?: StringFilter<"FinancialTest"> | string
    questions?: JsonFilter<"FinancialTest">
    score?: IntFilter<"FinancialTest"> | number
    level?: EnumFinancialLevelFilter<"FinancialTest"> | $Enums.FinancialLevel
    recommendations?: JsonNullableFilter<"FinancialTest">
    completedAt?: DateTimeFilter<"FinancialTest"> | Date | string
  }

  export type MarketplaceOrderUpsertWithWhereUniqueWithoutUserInput = {
    where: MarketplaceOrderWhereUniqueInput
    update: XOR<MarketplaceOrderUpdateWithoutUserInput, MarketplaceOrderUncheckedUpdateWithoutUserInput>
    create: XOR<MarketplaceOrderCreateWithoutUserInput, MarketplaceOrderUncheckedCreateWithoutUserInput>
  }

  export type MarketplaceOrderUpdateWithWhereUniqueWithoutUserInput = {
    where: MarketplaceOrderWhereUniqueInput
    data: XOR<MarketplaceOrderUpdateWithoutUserInput, MarketplaceOrderUncheckedUpdateWithoutUserInput>
  }

  export type MarketplaceOrderUpdateManyWithWhereWithoutUserInput = {
    where: MarketplaceOrderScalarWhereInput
    data: XOR<MarketplaceOrderUpdateManyMutationInput, MarketplaceOrderUncheckedUpdateManyWithoutUserInput>
  }

  export type MarketplaceOrderScalarWhereInput = {
    AND?: MarketplaceOrderScalarWhereInput | MarketplaceOrderScalarWhereInput[]
    OR?: MarketplaceOrderScalarWhereInput[]
    NOT?: MarketplaceOrderScalarWhereInput | MarketplaceOrderScalarWhereInput[]
    id?: StringFilter<"MarketplaceOrder"> | string
    userId?: StringFilter<"MarketplaceOrder"> | string
    productId?: StringFilter<"MarketplaceOrder"> | string
    orderNumber?: StringFilter<"MarketplaceOrder"> | string
    amount?: DecimalFilter<"MarketplaceOrder"> | Decimal | DecimalJsLike | number | string
    currency?: EnumCurrencyFilter<"MarketplaceOrder"> | $Enums.Currency
    status?: EnumOrderStatusFilter<"MarketplaceOrder"> | $Enums.OrderStatus
    paymentMethod?: EnumPaymentMethodFilter<"MarketplaceOrder"> | $Enums.PaymentMethod
    paymentGateway?: EnumPaymentGatewayFilter<"MarketplaceOrder"> | $Enums.PaymentGateway
    transactionId?: StringNullableFilter<"MarketplaceOrder"> | string | null
    paymentStatus?: EnumPaymentStatusFilter<"MarketplaceOrder"> | $Enums.PaymentStatus
    commission?: DecimalNullableFilter<"MarketplaceOrder"> | Decimal | DecimalJsLike | number | string | null
    commissionRate?: FloatNullableFilter<"MarketplaceOrder"> | number | null
    createdAt?: DateTimeFilter<"MarketplaceOrder"> | Date | string
    updatedAt?: DateTimeFilter<"MarketplaceOrder"> | Date | string
    paidAt?: DateTimeNullableFilter<"MarketplaceOrder"> | Date | string | null
  }

  export type ReceiptUpsertWithWhereUniqueWithoutUserInput = {
    where: ReceiptWhereUniqueInput
    update: XOR<ReceiptUpdateWithoutUserInput, ReceiptUncheckedUpdateWithoutUserInput>
    create: XOR<ReceiptCreateWithoutUserInput, ReceiptUncheckedCreateWithoutUserInput>
  }

  export type ReceiptUpdateWithWhereUniqueWithoutUserInput = {
    where: ReceiptWhereUniqueInput
    data: XOR<ReceiptUpdateWithoutUserInput, ReceiptUncheckedUpdateWithoutUserInput>
  }

  export type ReceiptUpdateManyWithWhereWithoutUserInput = {
    where: ReceiptScalarWhereInput
    data: XOR<ReceiptUpdateManyMutationInput, ReceiptUncheckedUpdateManyWithoutUserInput>
  }

  export type ReceiptScalarWhereInput = {
    AND?: ReceiptScalarWhereInput | ReceiptScalarWhereInput[]
    OR?: ReceiptScalarWhereInput[]
    NOT?: ReceiptScalarWhereInput | ReceiptScalarWhereInput[]
    id?: StringFilter<"Receipt"> | string
    userId?: StringFilter<"Receipt"> | string
    imageUrl?: StringNullableFilter<"Receipt"> | string | null
    merchantName?: StringFilter<"Receipt"> | string
    amount?: DecimalFilter<"Receipt"> | Decimal | DecimalJsLike | number | string
    currency?: EnumCurrencyFilter<"Receipt"> | $Enums.Currency
    transactionDate?: DateTimeFilter<"Receipt"> | Date | string
    category?: EnumReceiptCategoryFilter<"Receipt"> | $Enums.ReceiptCategory
    subcategory?: StringNullableFilter<"Receipt"> | string | null
    paymentMethod?: EnumPaymentMethodNullableFilter<"Receipt"> | $Enums.PaymentMethod | null
    location?: StringNullableFilter<"Receipt"> | string | null
    notes?: StringNullableFilter<"Receipt"> | string | null
    ocrConfidence?: FloatNullableFilter<"Receipt"> | number | null
    ocrRawText?: StringNullableFilter<"Receipt"> | string | null
    ocrProcessed?: BoolFilter<"Receipt"> | boolean
    createdAt?: DateTimeFilter<"Receipt"> | Date | string
    updatedAt?: DateTimeFilter<"Receipt"> | Date | string
  }

  export type UserPreferenceUpsertWithoutUserInput = {
    update: XOR<UserPreferenceUpdateWithoutUserInput, UserPreferenceUncheckedUpdateWithoutUserInput>
    create: XOR<UserPreferenceCreateWithoutUserInput, UserPreferenceUncheckedCreateWithoutUserInput>
    where?: UserPreferenceWhereInput
  }

  export type UserPreferenceUpdateToOneWithWhereWithoutUserInput = {
    where?: UserPreferenceWhereInput
    data: XOR<UserPreferenceUpdateWithoutUserInput, UserPreferenceUncheckedUpdateWithoutUserInput>
  }

  export type UserPreferenceUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    theme?: EnumThemeFieldUpdateOperationsInput | $Enums.Theme
    pushNotifications?: BoolFieldUpdateOperationsInput | boolean
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    smsNotifications?: BoolFieldUpdateOperationsInput | boolean
    weeklyReports?: BoolFieldUpdateOperationsInput | boolean
    monthlyReports?: BoolFieldUpdateOperationsInput | boolean
    aiRecommendations?: BoolFieldUpdateOperationsInput | boolean
    locationServices?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserPreferenceUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    theme?: EnumThemeFieldUpdateOperationsInput | $Enums.Theme
    pushNotifications?: BoolFieldUpdateOperationsInput | boolean
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    smsNotifications?: BoolFieldUpdateOperationsInput | boolean
    weeklyReports?: BoolFieldUpdateOperationsInput | boolean
    monthlyReports?: BoolFieldUpdateOperationsInput | boolean
    aiRecommendations?: BoolFieldUpdateOperationsInput | boolean
    locationServices?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserSessionUpsertWithWhereUniqueWithoutUserInput = {
    where: UserSessionWhereUniqueInput
    update: XOR<UserSessionUpdateWithoutUserInput, UserSessionUncheckedUpdateWithoutUserInput>
    create: XOR<UserSessionCreateWithoutUserInput, UserSessionUncheckedCreateWithoutUserInput>
  }

  export type UserSessionUpdateWithWhereUniqueWithoutUserInput = {
    where: UserSessionWhereUniqueInput
    data: XOR<UserSessionUpdateWithoutUserInput, UserSessionUncheckedUpdateWithoutUserInput>
  }

  export type UserSessionUpdateManyWithWhereWithoutUserInput = {
    where: UserSessionScalarWhereInput
    data: XOR<UserSessionUpdateManyMutationInput, UserSessionUncheckedUpdateManyWithoutUserInput>
  }

  export type UserSessionScalarWhereInput = {
    AND?: UserSessionScalarWhereInput | UserSessionScalarWhereInput[]
    OR?: UserSessionScalarWhereInput[]
    NOT?: UserSessionScalarWhereInput | UserSessionScalarWhereInput[]
    id?: StringFilter<"UserSession"> | string
    userId?: StringFilter<"UserSession"> | string
    token?: StringFilter<"UserSession"> | string
    refreshToken?: StringFilter<"UserSession"> | string
    deviceInfo?: JsonNullableFilter<"UserSession">
    ipAddress?: StringNullableFilter<"UserSession"> | string | null
    userAgent?: StringNullableFilter<"UserSession"> | string | null
    isActive?: BoolFilter<"UserSession"> | boolean
    expiresAt?: DateTimeFilter<"UserSession"> | Date | string
    createdAt?: DateTimeFilter<"UserSession"> | Date | string
    updatedAt?: DateTimeFilter<"UserSession"> | Date | string
  }

  export type AIInteractionUpsertWithWhereUniqueWithoutUserInput = {
    where: AIInteractionWhereUniqueInput
    update: XOR<AIInteractionUpdateWithoutUserInput, AIInteractionUncheckedUpdateWithoutUserInput>
    create: XOR<AIInteractionCreateWithoutUserInput, AIInteractionUncheckedCreateWithoutUserInput>
  }

  export type AIInteractionUpdateWithWhereUniqueWithoutUserInput = {
    where: AIInteractionWhereUniqueInput
    data: XOR<AIInteractionUpdateWithoutUserInput, AIInteractionUncheckedUpdateWithoutUserInput>
  }

  export type AIInteractionUpdateManyWithWhereWithoutUserInput = {
    where: AIInteractionScalarWhereInput
    data: XOR<AIInteractionUpdateManyMutationInput, AIInteractionUncheckedUpdateManyWithoutUserInput>
  }

  export type AIInteractionScalarWhereInput = {
    AND?: AIInteractionScalarWhereInput | AIInteractionScalarWhereInput[]
    OR?: AIInteractionScalarWhereInput[]
    NOT?: AIInteractionScalarWhereInput | AIInteractionScalarWhereInput[]
    id?: StringFilter<"AIInteraction"> | string
    userId?: StringFilter<"AIInteraction"> | string
    sessionId?: StringNullableFilter<"AIInteraction"> | string | null
    interactionType?: EnumAIInteractionTypeFilter<"AIInteraction"> | $Enums.AIInteractionType
    userMessage?: StringFilter<"AIInteraction"> | string
    aiResponse?: StringFilter<"AIInteraction"> | string
    model?: StringFilter<"AIInteraction"> | string
    tokensUsed?: IntNullableFilter<"AIInteraction"> | number | null
    responseTime?: IntNullableFilter<"AIInteraction"> | number | null
    isFinancialQuery?: BoolFilter<"AIInteraction"> | boolean
    queryCategory?: EnumFinancialQueryCategoryNullableFilter<"AIInteraction"> | $Enums.FinancialQueryCategory | null
    disclaimerShown?: BoolFilter<"AIInteraction"> | boolean
    disclaimerVersion?: StringFilter<"AIInteraction"> | string
    userRating?: IntNullableFilter<"AIInteraction"> | number | null
    userFeedback?: StringNullableFilter<"AIInteraction"> | string | null
    ipAddress?: StringNullableFilter<"AIInteraction"> | string | null
    userAgent?: StringNullableFilter<"AIInteraction"> | string | null
    metadata?: JsonNullableFilter<"AIInteraction">
    createdAt?: DateTimeFilter<"AIInteraction"> | Date | string
    updatedAt?: DateTimeFilter<"AIInteraction"> | Date | string
  }

  export type UserCreateWithoutUserSessionsInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    phone?: string | null
    dateOfBirth?: Date | string | null
    gender?: $Enums.Gender | null
    profileImage?: string | null
    financialLevel?: $Enums.FinancialLevel
    monthlyIncome?: Decimal | DecimalJsLike | number | string | null
    monthlyExpenses?: Decimal | DecimalJsLike | number | string | null
    savingsGoal?: Decimal | DecimalJsLike | number | string | null
    subscription?: $Enums.Subscription
    subscriptionStart?: Date | string | null
    subscriptionEnd?: Date | string | null
    language?: $Enums.Language
    currency?: $Enums.Currency
    timezone?: string
    notifications?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLoginAt?: Date | string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    twoFactorEnabled?: boolean
    twoFactorSecret?: string | null
    twoFactorBackupCodes?: UserCreatetwoFactorBackupCodesInput | string[]
    twoFactorEnabledAt?: Date | string | null
    twoFactorDisabledAt?: Date | string | null
    financialTests?: FinancialTestCreateNestedManyWithoutUserInput
    marketplaceOrders?: MarketplaceOrderCreateNestedManyWithoutUserInput
    receipts?: ReceiptCreateNestedManyWithoutUserInput
    userPreferences?: UserPreferenceCreateNestedOneWithoutUserInput
    aiInteractions?: AIInteractionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutUserSessionsInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    phone?: string | null
    dateOfBirth?: Date | string | null
    gender?: $Enums.Gender | null
    profileImage?: string | null
    financialLevel?: $Enums.FinancialLevel
    monthlyIncome?: Decimal | DecimalJsLike | number | string | null
    monthlyExpenses?: Decimal | DecimalJsLike | number | string | null
    savingsGoal?: Decimal | DecimalJsLike | number | string | null
    subscription?: $Enums.Subscription
    subscriptionStart?: Date | string | null
    subscriptionEnd?: Date | string | null
    language?: $Enums.Language
    currency?: $Enums.Currency
    timezone?: string
    notifications?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLoginAt?: Date | string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    twoFactorEnabled?: boolean
    twoFactorSecret?: string | null
    twoFactorBackupCodes?: UserCreatetwoFactorBackupCodesInput | string[]
    twoFactorEnabledAt?: Date | string | null
    twoFactorDisabledAt?: Date | string | null
    financialTests?: FinancialTestUncheckedCreateNestedManyWithoutUserInput
    marketplaceOrders?: MarketplaceOrderUncheckedCreateNestedManyWithoutUserInput
    receipts?: ReceiptUncheckedCreateNestedManyWithoutUserInput
    userPreferences?: UserPreferenceUncheckedCreateNestedOneWithoutUserInput
    aiInteractions?: AIInteractionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutUserSessionsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUserSessionsInput, UserUncheckedCreateWithoutUserSessionsInput>
  }

  export type UserUpsertWithoutUserSessionsInput = {
    update: XOR<UserUpdateWithoutUserSessionsInput, UserUncheckedUpdateWithoutUserSessionsInput>
    create: XOR<UserCreateWithoutUserSessionsInput, UserUncheckedCreateWithoutUserSessionsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutUserSessionsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutUserSessionsInput, UserUncheckedUpdateWithoutUserSessionsInput>
  }

  export type UserUpdateWithoutUserSessionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | $Enums.Gender | null
    profileImage?: NullableStringFieldUpdateOperationsInput | string | null
    financialLevel?: EnumFinancialLevelFieldUpdateOperationsInput | $Enums.FinancialLevel
    monthlyIncome?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    monthlyExpenses?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    savingsGoal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    subscription?: EnumSubscriptionFieldUpdateOperationsInput | $Enums.Subscription
    subscriptionStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    subscriptionEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    language?: EnumLanguageFieldUpdateOperationsInput | $Enums.Language
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    timezone?: StringFieldUpdateOperationsInput | string
    notifications?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    twoFactorEnabled?: BoolFieldUpdateOperationsInput | boolean
    twoFactorSecret?: NullableStringFieldUpdateOperationsInput | string | null
    twoFactorBackupCodes?: UserUpdatetwoFactorBackupCodesInput | string[]
    twoFactorEnabledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    twoFactorDisabledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    financialTests?: FinancialTestUpdateManyWithoutUserNestedInput
    marketplaceOrders?: MarketplaceOrderUpdateManyWithoutUserNestedInput
    receipts?: ReceiptUpdateManyWithoutUserNestedInput
    userPreferences?: UserPreferenceUpdateOneWithoutUserNestedInput
    aiInteractions?: AIInteractionUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutUserSessionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | $Enums.Gender | null
    profileImage?: NullableStringFieldUpdateOperationsInput | string | null
    financialLevel?: EnumFinancialLevelFieldUpdateOperationsInput | $Enums.FinancialLevel
    monthlyIncome?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    monthlyExpenses?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    savingsGoal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    subscription?: EnumSubscriptionFieldUpdateOperationsInput | $Enums.Subscription
    subscriptionStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    subscriptionEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    language?: EnumLanguageFieldUpdateOperationsInput | $Enums.Language
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    timezone?: StringFieldUpdateOperationsInput | string
    notifications?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    twoFactorEnabled?: BoolFieldUpdateOperationsInput | boolean
    twoFactorSecret?: NullableStringFieldUpdateOperationsInput | string | null
    twoFactorBackupCodes?: UserUpdatetwoFactorBackupCodesInput | string[]
    twoFactorEnabledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    twoFactorDisabledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    financialTests?: FinancialTestUncheckedUpdateManyWithoutUserNestedInput
    marketplaceOrders?: MarketplaceOrderUncheckedUpdateManyWithoutUserNestedInput
    receipts?: ReceiptUncheckedUpdateManyWithoutUserNestedInput
    userPreferences?: UserPreferenceUncheckedUpdateOneWithoutUserNestedInput
    aiInteractions?: AIInteractionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateWithoutUserPreferencesInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    phone?: string | null
    dateOfBirth?: Date | string | null
    gender?: $Enums.Gender | null
    profileImage?: string | null
    financialLevel?: $Enums.FinancialLevel
    monthlyIncome?: Decimal | DecimalJsLike | number | string | null
    monthlyExpenses?: Decimal | DecimalJsLike | number | string | null
    savingsGoal?: Decimal | DecimalJsLike | number | string | null
    subscription?: $Enums.Subscription
    subscriptionStart?: Date | string | null
    subscriptionEnd?: Date | string | null
    language?: $Enums.Language
    currency?: $Enums.Currency
    timezone?: string
    notifications?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLoginAt?: Date | string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    twoFactorEnabled?: boolean
    twoFactorSecret?: string | null
    twoFactorBackupCodes?: UserCreatetwoFactorBackupCodesInput | string[]
    twoFactorEnabledAt?: Date | string | null
    twoFactorDisabledAt?: Date | string | null
    financialTests?: FinancialTestCreateNestedManyWithoutUserInput
    marketplaceOrders?: MarketplaceOrderCreateNestedManyWithoutUserInput
    receipts?: ReceiptCreateNestedManyWithoutUserInput
    userSessions?: UserSessionCreateNestedManyWithoutUserInput
    aiInteractions?: AIInteractionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutUserPreferencesInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    phone?: string | null
    dateOfBirth?: Date | string | null
    gender?: $Enums.Gender | null
    profileImage?: string | null
    financialLevel?: $Enums.FinancialLevel
    monthlyIncome?: Decimal | DecimalJsLike | number | string | null
    monthlyExpenses?: Decimal | DecimalJsLike | number | string | null
    savingsGoal?: Decimal | DecimalJsLike | number | string | null
    subscription?: $Enums.Subscription
    subscriptionStart?: Date | string | null
    subscriptionEnd?: Date | string | null
    language?: $Enums.Language
    currency?: $Enums.Currency
    timezone?: string
    notifications?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLoginAt?: Date | string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    twoFactorEnabled?: boolean
    twoFactorSecret?: string | null
    twoFactorBackupCodes?: UserCreatetwoFactorBackupCodesInput | string[]
    twoFactorEnabledAt?: Date | string | null
    twoFactorDisabledAt?: Date | string | null
    financialTests?: FinancialTestUncheckedCreateNestedManyWithoutUserInput
    marketplaceOrders?: MarketplaceOrderUncheckedCreateNestedManyWithoutUserInput
    receipts?: ReceiptUncheckedCreateNestedManyWithoutUserInput
    userSessions?: UserSessionUncheckedCreateNestedManyWithoutUserInput
    aiInteractions?: AIInteractionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutUserPreferencesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUserPreferencesInput, UserUncheckedCreateWithoutUserPreferencesInput>
  }

  export type UserUpsertWithoutUserPreferencesInput = {
    update: XOR<UserUpdateWithoutUserPreferencesInput, UserUncheckedUpdateWithoutUserPreferencesInput>
    create: XOR<UserCreateWithoutUserPreferencesInput, UserUncheckedCreateWithoutUserPreferencesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutUserPreferencesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutUserPreferencesInput, UserUncheckedUpdateWithoutUserPreferencesInput>
  }

  export type UserUpdateWithoutUserPreferencesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | $Enums.Gender | null
    profileImage?: NullableStringFieldUpdateOperationsInput | string | null
    financialLevel?: EnumFinancialLevelFieldUpdateOperationsInput | $Enums.FinancialLevel
    monthlyIncome?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    monthlyExpenses?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    savingsGoal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    subscription?: EnumSubscriptionFieldUpdateOperationsInput | $Enums.Subscription
    subscriptionStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    subscriptionEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    language?: EnumLanguageFieldUpdateOperationsInput | $Enums.Language
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    timezone?: StringFieldUpdateOperationsInput | string
    notifications?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    twoFactorEnabled?: BoolFieldUpdateOperationsInput | boolean
    twoFactorSecret?: NullableStringFieldUpdateOperationsInput | string | null
    twoFactorBackupCodes?: UserUpdatetwoFactorBackupCodesInput | string[]
    twoFactorEnabledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    twoFactorDisabledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    financialTests?: FinancialTestUpdateManyWithoutUserNestedInput
    marketplaceOrders?: MarketplaceOrderUpdateManyWithoutUserNestedInput
    receipts?: ReceiptUpdateManyWithoutUserNestedInput
    userSessions?: UserSessionUpdateManyWithoutUserNestedInput
    aiInteractions?: AIInteractionUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutUserPreferencesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | $Enums.Gender | null
    profileImage?: NullableStringFieldUpdateOperationsInput | string | null
    financialLevel?: EnumFinancialLevelFieldUpdateOperationsInput | $Enums.FinancialLevel
    monthlyIncome?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    monthlyExpenses?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    savingsGoal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    subscription?: EnumSubscriptionFieldUpdateOperationsInput | $Enums.Subscription
    subscriptionStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    subscriptionEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    language?: EnumLanguageFieldUpdateOperationsInput | $Enums.Language
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    timezone?: StringFieldUpdateOperationsInput | string
    notifications?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    twoFactorEnabled?: BoolFieldUpdateOperationsInput | boolean
    twoFactorSecret?: NullableStringFieldUpdateOperationsInput | string | null
    twoFactorBackupCodes?: UserUpdatetwoFactorBackupCodesInput | string[]
    twoFactorEnabledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    twoFactorDisabledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    financialTests?: FinancialTestUncheckedUpdateManyWithoutUserNestedInput
    marketplaceOrders?: MarketplaceOrderUncheckedUpdateManyWithoutUserNestedInput
    receipts?: ReceiptUncheckedUpdateManyWithoutUserNestedInput
    userSessions?: UserSessionUncheckedUpdateManyWithoutUserNestedInput
    aiInteractions?: AIInteractionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateWithoutReceiptsInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    phone?: string | null
    dateOfBirth?: Date | string | null
    gender?: $Enums.Gender | null
    profileImage?: string | null
    financialLevel?: $Enums.FinancialLevel
    monthlyIncome?: Decimal | DecimalJsLike | number | string | null
    monthlyExpenses?: Decimal | DecimalJsLike | number | string | null
    savingsGoal?: Decimal | DecimalJsLike | number | string | null
    subscription?: $Enums.Subscription
    subscriptionStart?: Date | string | null
    subscriptionEnd?: Date | string | null
    language?: $Enums.Language
    currency?: $Enums.Currency
    timezone?: string
    notifications?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLoginAt?: Date | string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    twoFactorEnabled?: boolean
    twoFactorSecret?: string | null
    twoFactorBackupCodes?: UserCreatetwoFactorBackupCodesInput | string[]
    twoFactorEnabledAt?: Date | string | null
    twoFactorDisabledAt?: Date | string | null
    financialTests?: FinancialTestCreateNestedManyWithoutUserInput
    marketplaceOrders?: MarketplaceOrderCreateNestedManyWithoutUserInput
    userPreferences?: UserPreferenceCreateNestedOneWithoutUserInput
    userSessions?: UserSessionCreateNestedManyWithoutUserInput
    aiInteractions?: AIInteractionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutReceiptsInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    phone?: string | null
    dateOfBirth?: Date | string | null
    gender?: $Enums.Gender | null
    profileImage?: string | null
    financialLevel?: $Enums.FinancialLevel
    monthlyIncome?: Decimal | DecimalJsLike | number | string | null
    monthlyExpenses?: Decimal | DecimalJsLike | number | string | null
    savingsGoal?: Decimal | DecimalJsLike | number | string | null
    subscription?: $Enums.Subscription
    subscriptionStart?: Date | string | null
    subscriptionEnd?: Date | string | null
    language?: $Enums.Language
    currency?: $Enums.Currency
    timezone?: string
    notifications?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLoginAt?: Date | string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    twoFactorEnabled?: boolean
    twoFactorSecret?: string | null
    twoFactorBackupCodes?: UserCreatetwoFactorBackupCodesInput | string[]
    twoFactorEnabledAt?: Date | string | null
    twoFactorDisabledAt?: Date | string | null
    financialTests?: FinancialTestUncheckedCreateNestedManyWithoutUserInput
    marketplaceOrders?: MarketplaceOrderUncheckedCreateNestedManyWithoutUserInput
    userPreferences?: UserPreferenceUncheckedCreateNestedOneWithoutUserInput
    userSessions?: UserSessionUncheckedCreateNestedManyWithoutUserInput
    aiInteractions?: AIInteractionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutReceiptsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutReceiptsInput, UserUncheckedCreateWithoutReceiptsInput>
  }

  export type UserUpsertWithoutReceiptsInput = {
    update: XOR<UserUpdateWithoutReceiptsInput, UserUncheckedUpdateWithoutReceiptsInput>
    create: XOR<UserCreateWithoutReceiptsInput, UserUncheckedCreateWithoutReceiptsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutReceiptsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutReceiptsInput, UserUncheckedUpdateWithoutReceiptsInput>
  }

  export type UserUpdateWithoutReceiptsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | $Enums.Gender | null
    profileImage?: NullableStringFieldUpdateOperationsInput | string | null
    financialLevel?: EnumFinancialLevelFieldUpdateOperationsInput | $Enums.FinancialLevel
    monthlyIncome?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    monthlyExpenses?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    savingsGoal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    subscription?: EnumSubscriptionFieldUpdateOperationsInput | $Enums.Subscription
    subscriptionStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    subscriptionEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    language?: EnumLanguageFieldUpdateOperationsInput | $Enums.Language
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    timezone?: StringFieldUpdateOperationsInput | string
    notifications?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    twoFactorEnabled?: BoolFieldUpdateOperationsInput | boolean
    twoFactorSecret?: NullableStringFieldUpdateOperationsInput | string | null
    twoFactorBackupCodes?: UserUpdatetwoFactorBackupCodesInput | string[]
    twoFactorEnabledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    twoFactorDisabledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    financialTests?: FinancialTestUpdateManyWithoutUserNestedInput
    marketplaceOrders?: MarketplaceOrderUpdateManyWithoutUserNestedInput
    userPreferences?: UserPreferenceUpdateOneWithoutUserNestedInput
    userSessions?: UserSessionUpdateManyWithoutUserNestedInput
    aiInteractions?: AIInteractionUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutReceiptsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | $Enums.Gender | null
    profileImage?: NullableStringFieldUpdateOperationsInput | string | null
    financialLevel?: EnumFinancialLevelFieldUpdateOperationsInput | $Enums.FinancialLevel
    monthlyIncome?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    monthlyExpenses?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    savingsGoal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    subscription?: EnumSubscriptionFieldUpdateOperationsInput | $Enums.Subscription
    subscriptionStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    subscriptionEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    language?: EnumLanguageFieldUpdateOperationsInput | $Enums.Language
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    timezone?: StringFieldUpdateOperationsInput | string
    notifications?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    twoFactorEnabled?: BoolFieldUpdateOperationsInput | boolean
    twoFactorSecret?: NullableStringFieldUpdateOperationsInput | string | null
    twoFactorBackupCodes?: UserUpdatetwoFactorBackupCodesInput | string[]
    twoFactorEnabledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    twoFactorDisabledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    financialTests?: FinancialTestUncheckedUpdateManyWithoutUserNestedInput
    marketplaceOrders?: MarketplaceOrderUncheckedUpdateManyWithoutUserNestedInput
    userPreferences?: UserPreferenceUncheckedUpdateOneWithoutUserNestedInput
    userSessions?: UserSessionUncheckedUpdateManyWithoutUserNestedInput
    aiInteractions?: AIInteractionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateWithoutFinancialTestsInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    phone?: string | null
    dateOfBirth?: Date | string | null
    gender?: $Enums.Gender | null
    profileImage?: string | null
    financialLevel?: $Enums.FinancialLevel
    monthlyIncome?: Decimal | DecimalJsLike | number | string | null
    monthlyExpenses?: Decimal | DecimalJsLike | number | string | null
    savingsGoal?: Decimal | DecimalJsLike | number | string | null
    subscription?: $Enums.Subscription
    subscriptionStart?: Date | string | null
    subscriptionEnd?: Date | string | null
    language?: $Enums.Language
    currency?: $Enums.Currency
    timezone?: string
    notifications?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLoginAt?: Date | string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    twoFactorEnabled?: boolean
    twoFactorSecret?: string | null
    twoFactorBackupCodes?: UserCreatetwoFactorBackupCodesInput | string[]
    twoFactorEnabledAt?: Date | string | null
    twoFactorDisabledAt?: Date | string | null
    marketplaceOrders?: MarketplaceOrderCreateNestedManyWithoutUserInput
    receipts?: ReceiptCreateNestedManyWithoutUserInput
    userPreferences?: UserPreferenceCreateNestedOneWithoutUserInput
    userSessions?: UserSessionCreateNestedManyWithoutUserInput
    aiInteractions?: AIInteractionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutFinancialTestsInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    phone?: string | null
    dateOfBirth?: Date | string | null
    gender?: $Enums.Gender | null
    profileImage?: string | null
    financialLevel?: $Enums.FinancialLevel
    monthlyIncome?: Decimal | DecimalJsLike | number | string | null
    monthlyExpenses?: Decimal | DecimalJsLike | number | string | null
    savingsGoal?: Decimal | DecimalJsLike | number | string | null
    subscription?: $Enums.Subscription
    subscriptionStart?: Date | string | null
    subscriptionEnd?: Date | string | null
    language?: $Enums.Language
    currency?: $Enums.Currency
    timezone?: string
    notifications?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLoginAt?: Date | string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    twoFactorEnabled?: boolean
    twoFactorSecret?: string | null
    twoFactorBackupCodes?: UserCreatetwoFactorBackupCodesInput | string[]
    twoFactorEnabledAt?: Date | string | null
    twoFactorDisabledAt?: Date | string | null
    marketplaceOrders?: MarketplaceOrderUncheckedCreateNestedManyWithoutUserInput
    receipts?: ReceiptUncheckedCreateNestedManyWithoutUserInput
    userPreferences?: UserPreferenceUncheckedCreateNestedOneWithoutUserInput
    userSessions?: UserSessionUncheckedCreateNestedManyWithoutUserInput
    aiInteractions?: AIInteractionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutFinancialTestsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutFinancialTestsInput, UserUncheckedCreateWithoutFinancialTestsInput>
  }

  export type UserUpsertWithoutFinancialTestsInput = {
    update: XOR<UserUpdateWithoutFinancialTestsInput, UserUncheckedUpdateWithoutFinancialTestsInput>
    create: XOR<UserCreateWithoutFinancialTestsInput, UserUncheckedCreateWithoutFinancialTestsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutFinancialTestsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutFinancialTestsInput, UserUncheckedUpdateWithoutFinancialTestsInput>
  }

  export type UserUpdateWithoutFinancialTestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | $Enums.Gender | null
    profileImage?: NullableStringFieldUpdateOperationsInput | string | null
    financialLevel?: EnumFinancialLevelFieldUpdateOperationsInput | $Enums.FinancialLevel
    monthlyIncome?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    monthlyExpenses?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    savingsGoal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    subscription?: EnumSubscriptionFieldUpdateOperationsInput | $Enums.Subscription
    subscriptionStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    subscriptionEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    language?: EnumLanguageFieldUpdateOperationsInput | $Enums.Language
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    timezone?: StringFieldUpdateOperationsInput | string
    notifications?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    twoFactorEnabled?: BoolFieldUpdateOperationsInput | boolean
    twoFactorSecret?: NullableStringFieldUpdateOperationsInput | string | null
    twoFactorBackupCodes?: UserUpdatetwoFactorBackupCodesInput | string[]
    twoFactorEnabledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    twoFactorDisabledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marketplaceOrders?: MarketplaceOrderUpdateManyWithoutUserNestedInput
    receipts?: ReceiptUpdateManyWithoutUserNestedInput
    userPreferences?: UserPreferenceUpdateOneWithoutUserNestedInput
    userSessions?: UserSessionUpdateManyWithoutUserNestedInput
    aiInteractions?: AIInteractionUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutFinancialTestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | $Enums.Gender | null
    profileImage?: NullableStringFieldUpdateOperationsInput | string | null
    financialLevel?: EnumFinancialLevelFieldUpdateOperationsInput | $Enums.FinancialLevel
    monthlyIncome?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    monthlyExpenses?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    savingsGoal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    subscription?: EnumSubscriptionFieldUpdateOperationsInput | $Enums.Subscription
    subscriptionStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    subscriptionEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    language?: EnumLanguageFieldUpdateOperationsInput | $Enums.Language
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    timezone?: StringFieldUpdateOperationsInput | string
    notifications?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    twoFactorEnabled?: BoolFieldUpdateOperationsInput | boolean
    twoFactorSecret?: NullableStringFieldUpdateOperationsInput | string | null
    twoFactorBackupCodes?: UserUpdatetwoFactorBackupCodesInput | string[]
    twoFactorEnabledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    twoFactorDisabledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marketplaceOrders?: MarketplaceOrderUncheckedUpdateManyWithoutUserNestedInput
    receipts?: ReceiptUncheckedUpdateManyWithoutUserNestedInput
    userPreferences?: UserPreferenceUncheckedUpdateOneWithoutUserNestedInput
    userSessions?: UserSessionUncheckedUpdateManyWithoutUserNestedInput
    aiInteractions?: AIInteractionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateWithoutAiInteractionsInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    phone?: string | null
    dateOfBirth?: Date | string | null
    gender?: $Enums.Gender | null
    profileImage?: string | null
    financialLevel?: $Enums.FinancialLevel
    monthlyIncome?: Decimal | DecimalJsLike | number | string | null
    monthlyExpenses?: Decimal | DecimalJsLike | number | string | null
    savingsGoal?: Decimal | DecimalJsLike | number | string | null
    subscription?: $Enums.Subscription
    subscriptionStart?: Date | string | null
    subscriptionEnd?: Date | string | null
    language?: $Enums.Language
    currency?: $Enums.Currency
    timezone?: string
    notifications?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLoginAt?: Date | string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    twoFactorEnabled?: boolean
    twoFactorSecret?: string | null
    twoFactorBackupCodes?: UserCreatetwoFactorBackupCodesInput | string[]
    twoFactorEnabledAt?: Date | string | null
    twoFactorDisabledAt?: Date | string | null
    financialTests?: FinancialTestCreateNestedManyWithoutUserInput
    marketplaceOrders?: MarketplaceOrderCreateNestedManyWithoutUserInput
    receipts?: ReceiptCreateNestedManyWithoutUserInput
    userPreferences?: UserPreferenceCreateNestedOneWithoutUserInput
    userSessions?: UserSessionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutAiInteractionsInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    phone?: string | null
    dateOfBirth?: Date | string | null
    gender?: $Enums.Gender | null
    profileImage?: string | null
    financialLevel?: $Enums.FinancialLevel
    monthlyIncome?: Decimal | DecimalJsLike | number | string | null
    monthlyExpenses?: Decimal | DecimalJsLike | number | string | null
    savingsGoal?: Decimal | DecimalJsLike | number | string | null
    subscription?: $Enums.Subscription
    subscriptionStart?: Date | string | null
    subscriptionEnd?: Date | string | null
    language?: $Enums.Language
    currency?: $Enums.Currency
    timezone?: string
    notifications?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLoginAt?: Date | string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    twoFactorEnabled?: boolean
    twoFactorSecret?: string | null
    twoFactorBackupCodes?: UserCreatetwoFactorBackupCodesInput | string[]
    twoFactorEnabledAt?: Date | string | null
    twoFactorDisabledAt?: Date | string | null
    financialTests?: FinancialTestUncheckedCreateNestedManyWithoutUserInput
    marketplaceOrders?: MarketplaceOrderUncheckedCreateNestedManyWithoutUserInput
    receipts?: ReceiptUncheckedCreateNestedManyWithoutUserInput
    userPreferences?: UserPreferenceUncheckedCreateNestedOneWithoutUserInput
    userSessions?: UserSessionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutAiInteractionsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutAiInteractionsInput, UserUncheckedCreateWithoutAiInteractionsInput>
  }

  export type UserUpsertWithoutAiInteractionsInput = {
    update: XOR<UserUpdateWithoutAiInteractionsInput, UserUncheckedUpdateWithoutAiInteractionsInput>
    create: XOR<UserCreateWithoutAiInteractionsInput, UserUncheckedCreateWithoutAiInteractionsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutAiInteractionsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutAiInteractionsInput, UserUncheckedUpdateWithoutAiInteractionsInput>
  }

  export type UserUpdateWithoutAiInteractionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | $Enums.Gender | null
    profileImage?: NullableStringFieldUpdateOperationsInput | string | null
    financialLevel?: EnumFinancialLevelFieldUpdateOperationsInput | $Enums.FinancialLevel
    monthlyIncome?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    monthlyExpenses?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    savingsGoal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    subscription?: EnumSubscriptionFieldUpdateOperationsInput | $Enums.Subscription
    subscriptionStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    subscriptionEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    language?: EnumLanguageFieldUpdateOperationsInput | $Enums.Language
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    timezone?: StringFieldUpdateOperationsInput | string
    notifications?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    twoFactorEnabled?: BoolFieldUpdateOperationsInput | boolean
    twoFactorSecret?: NullableStringFieldUpdateOperationsInput | string | null
    twoFactorBackupCodes?: UserUpdatetwoFactorBackupCodesInput | string[]
    twoFactorEnabledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    twoFactorDisabledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    financialTests?: FinancialTestUpdateManyWithoutUserNestedInput
    marketplaceOrders?: MarketplaceOrderUpdateManyWithoutUserNestedInput
    receipts?: ReceiptUpdateManyWithoutUserNestedInput
    userPreferences?: UserPreferenceUpdateOneWithoutUserNestedInput
    userSessions?: UserSessionUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutAiInteractionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | $Enums.Gender | null
    profileImage?: NullableStringFieldUpdateOperationsInput | string | null
    financialLevel?: EnumFinancialLevelFieldUpdateOperationsInput | $Enums.FinancialLevel
    monthlyIncome?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    monthlyExpenses?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    savingsGoal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    subscription?: EnumSubscriptionFieldUpdateOperationsInput | $Enums.Subscription
    subscriptionStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    subscriptionEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    language?: EnumLanguageFieldUpdateOperationsInput | $Enums.Language
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    timezone?: StringFieldUpdateOperationsInput | string
    notifications?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    twoFactorEnabled?: BoolFieldUpdateOperationsInput | boolean
    twoFactorSecret?: NullableStringFieldUpdateOperationsInput | string | null
    twoFactorBackupCodes?: UserUpdatetwoFactorBackupCodesInput | string[]
    twoFactorEnabledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    twoFactorDisabledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    financialTests?: FinancialTestUncheckedUpdateManyWithoutUserNestedInput
    marketplaceOrders?: MarketplaceOrderUncheckedUpdateManyWithoutUserNestedInput
    receipts?: ReceiptUncheckedUpdateManyWithoutUserNestedInput
    userPreferences?: UserPreferenceUncheckedUpdateOneWithoutUserNestedInput
    userSessions?: UserSessionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type MarketplaceOrderCreateWithoutProductInput = {
    id?: string
    orderNumber: string
    amount: Decimal | DecimalJsLike | number | string
    currency?: $Enums.Currency
    status?: $Enums.OrderStatus
    paymentMethod: $Enums.PaymentMethod
    paymentGateway: $Enums.PaymentGateway
    transactionId?: string | null
    paymentStatus?: $Enums.PaymentStatus
    commission?: Decimal | DecimalJsLike | number | string | null
    commissionRate?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    paidAt?: Date | string | null
    user: UserCreateNestedOneWithoutMarketplaceOrdersInput
  }

  export type MarketplaceOrderUncheckedCreateWithoutProductInput = {
    id?: string
    userId: string
    orderNumber: string
    amount: Decimal | DecimalJsLike | number | string
    currency?: $Enums.Currency
    status?: $Enums.OrderStatus
    paymentMethod: $Enums.PaymentMethod
    paymentGateway: $Enums.PaymentGateway
    transactionId?: string | null
    paymentStatus?: $Enums.PaymentStatus
    commission?: Decimal | DecimalJsLike | number | string | null
    commissionRate?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    paidAt?: Date | string | null
  }

  export type MarketplaceOrderCreateOrConnectWithoutProductInput = {
    where: MarketplaceOrderWhereUniqueInput
    create: XOR<MarketplaceOrderCreateWithoutProductInput, MarketplaceOrderUncheckedCreateWithoutProductInput>
  }

  export type MarketplaceOrderCreateManyProductInputEnvelope = {
    data: MarketplaceOrderCreateManyProductInput | MarketplaceOrderCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type ProductReviewCreateWithoutProductInput = {
    id?: string
    userId: string
    rating: number
    title?: string | null
    comment?: string | null
    isVerified?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductReviewUncheckedCreateWithoutProductInput = {
    id?: string
    userId: string
    rating: number
    title?: string | null
    comment?: string | null
    isVerified?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductReviewCreateOrConnectWithoutProductInput = {
    where: ProductReviewWhereUniqueInput
    create: XOR<ProductReviewCreateWithoutProductInput, ProductReviewUncheckedCreateWithoutProductInput>
  }

  export type ProductReviewCreateManyProductInputEnvelope = {
    data: ProductReviewCreateManyProductInput | ProductReviewCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type MarketplaceOrderUpsertWithWhereUniqueWithoutProductInput = {
    where: MarketplaceOrderWhereUniqueInput
    update: XOR<MarketplaceOrderUpdateWithoutProductInput, MarketplaceOrderUncheckedUpdateWithoutProductInput>
    create: XOR<MarketplaceOrderCreateWithoutProductInput, MarketplaceOrderUncheckedCreateWithoutProductInput>
  }

  export type MarketplaceOrderUpdateWithWhereUniqueWithoutProductInput = {
    where: MarketplaceOrderWhereUniqueInput
    data: XOR<MarketplaceOrderUpdateWithoutProductInput, MarketplaceOrderUncheckedUpdateWithoutProductInput>
  }

  export type MarketplaceOrderUpdateManyWithWhereWithoutProductInput = {
    where: MarketplaceOrderScalarWhereInput
    data: XOR<MarketplaceOrderUpdateManyMutationInput, MarketplaceOrderUncheckedUpdateManyWithoutProductInput>
  }

  export type ProductReviewUpsertWithWhereUniqueWithoutProductInput = {
    where: ProductReviewWhereUniqueInput
    update: XOR<ProductReviewUpdateWithoutProductInput, ProductReviewUncheckedUpdateWithoutProductInput>
    create: XOR<ProductReviewCreateWithoutProductInput, ProductReviewUncheckedCreateWithoutProductInput>
  }

  export type ProductReviewUpdateWithWhereUniqueWithoutProductInput = {
    where: ProductReviewWhereUniqueInput
    data: XOR<ProductReviewUpdateWithoutProductInput, ProductReviewUncheckedUpdateWithoutProductInput>
  }

  export type ProductReviewUpdateManyWithWhereWithoutProductInput = {
    where: ProductReviewScalarWhereInput
    data: XOR<ProductReviewUpdateManyMutationInput, ProductReviewUncheckedUpdateManyWithoutProductInput>
  }

  export type ProductReviewScalarWhereInput = {
    AND?: ProductReviewScalarWhereInput | ProductReviewScalarWhereInput[]
    OR?: ProductReviewScalarWhereInput[]
    NOT?: ProductReviewScalarWhereInput | ProductReviewScalarWhereInput[]
    id?: StringFilter<"ProductReview"> | string
    productId?: StringFilter<"ProductReview"> | string
    userId?: StringFilter<"ProductReview"> | string
    rating?: IntFilter<"ProductReview"> | number
    title?: StringNullableFilter<"ProductReview"> | string | null
    comment?: StringNullableFilter<"ProductReview"> | string | null
    isVerified?: BoolFilter<"ProductReview"> | boolean
    createdAt?: DateTimeFilter<"ProductReview"> | Date | string
    updatedAt?: DateTimeFilter<"ProductReview"> | Date | string
  }

  export type MarketplaceProductCreateWithoutOrdersInput = {
    id?: string
    name: string
    description: string
    shortDescription?: string | null
    category: $Enums.ProductCategory
    subcategory?: string | null
    price: Decimal | DecimalJsLike | number | string
    currency?: $Enums.Currency
    originalPrice?: Decimal | DecimalJsLike | number | string | null
    discount?: number | null
    providerId: string
    providerName: string
    providerLogo?: string | null
    images?: MarketplaceProductCreateimagesInput | string[]
    videoUrl?: string | null
    duration?: string | null
    level?: $Enums.FinancialLevel | null
    features?: MarketplaceProductCreatefeaturesInput | string[]
    requirements?: string | null
    whatYouWillLearn?: string | null
    averageRating?: number
    totalReviews?: number
    totalSales?: number
    isActive?: boolean
    isFeatured?: boolean
    isPopular?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    reviews?: ProductReviewCreateNestedManyWithoutProductInput
  }

  export type MarketplaceProductUncheckedCreateWithoutOrdersInput = {
    id?: string
    name: string
    description: string
    shortDescription?: string | null
    category: $Enums.ProductCategory
    subcategory?: string | null
    price: Decimal | DecimalJsLike | number | string
    currency?: $Enums.Currency
    originalPrice?: Decimal | DecimalJsLike | number | string | null
    discount?: number | null
    providerId: string
    providerName: string
    providerLogo?: string | null
    images?: MarketplaceProductCreateimagesInput | string[]
    videoUrl?: string | null
    duration?: string | null
    level?: $Enums.FinancialLevel | null
    features?: MarketplaceProductCreatefeaturesInput | string[]
    requirements?: string | null
    whatYouWillLearn?: string | null
    averageRating?: number
    totalReviews?: number
    totalSales?: number
    isActive?: boolean
    isFeatured?: boolean
    isPopular?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    reviews?: ProductReviewUncheckedCreateNestedManyWithoutProductInput
  }

  export type MarketplaceProductCreateOrConnectWithoutOrdersInput = {
    where: MarketplaceProductWhereUniqueInput
    create: XOR<MarketplaceProductCreateWithoutOrdersInput, MarketplaceProductUncheckedCreateWithoutOrdersInput>
  }

  export type UserCreateWithoutMarketplaceOrdersInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    phone?: string | null
    dateOfBirth?: Date | string | null
    gender?: $Enums.Gender | null
    profileImage?: string | null
    financialLevel?: $Enums.FinancialLevel
    monthlyIncome?: Decimal | DecimalJsLike | number | string | null
    monthlyExpenses?: Decimal | DecimalJsLike | number | string | null
    savingsGoal?: Decimal | DecimalJsLike | number | string | null
    subscription?: $Enums.Subscription
    subscriptionStart?: Date | string | null
    subscriptionEnd?: Date | string | null
    language?: $Enums.Language
    currency?: $Enums.Currency
    timezone?: string
    notifications?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLoginAt?: Date | string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    twoFactorEnabled?: boolean
    twoFactorSecret?: string | null
    twoFactorBackupCodes?: UserCreatetwoFactorBackupCodesInput | string[]
    twoFactorEnabledAt?: Date | string | null
    twoFactorDisabledAt?: Date | string | null
    financialTests?: FinancialTestCreateNestedManyWithoutUserInput
    receipts?: ReceiptCreateNestedManyWithoutUserInput
    userPreferences?: UserPreferenceCreateNestedOneWithoutUserInput
    userSessions?: UserSessionCreateNestedManyWithoutUserInput
    aiInteractions?: AIInteractionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutMarketplaceOrdersInput = {
    id?: string
    email: string
    password: string
    firstName: string
    lastName: string
    phone?: string | null
    dateOfBirth?: Date | string | null
    gender?: $Enums.Gender | null
    profileImage?: string | null
    financialLevel?: $Enums.FinancialLevel
    monthlyIncome?: Decimal | DecimalJsLike | number | string | null
    monthlyExpenses?: Decimal | DecimalJsLike | number | string | null
    savingsGoal?: Decimal | DecimalJsLike | number | string | null
    subscription?: $Enums.Subscription
    subscriptionStart?: Date | string | null
    subscriptionEnd?: Date | string | null
    language?: $Enums.Language
    currency?: $Enums.Currency
    timezone?: string
    notifications?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLoginAt?: Date | string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    twoFactorEnabled?: boolean
    twoFactorSecret?: string | null
    twoFactorBackupCodes?: UserCreatetwoFactorBackupCodesInput | string[]
    twoFactorEnabledAt?: Date | string | null
    twoFactorDisabledAt?: Date | string | null
    financialTests?: FinancialTestUncheckedCreateNestedManyWithoutUserInput
    receipts?: ReceiptUncheckedCreateNestedManyWithoutUserInput
    userPreferences?: UserPreferenceUncheckedCreateNestedOneWithoutUserInput
    userSessions?: UserSessionUncheckedCreateNestedManyWithoutUserInput
    aiInteractions?: AIInteractionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutMarketplaceOrdersInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutMarketplaceOrdersInput, UserUncheckedCreateWithoutMarketplaceOrdersInput>
  }

  export type MarketplaceProductUpsertWithoutOrdersInput = {
    update: XOR<MarketplaceProductUpdateWithoutOrdersInput, MarketplaceProductUncheckedUpdateWithoutOrdersInput>
    create: XOR<MarketplaceProductCreateWithoutOrdersInput, MarketplaceProductUncheckedCreateWithoutOrdersInput>
    where?: MarketplaceProductWhereInput
  }

  export type MarketplaceProductUpdateToOneWithWhereWithoutOrdersInput = {
    where?: MarketplaceProductWhereInput
    data: XOR<MarketplaceProductUpdateWithoutOrdersInput, MarketplaceProductUncheckedUpdateWithoutOrdersInput>
  }

  export type MarketplaceProductUpdateWithoutOrdersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    category?: EnumProductCategoryFieldUpdateOperationsInput | $Enums.ProductCategory
    subcategory?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    originalPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    discount?: NullableIntFieldUpdateOperationsInput | number | null
    providerId?: StringFieldUpdateOperationsInput | string
    providerName?: StringFieldUpdateOperationsInput | string
    providerLogo?: NullableStringFieldUpdateOperationsInput | string | null
    images?: MarketplaceProductUpdateimagesInput | string[]
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: NullableStringFieldUpdateOperationsInput | string | null
    level?: NullableEnumFinancialLevelFieldUpdateOperationsInput | $Enums.FinancialLevel | null
    features?: MarketplaceProductUpdatefeaturesInput | string[]
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    whatYouWillLearn?: NullableStringFieldUpdateOperationsInput | string | null
    averageRating?: FloatFieldUpdateOperationsInput | number
    totalReviews?: IntFieldUpdateOperationsInput | number
    totalSales?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isPopular?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviews?: ProductReviewUpdateManyWithoutProductNestedInput
  }

  export type MarketplaceProductUncheckedUpdateWithoutOrdersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    category?: EnumProductCategoryFieldUpdateOperationsInput | $Enums.ProductCategory
    subcategory?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    originalPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    discount?: NullableIntFieldUpdateOperationsInput | number | null
    providerId?: StringFieldUpdateOperationsInput | string
    providerName?: StringFieldUpdateOperationsInput | string
    providerLogo?: NullableStringFieldUpdateOperationsInput | string | null
    images?: MarketplaceProductUpdateimagesInput | string[]
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: NullableStringFieldUpdateOperationsInput | string | null
    level?: NullableEnumFinancialLevelFieldUpdateOperationsInput | $Enums.FinancialLevel | null
    features?: MarketplaceProductUpdatefeaturesInput | string[]
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    whatYouWillLearn?: NullableStringFieldUpdateOperationsInput | string | null
    averageRating?: FloatFieldUpdateOperationsInput | number
    totalReviews?: IntFieldUpdateOperationsInput | number
    totalSales?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isPopular?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviews?: ProductReviewUncheckedUpdateManyWithoutProductNestedInput
  }

  export type UserUpsertWithoutMarketplaceOrdersInput = {
    update: XOR<UserUpdateWithoutMarketplaceOrdersInput, UserUncheckedUpdateWithoutMarketplaceOrdersInput>
    create: XOR<UserCreateWithoutMarketplaceOrdersInput, UserUncheckedCreateWithoutMarketplaceOrdersInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutMarketplaceOrdersInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutMarketplaceOrdersInput, UserUncheckedUpdateWithoutMarketplaceOrdersInput>
  }

  export type UserUpdateWithoutMarketplaceOrdersInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | $Enums.Gender | null
    profileImage?: NullableStringFieldUpdateOperationsInput | string | null
    financialLevel?: EnumFinancialLevelFieldUpdateOperationsInput | $Enums.FinancialLevel
    monthlyIncome?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    monthlyExpenses?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    savingsGoal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    subscription?: EnumSubscriptionFieldUpdateOperationsInput | $Enums.Subscription
    subscriptionStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    subscriptionEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    language?: EnumLanguageFieldUpdateOperationsInput | $Enums.Language
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    timezone?: StringFieldUpdateOperationsInput | string
    notifications?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    twoFactorEnabled?: BoolFieldUpdateOperationsInput | boolean
    twoFactorSecret?: NullableStringFieldUpdateOperationsInput | string | null
    twoFactorBackupCodes?: UserUpdatetwoFactorBackupCodesInput | string[]
    twoFactorEnabledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    twoFactorDisabledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    financialTests?: FinancialTestUpdateManyWithoutUserNestedInput
    receipts?: ReceiptUpdateManyWithoutUserNestedInput
    userPreferences?: UserPreferenceUpdateOneWithoutUserNestedInput
    userSessions?: UserSessionUpdateManyWithoutUserNestedInput
    aiInteractions?: AIInteractionUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutMarketplaceOrdersInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    gender?: NullableEnumGenderFieldUpdateOperationsInput | $Enums.Gender | null
    profileImage?: NullableStringFieldUpdateOperationsInput | string | null
    financialLevel?: EnumFinancialLevelFieldUpdateOperationsInput | $Enums.FinancialLevel
    monthlyIncome?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    monthlyExpenses?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    savingsGoal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    subscription?: EnumSubscriptionFieldUpdateOperationsInput | $Enums.Subscription
    subscriptionStart?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    subscriptionEnd?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    language?: EnumLanguageFieldUpdateOperationsInput | $Enums.Language
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    timezone?: StringFieldUpdateOperationsInput | string
    notifications?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    twoFactorEnabled?: BoolFieldUpdateOperationsInput | boolean
    twoFactorSecret?: NullableStringFieldUpdateOperationsInput | string | null
    twoFactorBackupCodes?: UserUpdatetwoFactorBackupCodesInput | string[]
    twoFactorEnabledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    twoFactorDisabledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    financialTests?: FinancialTestUncheckedUpdateManyWithoutUserNestedInput
    receipts?: ReceiptUncheckedUpdateManyWithoutUserNestedInput
    userPreferences?: UserPreferenceUncheckedUpdateOneWithoutUserNestedInput
    userSessions?: UserSessionUncheckedUpdateManyWithoutUserNestedInput
    aiInteractions?: AIInteractionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type MarketplaceProductCreateWithoutReviewsInput = {
    id?: string
    name: string
    description: string
    shortDescription?: string | null
    category: $Enums.ProductCategory
    subcategory?: string | null
    price: Decimal | DecimalJsLike | number | string
    currency?: $Enums.Currency
    originalPrice?: Decimal | DecimalJsLike | number | string | null
    discount?: number | null
    providerId: string
    providerName: string
    providerLogo?: string | null
    images?: MarketplaceProductCreateimagesInput | string[]
    videoUrl?: string | null
    duration?: string | null
    level?: $Enums.FinancialLevel | null
    features?: MarketplaceProductCreatefeaturesInput | string[]
    requirements?: string | null
    whatYouWillLearn?: string | null
    averageRating?: number
    totalReviews?: number
    totalSales?: number
    isActive?: boolean
    isFeatured?: boolean
    isPopular?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    orders?: MarketplaceOrderCreateNestedManyWithoutProductInput
  }

  export type MarketplaceProductUncheckedCreateWithoutReviewsInput = {
    id?: string
    name: string
    description: string
    shortDescription?: string | null
    category: $Enums.ProductCategory
    subcategory?: string | null
    price: Decimal | DecimalJsLike | number | string
    currency?: $Enums.Currency
    originalPrice?: Decimal | DecimalJsLike | number | string | null
    discount?: number | null
    providerId: string
    providerName: string
    providerLogo?: string | null
    images?: MarketplaceProductCreateimagesInput | string[]
    videoUrl?: string | null
    duration?: string | null
    level?: $Enums.FinancialLevel | null
    features?: MarketplaceProductCreatefeaturesInput | string[]
    requirements?: string | null
    whatYouWillLearn?: string | null
    averageRating?: number
    totalReviews?: number
    totalSales?: number
    isActive?: boolean
    isFeatured?: boolean
    isPopular?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    orders?: MarketplaceOrderUncheckedCreateNestedManyWithoutProductInput
  }

  export type MarketplaceProductCreateOrConnectWithoutReviewsInput = {
    where: MarketplaceProductWhereUniqueInput
    create: XOR<MarketplaceProductCreateWithoutReviewsInput, MarketplaceProductUncheckedCreateWithoutReviewsInput>
  }

  export type MarketplaceProductUpsertWithoutReviewsInput = {
    update: XOR<MarketplaceProductUpdateWithoutReviewsInput, MarketplaceProductUncheckedUpdateWithoutReviewsInput>
    create: XOR<MarketplaceProductCreateWithoutReviewsInput, MarketplaceProductUncheckedCreateWithoutReviewsInput>
    where?: MarketplaceProductWhereInput
  }

  export type MarketplaceProductUpdateToOneWithWhereWithoutReviewsInput = {
    where?: MarketplaceProductWhereInput
    data: XOR<MarketplaceProductUpdateWithoutReviewsInput, MarketplaceProductUncheckedUpdateWithoutReviewsInput>
  }

  export type MarketplaceProductUpdateWithoutReviewsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    category?: EnumProductCategoryFieldUpdateOperationsInput | $Enums.ProductCategory
    subcategory?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    originalPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    discount?: NullableIntFieldUpdateOperationsInput | number | null
    providerId?: StringFieldUpdateOperationsInput | string
    providerName?: StringFieldUpdateOperationsInput | string
    providerLogo?: NullableStringFieldUpdateOperationsInput | string | null
    images?: MarketplaceProductUpdateimagesInput | string[]
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: NullableStringFieldUpdateOperationsInput | string | null
    level?: NullableEnumFinancialLevelFieldUpdateOperationsInput | $Enums.FinancialLevel | null
    features?: MarketplaceProductUpdatefeaturesInput | string[]
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    whatYouWillLearn?: NullableStringFieldUpdateOperationsInput | string | null
    averageRating?: FloatFieldUpdateOperationsInput | number
    totalReviews?: IntFieldUpdateOperationsInput | number
    totalSales?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isPopular?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    orders?: MarketplaceOrderUpdateManyWithoutProductNestedInput
  }

  export type MarketplaceProductUncheckedUpdateWithoutReviewsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    category?: EnumProductCategoryFieldUpdateOperationsInput | $Enums.ProductCategory
    subcategory?: NullableStringFieldUpdateOperationsInput | string | null
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    originalPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    discount?: NullableIntFieldUpdateOperationsInput | number | null
    providerId?: StringFieldUpdateOperationsInput | string
    providerName?: StringFieldUpdateOperationsInput | string
    providerLogo?: NullableStringFieldUpdateOperationsInput | string | null
    images?: MarketplaceProductUpdateimagesInput | string[]
    videoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: NullableStringFieldUpdateOperationsInput | string | null
    level?: NullableEnumFinancialLevelFieldUpdateOperationsInput | $Enums.FinancialLevel | null
    features?: MarketplaceProductUpdatefeaturesInput | string[]
    requirements?: NullableStringFieldUpdateOperationsInput | string | null
    whatYouWillLearn?: NullableStringFieldUpdateOperationsInput | string | null
    averageRating?: FloatFieldUpdateOperationsInput | number
    totalReviews?: IntFieldUpdateOperationsInput | number
    totalSales?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isPopular?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    orders?: MarketplaceOrderUncheckedUpdateManyWithoutProductNestedInput
  }

  export type FinancialTestCreateManyUserInput = {
    id?: string
    testVersion?: string
    questions: JsonNullValueInput | InputJsonValue
    score: number
    level: $Enums.FinancialLevel
    recommendations?: NullableJsonNullValueInput | InputJsonValue
    completedAt?: Date | string
  }

  export type MarketplaceOrderCreateManyUserInput = {
    id?: string
    productId: string
    orderNumber: string
    amount: Decimal | DecimalJsLike | number | string
    currency?: $Enums.Currency
    status?: $Enums.OrderStatus
    paymentMethod: $Enums.PaymentMethod
    paymentGateway: $Enums.PaymentGateway
    transactionId?: string | null
    paymentStatus?: $Enums.PaymentStatus
    commission?: Decimal | DecimalJsLike | number | string | null
    commissionRate?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    paidAt?: Date | string | null
  }

  export type ReceiptCreateManyUserInput = {
    id?: string
    imageUrl?: string | null
    merchantName: string
    amount: Decimal | DecimalJsLike | number | string
    currency?: $Enums.Currency
    transactionDate: Date | string
    category: $Enums.ReceiptCategory
    subcategory?: string | null
    paymentMethod?: $Enums.PaymentMethod | null
    location?: string | null
    notes?: string | null
    ocrConfidence?: number | null
    ocrRawText?: string | null
    ocrProcessed?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserSessionCreateManyUserInput = {
    id?: string
    token: string
    refreshToken: string
    deviceInfo?: NullableJsonNullValueInput | InputJsonValue
    ipAddress?: string | null
    userAgent?: string | null
    isActive?: boolean
    expiresAt: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AIInteractionCreateManyUserInput = {
    id?: string
    sessionId?: string | null
    interactionType: $Enums.AIInteractionType
    userMessage: string
    aiResponse: string
    model?: string
    tokensUsed?: number | null
    responseTime?: number | null
    isFinancialQuery?: boolean
    queryCategory?: $Enums.FinancialQueryCategory | null
    disclaimerShown?: boolean
    disclaimerVersion?: string
    userRating?: number | null
    userFeedback?: string | null
    ipAddress?: string | null
    userAgent?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FinancialTestUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    testVersion?: StringFieldUpdateOperationsInput | string
    questions?: JsonNullValueInput | InputJsonValue
    score?: IntFieldUpdateOperationsInput | number
    level?: EnumFinancialLevelFieldUpdateOperationsInput | $Enums.FinancialLevel
    recommendations?: NullableJsonNullValueInput | InputJsonValue
    completedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FinancialTestUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    testVersion?: StringFieldUpdateOperationsInput | string
    questions?: JsonNullValueInput | InputJsonValue
    score?: IntFieldUpdateOperationsInput | number
    level?: EnumFinancialLevelFieldUpdateOperationsInput | $Enums.FinancialLevel
    recommendations?: NullableJsonNullValueInput | InputJsonValue
    completedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FinancialTestUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    testVersion?: StringFieldUpdateOperationsInput | string
    questions?: JsonNullValueInput | InputJsonValue
    score?: IntFieldUpdateOperationsInput | number
    level?: EnumFinancialLevelFieldUpdateOperationsInput | $Enums.FinancialLevel
    recommendations?: NullableJsonNullValueInput | InputJsonValue
    completedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MarketplaceOrderUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    paymentMethod?: EnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod
    paymentGateway?: EnumPaymentGatewayFieldUpdateOperationsInput | $Enums.PaymentGateway
    transactionId?: NullableStringFieldUpdateOperationsInput | string | null
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    commission?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    commissionRate?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    product?: MarketplaceProductUpdateOneRequiredWithoutOrdersNestedInput
  }

  export type MarketplaceOrderUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    paymentMethod?: EnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod
    paymentGateway?: EnumPaymentGatewayFieldUpdateOperationsInput | $Enums.PaymentGateway
    transactionId?: NullableStringFieldUpdateOperationsInput | string | null
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    commission?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    commissionRate?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MarketplaceOrderUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    paymentMethod?: EnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod
    paymentGateway?: EnumPaymentGatewayFieldUpdateOperationsInput | $Enums.PaymentGateway
    transactionId?: NullableStringFieldUpdateOperationsInput | string | null
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    commission?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    commissionRate?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ReceiptUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    merchantName?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    transactionDate?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: EnumReceiptCategoryFieldUpdateOperationsInput | $Enums.ReceiptCategory
    subcategory?: NullableStringFieldUpdateOperationsInput | string | null
    paymentMethod?: NullableEnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    ocrConfidence?: NullableFloatFieldUpdateOperationsInput | number | null
    ocrRawText?: NullableStringFieldUpdateOperationsInput | string | null
    ocrProcessed?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReceiptUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    merchantName?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    transactionDate?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: EnumReceiptCategoryFieldUpdateOperationsInput | $Enums.ReceiptCategory
    subcategory?: NullableStringFieldUpdateOperationsInput | string | null
    paymentMethod?: NullableEnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    ocrConfidence?: NullableFloatFieldUpdateOperationsInput | number | null
    ocrRawText?: NullableStringFieldUpdateOperationsInput | string | null
    ocrProcessed?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReceiptUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    merchantName?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    transactionDate?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: EnumReceiptCategoryFieldUpdateOperationsInput | $Enums.ReceiptCategory
    subcategory?: NullableStringFieldUpdateOperationsInput | string | null
    paymentMethod?: NullableEnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    ocrConfidence?: NullableFloatFieldUpdateOperationsInput | number | null
    ocrRawText?: NullableStringFieldUpdateOperationsInput | string | null
    ocrProcessed?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserSessionUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    refreshToken?: StringFieldUpdateOperationsInput | string
    deviceInfo?: NullableJsonNullValueInput | InputJsonValue
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserSessionUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    refreshToken?: StringFieldUpdateOperationsInput | string
    deviceInfo?: NullableJsonNullValueInput | InputJsonValue
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserSessionUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    refreshToken?: StringFieldUpdateOperationsInput | string
    deviceInfo?: NullableJsonNullValueInput | InputJsonValue
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AIInteractionUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
    interactionType?: EnumAIInteractionTypeFieldUpdateOperationsInput | $Enums.AIInteractionType
    userMessage?: StringFieldUpdateOperationsInput | string
    aiResponse?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    tokensUsed?: NullableIntFieldUpdateOperationsInput | number | null
    responseTime?: NullableIntFieldUpdateOperationsInput | number | null
    isFinancialQuery?: BoolFieldUpdateOperationsInput | boolean
    queryCategory?: NullableEnumFinancialQueryCategoryFieldUpdateOperationsInput | $Enums.FinancialQueryCategory | null
    disclaimerShown?: BoolFieldUpdateOperationsInput | boolean
    disclaimerVersion?: StringFieldUpdateOperationsInput | string
    userRating?: NullableIntFieldUpdateOperationsInput | number | null
    userFeedback?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AIInteractionUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
    interactionType?: EnumAIInteractionTypeFieldUpdateOperationsInput | $Enums.AIInteractionType
    userMessage?: StringFieldUpdateOperationsInput | string
    aiResponse?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    tokensUsed?: NullableIntFieldUpdateOperationsInput | number | null
    responseTime?: NullableIntFieldUpdateOperationsInput | number | null
    isFinancialQuery?: BoolFieldUpdateOperationsInput | boolean
    queryCategory?: NullableEnumFinancialQueryCategoryFieldUpdateOperationsInput | $Enums.FinancialQueryCategory | null
    disclaimerShown?: BoolFieldUpdateOperationsInput | boolean
    disclaimerVersion?: StringFieldUpdateOperationsInput | string
    userRating?: NullableIntFieldUpdateOperationsInput | number | null
    userFeedback?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AIInteractionUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
    interactionType?: EnumAIInteractionTypeFieldUpdateOperationsInput | $Enums.AIInteractionType
    userMessage?: StringFieldUpdateOperationsInput | string
    aiResponse?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    tokensUsed?: NullableIntFieldUpdateOperationsInput | number | null
    responseTime?: NullableIntFieldUpdateOperationsInput | number | null
    isFinancialQuery?: BoolFieldUpdateOperationsInput | boolean
    queryCategory?: NullableEnumFinancialQueryCategoryFieldUpdateOperationsInput | $Enums.FinancialQueryCategory | null
    disclaimerShown?: BoolFieldUpdateOperationsInput | boolean
    disclaimerVersion?: StringFieldUpdateOperationsInput | string
    userRating?: NullableIntFieldUpdateOperationsInput | number | null
    userFeedback?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MarketplaceOrderCreateManyProductInput = {
    id?: string
    userId: string
    orderNumber: string
    amount: Decimal | DecimalJsLike | number | string
    currency?: $Enums.Currency
    status?: $Enums.OrderStatus
    paymentMethod: $Enums.PaymentMethod
    paymentGateway: $Enums.PaymentGateway
    transactionId?: string | null
    paymentStatus?: $Enums.PaymentStatus
    commission?: Decimal | DecimalJsLike | number | string | null
    commissionRate?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    paidAt?: Date | string | null
  }

  export type ProductReviewCreateManyProductInput = {
    id?: string
    userId: string
    rating: number
    title?: string | null
    comment?: string | null
    isVerified?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type MarketplaceOrderUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    paymentMethod?: EnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod
    paymentGateway?: EnumPaymentGatewayFieldUpdateOperationsInput | $Enums.PaymentGateway
    transactionId?: NullableStringFieldUpdateOperationsInput | string | null
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    commission?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    commissionRate?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user?: UserUpdateOneRequiredWithoutMarketplaceOrdersNestedInput
  }

  export type MarketplaceOrderUncheckedUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    paymentMethod?: EnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod
    paymentGateway?: EnumPaymentGatewayFieldUpdateOperationsInput | $Enums.PaymentGateway
    transactionId?: NullableStringFieldUpdateOperationsInput | string | null
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    commission?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    commissionRate?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MarketplaceOrderUncheckedUpdateManyWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    paymentMethod?: EnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod
    paymentGateway?: EnumPaymentGatewayFieldUpdateOperationsInput | $Enums.PaymentGateway
    transactionId?: NullableStringFieldUpdateOperationsInput | string | null
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    commission?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    commissionRate?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paidAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ProductReviewUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductReviewUncheckedUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductReviewUncheckedUpdateManyWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use UserCountOutputTypeDefaultArgs instead
     */
    export type UserCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UserCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use MarketplaceProductCountOutputTypeDefaultArgs instead
     */
    export type MarketplaceProductCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = MarketplaceProductCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UserDefaultArgs instead
     */
    export type UserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UserDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UserSessionDefaultArgs instead
     */
    export type UserSessionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UserSessionDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UserPreferenceDefaultArgs instead
     */
    export type UserPreferenceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UserPreferenceDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ReceiptDefaultArgs instead
     */
    export type ReceiptArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ReceiptDefaultArgs<ExtArgs>
    /**
     * @deprecated Use FinancialTestDefaultArgs instead
     */
    export type FinancialTestArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = FinancialTestDefaultArgs<ExtArgs>
    /**
     * @deprecated Use AIInteractionDefaultArgs instead
     */
    export type AIInteractionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = AIInteractionDefaultArgs<ExtArgs>
    /**
     * @deprecated Use MarketplaceProductDefaultArgs instead
     */
    export type MarketplaceProductArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = MarketplaceProductDefaultArgs<ExtArgs>
    /**
     * @deprecated Use MarketplaceOrderDefaultArgs instead
     */
    export type MarketplaceOrderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = MarketplaceOrderDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ProductReviewDefaultArgs instead
     */
    export type ProductReviewArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ProductReviewDefaultArgs<ExtArgs>
    /**
     * @deprecated Use AuditLogDefaultArgs instead
     */
    export type AuditLogArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = AuditLogDefaultArgs<ExtArgs>
    /**
     * @deprecated Use SecurityLogDefaultArgs instead
     */
    export type SecurityLogArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = SecurityLogDefaultArgs<ExtArgs>
    /**
     * @deprecated Use IPBlacklistDefaultArgs instead
     */
    export type IPBlacklistArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = IPBlacklistDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}